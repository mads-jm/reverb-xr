/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/css-loader/dist/cjs.js!./src/styles/main.css":
/*!*******************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./src/styles/main.css ***!
  \*******************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../node_modules/css-loader/dist/runtime/sourceMaps.js */ \"./node_modules/css-loader/dist/runtime/sourceMaps.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../node_modules/css-loader/dist/runtime/api.js */ \"./node_modules/css-loader/dist/runtime/api.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `/* ====== VARIABLES ====== */\r\n:root {\r\n  /* Colors */\r\n  --bg-color: #282c34;\r\n  --text-color: white;\r\n  --accent-color: #1DB954; /* Spotify green */\r\n  --accent-hover: #1ed760;\r\n  --border-color: rgba(255, 255, 255, 0.2);\r\n  --panel-bg: rgba(0, 0, 0, 0.7);\r\n  --control-bg: #444;\r\n  --control-hover: #555;\r\n  --disabled-bg: #333;\r\n  --disabled-text: #666;\r\n  \r\n  /* Spacing */\r\n  --spacing-xs: 2px;\r\n  --spacing-sm: 5px;\r\n  --spacing-md: 10px;\r\n  --spacing-lg: 20px;\r\n}\r\n\r\n/* ====== BASE STYLES ====== */\r\nbody {\r\n  font-family: Arial, Helvetica, sans-serif;\r\n  background-color: var(--bg-color);\r\n  color: var(--text-color);\r\n  margin: 0;\r\n  display: flex;\r\n  height: 100vh;\r\n}\r\n\r\nh1, h2, h3, h4, h5, h6 {\r\n  margin-top: 0;\r\n}\r\n\r\n#aframe-iframe {\r\n  width: 100%;\r\n  height: 100vh;\r\n  border: none;\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n}\r\n\r\n/* ====== CONTROL PANEL ====== */\r\n.control-panel {\r\n  position: absolute;\r\n  top: 10px;\r\n  left: 10px;\r\n  background-color: var(--panel-bg);\r\n  color: var(--text-color);\r\n  padding: var(--spacing-md);\r\n  border-radius: 5px;\r\n  z-index: 100;\r\n  width: 250px;\r\n  max-height: 90vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n/* Panel Header */\r\n.panel-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: flex-start;\r\n  cursor: pointer;\r\n  margin-bottom: var(--spacing-md);\r\n  flex-shrink: 0;\r\n}\r\n\r\n.header-text {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n}\r\n\r\n.header-text h2 {\r\n  margin: 0;\r\n  font-size: 18px;\r\n  line-height: 1.2;\r\n}\r\n\r\n.header-text h3 {\r\n  margin: 0;\r\n  font-size: 16px;\r\n  font-weight: normal;\r\n  line-height: 1.2;\r\n}\r\n\r\n.version-text {\r\n  margin: 2px 0 0 0;\r\n  font-size: 12px;\r\n  color: #aaa;\r\n  font-style: italic;\r\n}\r\n\r\n/* Panel Content */\r\n.panel-content {\r\n  overflow-y: auto;\r\n  overflow-x: hidden;\r\n  transition: max-height 0.3s ease;\r\n  max-height: calc(90vh - 60px);\r\n  scrollbar-width: thin;\r\n  scrollbar-color: rgba(255, 255, 255, 0.3) transparent;\r\n}\r\n\r\n.panel-content.collapsed {\r\n  max-height: 0;\r\n  overflow: hidden;\r\n}\r\n\r\n/* Custom scrollbar */\r\n.panel-content::-webkit-scrollbar {\r\n  width: 6px;\r\n}\r\n\r\n.panel-content::-webkit-scrollbar-track {\r\n  background: transparent;\r\n}\r\n\r\n.panel-content::-webkit-scrollbar-thumb {\r\n  background-color: rgba(255, 255, 255, 0.3);\r\n  border-radius: 3px;\r\n}\r\n\r\n/* Control Groups */\r\n.control-group {\r\n  margin-bottom: var(--spacing-md);\r\n  padding: var(--spacing-sm);\r\n  border-bottom: 1px solid var(--border-color);\r\n}\r\n\r\n.control-group h3 {\r\n  margin: 0 0 5px 0;\r\n  font-size: 14px;\r\n}\r\n\r\n.toggle-item {\r\n  display: flex;\r\n  align-items: center;\r\n  margin: 5px 0;\r\n  flex-wrap: nowrap;\r\n}\r\n\r\n.toggle-item label {\r\n  margin-left: 5px;\r\n  font-size: 14px;\r\n  white-space: nowrap;\r\n}\r\n\r\n/* ====== BUTTONS ====== */\r\n/* Base button styles */\r\n.control-button, .small-button, .play-pause-button {\r\n  border-radius: 20px;\r\n  cursor: pointer;\r\n  border: none;\r\n  color: var(--text-color);\r\n  transition: all 0.2s ease;\r\n}\r\n\r\n/* Control buttons (large) */\r\n.control-button {\r\n  background-color: var(--control-bg);\r\n  border: 1px solid #555;\r\n  padding: 6px 12px;\r\n  margin: 0 5px;\r\n  font-size: 14px;\r\n}\r\n\r\n.control-button:hover {\r\n  background-color: var(--control-hover);\r\n  transform: scale(1.05);\r\n}\r\n\r\n.control-button:active {\r\n  transform: scale(0.95);\r\n}\r\n\r\n/* Small action buttons */\r\n.small-button {\r\n  margin-left: var(--spacing-md);\r\n  padding: 2px 5px;\r\n  font-size: 12px;\r\n  background-color: var(--control-bg);\r\n}\r\n\r\n.small-button:hover {\r\n  background-color: var(--control-hover);\r\n}\r\n\r\n.small-button:disabled {\r\n  background-color: var(--disabled-bg);\r\n  color: var(--disabled-text);\r\n  cursor: not-allowed;\r\n}\r\n\r\n/* Accent buttons (green) */\r\n.play-pause-button, #demo-track-button, #spotify-play-pause, #start-system-audio {\r\n  background-color: var(--accent-color);\r\n  border: 1px solid var(--accent-color);\r\n  padding: 6px 12px;\r\n  font-size: 16px;\r\n}\r\n\r\n.play-pause-button:hover, #demo-track-button:hover, #spotify-play-pause:hover, #start-system-audio:hover {\r\n  background-color: var(--accent-hover);\r\n  box-shadow: 0 0 10px rgba(29, 185, 84, 0.5);\r\n  transform: scale(1.05);\r\n}\r\n\r\n.play-pause-button:active, #demo-track-button:active, #spotify-play-pause:active, #start-system-audio:active {\r\n  transform: scale(0.95);\r\n}\r\n\r\n/* Demo track button and playback controls */\r\n.demo-button-container {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 12px;\r\n  padding-bottom: 8px;\r\n  border-bottom: 1px dashed var(--border-color);\r\n}\r\n\r\n#demo-track-button {\r\n  background-color: var(--accent-color);\r\n  border-color: var(--accent-color);\r\n  color: white;\r\n  padding: 6px 12px;\r\n  border-radius: 20px;\r\n  cursor: pointer;\r\n  font-size: 14px;\r\n  transition: all 0.2s ease;\r\n  text-align: center;\r\n  border: 1px solid var(--accent-color);\r\n  flex-grow: 1;\r\n  margin-right: 10px;\r\n}\r\n\r\n#demo-track-button:hover {\r\n  background-color: var(--accent-hover);\r\n  box-shadow: 0 0 10px rgba(29, 185, 84, 0.5);\r\n  transform: scale(1.05);\r\n}\r\n\r\n#demo-track-button:active {\r\n  transform: scale(0.95);\r\n}\r\n\r\n/* Now playing section */\r\n.now-playing-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 10px;\r\n  padding: 5px;\r\n  background-color: rgba(0, 0, 0, 0.2);\r\n  border-radius: 4px;\r\n}\r\n\r\n.now-playing-label {\r\n  font-size: 12px;\r\n  color: #aaa;\r\n  margin-bottom: 3px;\r\n}\r\n\r\n.now-playing-text {\r\n  font-size: 14px;\r\n  font-weight: bold;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n}\r\n\r\n/* Playback controls */\r\n#playback-controls {\r\n  margin-bottom: var(--spacing-md);\r\n  width: 100%;\r\n}\r\n\r\n.controls-container {\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  background-color: var(--control-bg);\r\n  border-radius: 20px;\r\n  overflow: hidden;\r\n}\r\n\r\n.play-pause-button {\r\n  margin: 0;\r\n  min-width: 36px;\r\n  border-radius: 20px 0 0 20px;\r\n}\r\n\r\n/* Volume and sensitivity controls */\r\n.volume-control, .sensitivity-control {\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 0 8px;\r\n  flex-grow: 1;\r\n  height: 100%;\r\n}\r\n\r\n.controls-row {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-top: 8px;\r\n  padding: 5px 8px;\r\n  background-color: var(--control-bg);\r\n  border-radius: 20px;\r\n}\r\n\r\n.controls-row label {\r\n  margin-right: 8px;\r\n  font-size: 12px;\r\n  white-space: nowrap;\r\n  color: var(--text-color);\r\n  min-width: 80px;\r\n}\r\n\r\n.sensitivity-control {\r\n  display: flex;\r\n  align-items: center;\r\n  flex-grow: 1;\r\n}\r\n\r\n.volume-icon, .sensitivity-icon {\r\n  margin-right: 8px;\r\n}\r\n\r\ninput[type=\"range\"] {\r\n  width: 100%;\r\n  -webkit-appearance: none;\r\n  appearance: none;\r\n  height: 5px;\r\n  background: rgba(255, 255, 255, 0.3);\r\n  border-radius: 2px;\r\n}\r\n\r\ninput[type=\"range\"]::-webkit-slider-thumb {\r\n  -webkit-appearance: none;\r\n  appearance: none;\r\n  width: 15px;\r\n  height: 15px;\r\n  border-radius: 50%;\r\n  background: var(--accent-color);\r\n  cursor: pointer;\r\n}\r\n\r\ninput[type=\"range\"]::-moz-range-thumb {\r\n  width: 15px;\r\n  height: 15px;\r\n  border-radius: 50%;\r\n  background: var(--accent-color);\r\n  cursor: pointer;\r\n  border: none;\r\n}\r\n\r\n/* ====== INPUTS ====== */\r\n/* File input */\r\n.file-input-container {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-left: 5px;\r\n  flex-wrap: nowrap;\r\n  max-width: 180px;\r\n}\r\n\r\n#file-input {\r\n  width: 0.1px;\r\n  height: 0.1px;\r\n  opacity: 0;\r\n  overflow: hidden;\r\n  position: absolute;\r\n  z-index: -1;\r\n}\r\n\r\n.file-input-label {\r\n  cursor: pointer;\r\n  background-color: var(--control-bg);\r\n  color: var(--text-color);\r\n  padding: 2px 8px;\r\n  border-radius: 3px;\r\n  font-size: 12px;\r\n  white-space: nowrap;\r\n  min-width: 60px;\r\n  text-align: center;\r\n}\r\n\r\n.file-input-label:hover {\r\n  background-color: var(--control-hover);\r\n}\r\n\r\n/* ====== NOW PLAYING ====== */\r\n.audio-controls {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-top: var(--spacing-md);\r\n  width: 100%;\r\n}\r\n\r\n/* ====== SPOTIFY SECTION ====== */\r\n#spotify-controls {\r\n  margin-top: var(--spacing-md);\r\n}\r\n\r\n#spotify-now-playing {\r\n  margin: 5px 0;\r\n  padding: 8px;\r\n  background-color: rgba(30, 215, 96, 0.1);\r\n  border-radius: 5px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n\r\n#spotify-status {\r\n  font-size: 12px;\r\n  color: #aaa;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n#spotify-track-name {\r\n  font-weight: bold;\r\n  margin-bottom: 3px;\r\n}\r\n\r\n#spotify-track-artist {\r\n  font-size: 12px;\r\n  color: #aaa;\r\n}\r\n\r\n#spotify-controls-buttons {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin: 10px 0;\r\n  width: 100%;\r\n}\r\n\r\n#spotify-play-pause {\r\n  padding: 8px 16px;\r\n  font-size: 18px;\r\n}\r\n\r\n.spotify-note {\r\n  font-size: 12px;\r\n  color: #aaa;\r\n  text-align: center;\r\n  margin-top: var(--spacing-md);\r\n}\r\n\r\n#spotify-album-art {\r\n  width: 50px;\r\n  height: 50px;\r\n  margin: 3px 0;\r\n}\r\n\r\n#system-audio-container {\r\n  margin-top: 5px;\r\n  padding-top: 5px;\r\n  border-top: 1px dashed var(--border-color);\r\n}\r\n\r\n#system-audio-container label {\r\n  color: var(--accent-color);\r\n}\r\n\r\n/* ====== MODAL DIALOG ====== */\r\n.modal {\r\n  display: none;\r\n  position: fixed;\r\n  z-index: 1000;\r\n  left: 0;\r\n  top: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.7);\r\n}\r\n\r\n.modal-content {\r\n  background-color: #1e1e2e;\r\n  color: #cdd6f4;\r\n  margin: 15% auto;\r\n  padding: 20px;\r\n  border: 1px solid #7f849c;\r\n  border-radius: 8px;\r\n  width: 80%;\r\n  max-width: 500px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);\r\n}\r\n\r\n.close-modal {\r\n  color: #aaa;\r\n  float: right;\r\n  font-size: 28px;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n}\r\n\r\n.close-modal:hover,\r\n.close-modal:focus {\r\n  color: #cba6f7;\r\n  text-decoration: none;\r\n}\r\n\r\n.modal h3 {\r\n  margin-top: 0;\r\n  color: #cba6f7;\r\n}\r\n\r\n.modal input[type=\"text\"] {\r\n  width: 100%;\r\n  padding: 10px;\r\n  margin: 10px 0 20px 0;\r\n  border-radius: 4px;\r\n  border: 1px solid #7f849c;\r\n  background-color: #313244;\r\n  color: #cdd6f4;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.modal-buttons {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n}\r\n\r\n.modal-buttons button {\r\n  margin-left: 10px;\r\n  padding: 8px 16px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  background-color: #89b4fa;\r\n  color: #1e1e2e;\r\n  cursor: pointer;\r\n}\r\n\r\n.modal-buttons button:hover {\r\n  background-color: #b4befe;\r\n}\r\n\r\n/* ====== RESPONSIVE STYLES ====== */\r\n@media (max-height: 700px) {\r\n  .control-panel {\r\n    max-height: 85vh;\r\n  }\r\n  \r\n  .panel-content {\r\n    max-height: calc(85vh - 60px);\r\n  }\r\n  \r\n  .control-group {\r\n    margin-bottom: 5px;\r\n    padding: 3px;\r\n  }\r\n  \r\n  #spotify-album-art {\r\n    width: 40px;\r\n    height: 40px;\r\n  }\r\n  \r\n  .spotify-note p {\r\n    margin: 5px 0;\r\n  }\r\n}\r\n\r\n@media (max-height: 500px) {\r\n  .control-panel {\r\n    width: 220px;\r\n  }\r\n  \r\n  .header-text h2 {\r\n    font-size: 16px;\r\n  }\r\n  \r\n  .header-text h3 {\r\n    font-size: 14px;\r\n  }\r\n  \r\n  .control-group h3 {\r\n    font-size: 13px;\r\n  }\r\n  \r\n  .toggle-item label {\r\n    font-size: 12px;\r\n  }\r\n}\r\n\r\n/* ====== VISUALIZATION MODAL ====== */\r\n.full-width {\r\n  width: 100%;\r\n  margin: 0;\r\n}\r\n\r\n.viz-modal-content {\r\n  max-width: 600px;\r\n  max-height: 80vh;\r\n  overflow-y: auto;\r\n}\r\n\r\n.modal-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 15px;\r\n  padding-bottom: 10px;\r\n  border-bottom: 1px solid var(--border-color);\r\n}\r\n\r\n.modal-header h3 {\r\n  margin: 0;\r\n  color: var(--accent-color);\r\n}\r\n\r\n.modal-body {\r\n  overflow-y: auto;\r\n}\r\n\r\n.modal-body .control-group {\r\n  background-color: rgba(0, 0, 0, 0.2);\r\n  border-radius: 5px;\r\n  padding: 10px;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.modal-body .control-group h3 {\r\n  color: var(--accent-color);\r\n  margin-top: 0;\r\n  margin-bottom: 10px;\r\n  font-size: 16px;\r\n}\r\n\r\n.modal-body .toggle-item {\r\n  padding: 5px 0;\r\n}\r\n\r\n/* ====== ENHANCED MODAL STYLES ====== */\r\n.modal {\r\n  display: none;\r\n  position: fixed;\r\n  z-index: 1000;\r\n  left: 0;\r\n  top: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.7);\r\n  overflow: auto;\r\n  animation: fadeIn 0.3s;\r\n}\r\n\r\n.modal-content {\r\n  background-color: #1e1e2e;\r\n  color: #cdd6f4;\r\n  margin: 5% auto;\r\n  padding: 20px;\r\n  border: 1px solid #7f849c;\r\n  border-radius: 8px;\r\n  width: 80%;\r\n  max-width: 500px;\r\n  box-shadow: 0 4px 30px rgba(0, 0, 0, 0.5);\r\n  animation: slideIn 0.3s;\r\n  position: relative;\r\n}\r\n\r\n@keyframes fadeIn {\r\n  from { opacity: 0; }\r\n  to { opacity: 1; }\r\n}\r\n\r\n@keyframes slideIn {\r\n  from { transform: translateY(-50px); opacity: 0; }\r\n  to { transform: translateY(0); opacity: 1; }\r\n}\r\n\r\n.close-modal {\r\n  color: #aaa;\r\n  font-size: 28px;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n  transition: color 0.2s;\r\n}\r\n\r\n.close-modal:hover,\r\n.close-modal:focus {\r\n  color: var(--accent-color);\r\n  text-decoration: none;\r\n}\r\n\r\n/* ====== VISUALIZATION CONTROL PANEL ====== */\r\n.viz-control-panel {\r\n  position: absolute;\r\n  top: calc(10px + var(--spacing-md) + var(--spacing-md));\r\n  right: 10px;\r\n  background-color: var(--panel-bg);\r\n  color: var(--text-color);\r\n  padding: var(--spacing-md);\r\n  border-radius: 5px;\r\n  z-index: 100;\r\n  width: 250px;\r\n  max-height: 90vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);\r\n}\r\n\r\n.viz-panel-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  cursor: pointer;\r\n  margin-bottom: var(--spacing-md);\r\n  flex-shrink: 0;\r\n  padding-bottom: var(--spacing-sm);\r\n  border-bottom: 1px solid var(--border-color);\r\n}\r\n\r\n.viz-panel-header h3 {\r\n  margin: 0;\r\n  font-size: 16px;\r\n  line-height: 1.2;\r\n  color: var(--accent-color);\r\n}\r\n\r\n.viz-toggle-icon {\r\n  font-size: 14px;\r\n  transition: transform 0.3s ease;\r\n}\r\n\r\n.viz-panel-content {\r\n  overflow-y: auto;\r\n  overflow-x: hidden;\r\n  transition: max-height 0.3s ease;\r\n  max-height: calc(90vh - 60px);\r\n  scrollbar-width: thin;\r\n  scrollbar-color: rgba(255, 255, 255, 0.3) transparent;\r\n}\r\n\r\n.viz-panel-content.collapsed {\r\n  max-height: 0;\r\n  overflow: hidden;\r\n}\r\n\r\n/* Reusing existing scrollbar styles */\r\n.viz-panel-content::-webkit-scrollbar {\r\n  width: 6px;\r\n}\r\n\r\n.viz-panel-content::-webkit-scrollbar-track {\r\n  background: transparent;\r\n}\r\n\r\n.viz-panel-content::-webkit-scrollbar-thumb {\r\n  background-color: rgba(255, 255, 255, 0.3);\r\n  border-radius: 3px;\r\n}\r\n\r\n/* Media queries for responsive design */\r\n@media (max-width: 768px) {\r\n  .viz-control-panel {\r\n    left: 10px;\r\n    top: auto;\r\n    bottom: 10px;\r\n    width: calc(100% - 40px);\r\n    max-height: 40vh;\r\n  }\r\n} `, \"\",{\"version\":3,\"sources\":[\"webpack://./src/styles/main.css\"],\"names\":[],\"mappings\":\"AAAA,4BAA4B;AAC5B;EACE,WAAW;EACX,mBAAmB;EACnB,mBAAmB;EACnB,uBAAuB,EAAE,kBAAkB;EAC3C,uBAAuB;EACvB,wCAAwC;EACxC,8BAA8B;EAC9B,kBAAkB;EAClB,qBAAqB;EACrB,mBAAmB;EACnB,qBAAqB;;EAErB,YAAY;EACZ,iBAAiB;EACjB,iBAAiB;EACjB,kBAAkB;EAClB,kBAAkB;AACpB;;AAEA,8BAA8B;AAC9B;EACE,yCAAyC;EACzC,iCAAiC;EACjC,wBAAwB;EACxB,SAAS;EACT,aAAa;EACb,aAAa;AACf;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,WAAW;EACX,aAAa;EACb,YAAY;EACZ,kBAAkB;EAClB,MAAM;EACN,OAAO;AACT;;AAEA,gCAAgC;AAChC;EACE,kBAAkB;EAClB,SAAS;EACT,UAAU;EACV,iCAAiC;EACjC,wBAAwB;EACxB,0BAA0B;EAC1B,kBAAkB;EAClB,YAAY;EACZ,YAAY;EACZ,gBAAgB;EAChB,aAAa;EACb,sBAAsB;AACxB;;AAEA,iBAAiB;AACjB;EACE,aAAa;EACb,8BAA8B;EAC9B,uBAAuB;EACvB,eAAe;EACf,gCAAgC;EAChC,cAAc;AAChB;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,uBAAuB;AACzB;;AAEA;EACE,SAAS;EACT,eAAe;EACf,gBAAgB;AAClB;;AAEA;EACE,SAAS;EACT,eAAe;EACf,mBAAmB;EACnB,gBAAgB;AAClB;;AAEA;EACE,iBAAiB;EACjB,eAAe;EACf,WAAW;EACX,kBAAkB;AACpB;;AAEA,kBAAkB;AAClB;EACE,gBAAgB;EAChB,kBAAkB;EAClB,gCAAgC;EAChC,6BAA6B;EAC7B,qBAAqB;EACrB,qDAAqD;AACvD;;AAEA;EACE,aAAa;EACb,gBAAgB;AAClB;;AAEA,qBAAqB;AACrB;EACE,UAAU;AACZ;;AAEA;EACE,uBAAuB;AACzB;;AAEA;EACE,0CAA0C;EAC1C,kBAAkB;AACpB;;AAEA,mBAAmB;AACnB;EACE,gCAAgC;EAChC,0BAA0B;EAC1B,4CAA4C;AAC9C;;AAEA;EACE,iBAAiB;EACjB,eAAe;AACjB;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,aAAa;EACb,iBAAiB;AACnB;;AAEA;EACE,gBAAgB;EAChB,eAAe;EACf,mBAAmB;AACrB;;AAEA,0BAA0B;AAC1B,uBAAuB;AACvB;EACE,mBAAmB;EACnB,eAAe;EACf,YAAY;EACZ,wBAAwB;EACxB,yBAAyB;AAC3B;;AAEA,4BAA4B;AAC5B;EACE,mCAAmC;EACnC,sBAAsB;EACtB,iBAAiB;EACjB,aAAa;EACb,eAAe;AACjB;;AAEA;EACE,sCAAsC;EACtC,sBAAsB;AACxB;;AAEA;EACE,sBAAsB;AACxB;;AAEA,yBAAyB;AACzB;EACE,8BAA8B;EAC9B,gBAAgB;EAChB,eAAe;EACf,mCAAmC;AACrC;;AAEA;EACE,sCAAsC;AACxC;;AAEA;EACE,oCAAoC;EACpC,2BAA2B;EAC3B,mBAAmB;AACrB;;AAEA,2BAA2B;AAC3B;EACE,qCAAqC;EACrC,qCAAqC;EACrC,iBAAiB;EACjB,eAAe;AACjB;;AAEA;EACE,qCAAqC;EACrC,2CAA2C;EAC3C,sBAAsB;AACxB;;AAEA;EACE,sBAAsB;AACxB;;AAEA,4CAA4C;AAC5C;EACE,aAAa;EACb,8BAA8B;EAC9B,mBAAmB;EACnB,mBAAmB;EACnB,mBAAmB;EACnB,6CAA6C;AAC/C;;AAEA;EACE,qCAAqC;EACrC,iCAAiC;EACjC,YAAY;EACZ,iBAAiB;EACjB,mBAAmB;EACnB,eAAe;EACf,eAAe;EACf,yBAAyB;EACzB,kBAAkB;EAClB,qCAAqC;EACrC,YAAY;EACZ,kBAAkB;AACpB;;AAEA;EACE,qCAAqC;EACrC,2CAA2C;EAC3C,sBAAsB;AACxB;;AAEA;EACE,sBAAsB;AACxB;;AAEA,wBAAwB;AACxB;EACE,aAAa;EACb,sBAAsB;EACtB,mBAAmB;EACnB,YAAY;EACZ,oCAAoC;EACpC,kBAAkB;AACpB;;AAEA;EACE,eAAe;EACf,WAAW;EACX,kBAAkB;AACpB;;AAEA;EACE,eAAe;EACf,iBAAiB;EACjB,mBAAmB;EACnB,gBAAgB;EAChB,uBAAuB;AACzB;;AAEA,sBAAsB;AACtB;EACE,gCAAgC;EAChC,WAAW;AACb;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,WAAW;EACX,mCAAmC;EACnC,mBAAmB;EACnB,gBAAgB;AAClB;;AAEA;EACE,SAAS;EACT,eAAe;EACf,4BAA4B;AAC9B;;AAEA,oCAAoC;AACpC;EACE,aAAa;EACb,mBAAmB;EACnB,cAAc;EACd,YAAY;EACZ,YAAY;AACd;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,eAAe;EACf,gBAAgB;EAChB,mCAAmC;EACnC,mBAAmB;AACrB;;AAEA;EACE,iBAAiB;EACjB,eAAe;EACf,mBAAmB;EACnB,wBAAwB;EACxB,eAAe;AACjB;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,YAAY;AACd;;AAEA;EACE,iBAAiB;AACnB;;AAEA;EACE,WAAW;EACX,wBAAwB;EACxB,gBAAgB;EAChB,WAAW;EACX,oCAAoC;EACpC,kBAAkB;AACpB;;AAEA;EACE,wBAAwB;EACxB,gBAAgB;EAChB,WAAW;EACX,YAAY;EACZ,kBAAkB;EAClB,+BAA+B;EAC/B,eAAe;AACjB;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,kBAAkB;EAClB,+BAA+B;EAC/B,eAAe;EACf,YAAY;AACd;;AAEA,yBAAyB;AACzB,eAAe;AACf;EACE,aAAa;EACb,mBAAmB;EACnB,gBAAgB;EAChB,iBAAiB;EACjB,gBAAgB;AAClB;;AAEA;EACE,YAAY;EACZ,aAAa;EACb,UAAU;EACV,gBAAgB;EAChB,kBAAkB;EAClB,WAAW;AACb;;AAEA;EACE,eAAe;EACf,mCAAmC;EACnC,wBAAwB;EACxB,gBAAgB;EAChB,kBAAkB;EAClB,eAAe;EACf,mBAAmB;EACnB,eAAe;EACf,kBAAkB;AACpB;;AAEA;EACE,sCAAsC;AACxC;;AAEA,8BAA8B;AAC9B;EACE,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,6BAA6B;EAC7B,WAAW;AACb;;AAEA,kCAAkC;AAClC;EACE,6BAA6B;AAC/B;;AAEA;EACE,aAAa;EACb,YAAY;EACZ,wCAAwC;EACxC,kBAAkB;EAClB,aAAa;EACb,sBAAsB;EACtB,mBAAmB;AACrB;;AAEA;EACE,eAAe;EACf,WAAW;EACX,kBAAkB;AACpB;;AAEA;EACE,iBAAiB;EACjB,kBAAkB;AACpB;;AAEA;EACE,eAAe;EACf,WAAW;AACb;;AAEA;EACE,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,cAAc;EACd,WAAW;AACb;;AAEA;EACE,iBAAiB;EACjB,eAAe;AACjB;;AAEA;EACE,eAAe;EACf,WAAW;EACX,kBAAkB;EAClB,6BAA6B;AAC/B;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,aAAa;AACf;;AAEA;EACE,eAAe;EACf,gBAAgB;EAChB,0CAA0C;AAC5C;;AAEA;EACE,0BAA0B;AAC5B;;AAEA,+BAA+B;AAC/B;EACE,aAAa;EACb,eAAe;EACf,aAAa;EACb,OAAO;EACP,MAAM;EACN,WAAW;EACX,YAAY;EACZ,oCAAoC;AACtC;;AAEA;EACE,yBAAyB;EACzB,cAAc;EACd,gBAAgB;EAChB,aAAa;EACb,yBAAyB;EACzB,kBAAkB;EAClB,UAAU;EACV,gBAAgB;EAChB,wCAAwC;AAC1C;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,eAAe;EACf,iBAAiB;EACjB,eAAe;AACjB;;AAEA;;EAEE,cAAc;EACd,qBAAqB;AACvB;;AAEA;EACE,aAAa;EACb,cAAc;AAChB;;AAEA;EACE,WAAW;EACX,aAAa;EACb,qBAAqB;EACrB,kBAAkB;EAClB,yBAAyB;EACzB,yBAAyB;EACzB,cAAc;EACd,sBAAsB;AACxB;;AAEA;EACE,aAAa;EACb,yBAAyB;AAC3B;;AAEA;EACE,iBAAiB;EACjB,iBAAiB;EACjB,YAAY;EACZ,kBAAkB;EAClB,yBAAyB;EACzB,cAAc;EACd,eAAe;AACjB;;AAEA;EACE,yBAAyB;AAC3B;;AAEA,oCAAoC;AACpC;EACE;IACE,gBAAgB;EAClB;;EAEA;IACE,6BAA6B;EAC/B;;EAEA;IACE,kBAAkB;IAClB,YAAY;EACd;;EAEA;IACE,WAAW;IACX,YAAY;EACd;;EAEA;IACE,aAAa;EACf;AACF;;AAEA;EACE;IACE,YAAY;EACd;;EAEA;IACE,eAAe;EACjB;;EAEA;IACE,eAAe;EACjB;;EAEA;IACE,eAAe;EACjB;;EAEA;IACE,eAAe;EACjB;AACF;;AAEA,sCAAsC;AACtC;EACE,WAAW;EACX,SAAS;AACX;;AAEA;EACE,gBAAgB;EAChB,gBAAgB;EAChB,gBAAgB;AAClB;;AAEA;EACE,aAAa;EACb,8BAA8B;EAC9B,mBAAmB;EACnB,mBAAmB;EACnB,oBAAoB;EACpB,4CAA4C;AAC9C;;AAEA;EACE,SAAS;EACT,0BAA0B;AAC5B;;AAEA;EACE,gBAAgB;AAClB;;AAEA;EACE,oCAAoC;EACpC,kBAAkB;EAClB,aAAa;EACb,mBAAmB;AACrB;;AAEA;EACE,0BAA0B;EAC1B,aAAa;EACb,mBAAmB;EACnB,eAAe;AACjB;;AAEA;EACE,cAAc;AAChB;;AAEA,wCAAwC;AACxC;EACE,aAAa;EACb,eAAe;EACf,aAAa;EACb,OAAO;EACP,MAAM;EACN,WAAW;EACX,YAAY;EACZ,oCAAoC;EACpC,cAAc;EACd,sBAAsB;AACxB;;AAEA;EACE,yBAAyB;EACzB,cAAc;EACd,eAAe;EACf,aAAa;EACb,yBAAyB;EACzB,kBAAkB;EAClB,UAAU;EACV,gBAAgB;EAChB,yCAAyC;EACzC,uBAAuB;EACvB,kBAAkB;AACpB;;AAEA;EACE,OAAO,UAAU,EAAE;EACnB,KAAK,UAAU,EAAE;AACnB;;AAEA;EACE,OAAO,4BAA4B,EAAE,UAAU,EAAE;EACjD,KAAK,wBAAwB,EAAE,UAAU,EAAE;AAC7C;;AAEA;EACE,WAAW;EACX,eAAe;EACf,iBAAiB;EACjB,eAAe;EACf,sBAAsB;AACxB;;AAEA;;EAEE,0BAA0B;EAC1B,qBAAqB;AACvB;;AAEA,8CAA8C;AAC9C;EACE,kBAAkB;EAClB,uDAAuD;EACvD,WAAW;EACX,iCAAiC;EACjC,wBAAwB;EACxB,0BAA0B;EAC1B,kBAAkB;EAClB,YAAY;EACZ,YAAY;EACZ,gBAAgB;EAChB,aAAa;EACb,sBAAsB;EACtB,wCAAwC;AAC1C;;AAEA;EACE,aAAa;EACb,8BAA8B;EAC9B,mBAAmB;EACnB,eAAe;EACf,gCAAgC;EAChC,cAAc;EACd,iCAAiC;EACjC,4CAA4C;AAC9C;;AAEA;EACE,SAAS;EACT,eAAe;EACf,gBAAgB;EAChB,0BAA0B;AAC5B;;AAEA;EACE,eAAe;EACf,+BAA+B;AACjC;;AAEA;EACE,gBAAgB;EAChB,kBAAkB;EAClB,gCAAgC;EAChC,6BAA6B;EAC7B,qBAAqB;EACrB,qDAAqD;AACvD;;AAEA;EACE,aAAa;EACb,gBAAgB;AAClB;;AAEA,sCAAsC;AACtC;EACE,UAAU;AACZ;;AAEA;EACE,uBAAuB;AACzB;;AAEA;EACE,0CAA0C;EAC1C,kBAAkB;AACpB;;AAEA,wCAAwC;AACxC;EACE;IACE,UAAU;IACV,SAAS;IACT,YAAY;IACZ,wBAAwB;IACxB,gBAAgB;EAClB;AACF\",\"sourcesContent\":[\"/* ====== VARIABLES ====== */\\r\\n:root {\\r\\n  /* Colors */\\r\\n  --bg-color: #282c34;\\r\\n  --text-color: white;\\r\\n  --accent-color: #1DB954; /* Spotify green */\\r\\n  --accent-hover: #1ed760;\\r\\n  --border-color: rgba(255, 255, 255, 0.2);\\r\\n  --panel-bg: rgba(0, 0, 0, 0.7);\\r\\n  --control-bg: #444;\\r\\n  --control-hover: #555;\\r\\n  --disabled-bg: #333;\\r\\n  --disabled-text: #666;\\r\\n  \\r\\n  /* Spacing */\\r\\n  --spacing-xs: 2px;\\r\\n  --spacing-sm: 5px;\\r\\n  --spacing-md: 10px;\\r\\n  --spacing-lg: 20px;\\r\\n}\\r\\n\\r\\n/* ====== BASE STYLES ====== */\\r\\nbody {\\r\\n  font-family: Arial, Helvetica, sans-serif;\\r\\n  background-color: var(--bg-color);\\r\\n  color: var(--text-color);\\r\\n  margin: 0;\\r\\n  display: flex;\\r\\n  height: 100vh;\\r\\n}\\r\\n\\r\\nh1, h2, h3, h4, h5, h6 {\\r\\n  margin-top: 0;\\r\\n}\\r\\n\\r\\n#aframe-iframe {\\r\\n  width: 100%;\\r\\n  height: 100vh;\\r\\n  border: none;\\r\\n  position: absolute;\\r\\n  top: 0;\\r\\n  left: 0;\\r\\n}\\r\\n\\r\\n/* ====== CONTROL PANEL ====== */\\r\\n.control-panel {\\r\\n  position: absolute;\\r\\n  top: 10px;\\r\\n  left: 10px;\\r\\n  background-color: var(--panel-bg);\\r\\n  color: var(--text-color);\\r\\n  padding: var(--spacing-md);\\r\\n  border-radius: 5px;\\r\\n  z-index: 100;\\r\\n  width: 250px;\\r\\n  max-height: 90vh;\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n}\\r\\n\\r\\n/* Panel Header */\\r\\n.panel-header {\\r\\n  display: flex;\\r\\n  justify-content: space-between;\\r\\n  align-items: flex-start;\\r\\n  cursor: pointer;\\r\\n  margin-bottom: var(--spacing-md);\\r\\n  flex-shrink: 0;\\r\\n}\\r\\n\\r\\n.header-text {\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  align-items: flex-start;\\r\\n}\\r\\n\\r\\n.header-text h2 {\\r\\n  margin: 0;\\r\\n  font-size: 18px;\\r\\n  line-height: 1.2;\\r\\n}\\r\\n\\r\\n.header-text h3 {\\r\\n  margin: 0;\\r\\n  font-size: 16px;\\r\\n  font-weight: normal;\\r\\n  line-height: 1.2;\\r\\n}\\r\\n\\r\\n.version-text {\\r\\n  margin: 2px 0 0 0;\\r\\n  font-size: 12px;\\r\\n  color: #aaa;\\r\\n  font-style: italic;\\r\\n}\\r\\n\\r\\n/* Panel Content */\\r\\n.panel-content {\\r\\n  overflow-y: auto;\\r\\n  overflow-x: hidden;\\r\\n  transition: max-height 0.3s ease;\\r\\n  max-height: calc(90vh - 60px);\\r\\n  scrollbar-width: thin;\\r\\n  scrollbar-color: rgba(255, 255, 255, 0.3) transparent;\\r\\n}\\r\\n\\r\\n.panel-content.collapsed {\\r\\n  max-height: 0;\\r\\n  overflow: hidden;\\r\\n}\\r\\n\\r\\n/* Custom scrollbar */\\r\\n.panel-content::-webkit-scrollbar {\\r\\n  width: 6px;\\r\\n}\\r\\n\\r\\n.panel-content::-webkit-scrollbar-track {\\r\\n  background: transparent;\\r\\n}\\r\\n\\r\\n.panel-content::-webkit-scrollbar-thumb {\\r\\n  background-color: rgba(255, 255, 255, 0.3);\\r\\n  border-radius: 3px;\\r\\n}\\r\\n\\r\\n/* Control Groups */\\r\\n.control-group {\\r\\n  margin-bottom: var(--spacing-md);\\r\\n  padding: var(--spacing-sm);\\r\\n  border-bottom: 1px solid var(--border-color);\\r\\n}\\r\\n\\r\\n.control-group h3 {\\r\\n  margin: 0 0 5px 0;\\r\\n  font-size: 14px;\\r\\n}\\r\\n\\r\\n.toggle-item {\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  margin: 5px 0;\\r\\n  flex-wrap: nowrap;\\r\\n}\\r\\n\\r\\n.toggle-item label {\\r\\n  margin-left: 5px;\\r\\n  font-size: 14px;\\r\\n  white-space: nowrap;\\r\\n}\\r\\n\\r\\n/* ====== BUTTONS ====== */\\r\\n/* Base button styles */\\r\\n.control-button, .small-button, .play-pause-button {\\r\\n  border-radius: 20px;\\r\\n  cursor: pointer;\\r\\n  border: none;\\r\\n  color: var(--text-color);\\r\\n  transition: all 0.2s ease;\\r\\n}\\r\\n\\r\\n/* Control buttons (large) */\\r\\n.control-button {\\r\\n  background-color: var(--control-bg);\\r\\n  border: 1px solid #555;\\r\\n  padding: 6px 12px;\\r\\n  margin: 0 5px;\\r\\n  font-size: 14px;\\r\\n}\\r\\n\\r\\n.control-button:hover {\\r\\n  background-color: var(--control-hover);\\r\\n  transform: scale(1.05);\\r\\n}\\r\\n\\r\\n.control-button:active {\\r\\n  transform: scale(0.95);\\r\\n}\\r\\n\\r\\n/* Small action buttons */\\r\\n.small-button {\\r\\n  margin-left: var(--spacing-md);\\r\\n  padding: 2px 5px;\\r\\n  font-size: 12px;\\r\\n  background-color: var(--control-bg);\\r\\n}\\r\\n\\r\\n.small-button:hover {\\r\\n  background-color: var(--control-hover);\\r\\n}\\r\\n\\r\\n.small-button:disabled {\\r\\n  background-color: var(--disabled-bg);\\r\\n  color: var(--disabled-text);\\r\\n  cursor: not-allowed;\\r\\n}\\r\\n\\r\\n/* Accent buttons (green) */\\r\\n.play-pause-button, #demo-track-button, #spotify-play-pause, #start-system-audio {\\r\\n  background-color: var(--accent-color);\\r\\n  border: 1px solid var(--accent-color);\\r\\n  padding: 6px 12px;\\r\\n  font-size: 16px;\\r\\n}\\r\\n\\r\\n.play-pause-button:hover, #demo-track-button:hover, #spotify-play-pause:hover, #start-system-audio:hover {\\r\\n  background-color: var(--accent-hover);\\r\\n  box-shadow: 0 0 10px rgba(29, 185, 84, 0.5);\\r\\n  transform: scale(1.05);\\r\\n}\\r\\n\\r\\n.play-pause-button:active, #demo-track-button:active, #spotify-play-pause:active, #start-system-audio:active {\\r\\n  transform: scale(0.95);\\r\\n}\\r\\n\\r\\n/* Demo track button and playback controls */\\r\\n.demo-button-container {\\r\\n  display: flex;\\r\\n  justify-content: space-between;\\r\\n  align-items: center;\\r\\n  margin-bottom: 12px;\\r\\n  padding-bottom: 8px;\\r\\n  border-bottom: 1px dashed var(--border-color);\\r\\n}\\r\\n\\r\\n#demo-track-button {\\r\\n  background-color: var(--accent-color);\\r\\n  border-color: var(--accent-color);\\r\\n  color: white;\\r\\n  padding: 6px 12px;\\r\\n  border-radius: 20px;\\r\\n  cursor: pointer;\\r\\n  font-size: 14px;\\r\\n  transition: all 0.2s ease;\\r\\n  text-align: center;\\r\\n  border: 1px solid var(--accent-color);\\r\\n  flex-grow: 1;\\r\\n  margin-right: 10px;\\r\\n}\\r\\n\\r\\n#demo-track-button:hover {\\r\\n  background-color: var(--accent-hover);\\r\\n  box-shadow: 0 0 10px rgba(29, 185, 84, 0.5);\\r\\n  transform: scale(1.05);\\r\\n}\\r\\n\\r\\n#demo-track-button:active {\\r\\n  transform: scale(0.95);\\r\\n}\\r\\n\\r\\n/* Now playing section */\\r\\n.now-playing-container {\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  margin-bottom: 10px;\\r\\n  padding: 5px;\\r\\n  background-color: rgba(0, 0, 0, 0.2);\\r\\n  border-radius: 4px;\\r\\n}\\r\\n\\r\\n.now-playing-label {\\r\\n  font-size: 12px;\\r\\n  color: #aaa;\\r\\n  margin-bottom: 3px;\\r\\n}\\r\\n\\r\\n.now-playing-text {\\r\\n  font-size: 14px;\\r\\n  font-weight: bold;\\r\\n  white-space: nowrap;\\r\\n  overflow: hidden;\\r\\n  text-overflow: ellipsis;\\r\\n}\\r\\n\\r\\n/* Playback controls */\\r\\n#playback-controls {\\r\\n  margin-bottom: var(--spacing-md);\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.controls-container {\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  width: 100%;\\r\\n  background-color: var(--control-bg);\\r\\n  border-radius: 20px;\\r\\n  overflow: hidden;\\r\\n}\\r\\n\\r\\n.play-pause-button {\\r\\n  margin: 0;\\r\\n  min-width: 36px;\\r\\n  border-radius: 20px 0 0 20px;\\r\\n}\\r\\n\\r\\n/* Volume and sensitivity controls */\\r\\n.volume-control, .sensitivity-control {\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  padding: 0 8px;\\r\\n  flex-grow: 1;\\r\\n  height: 100%;\\r\\n}\\r\\n\\r\\n.controls-row {\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  margin-top: 8px;\\r\\n  padding: 5px 8px;\\r\\n  background-color: var(--control-bg);\\r\\n  border-radius: 20px;\\r\\n}\\r\\n\\r\\n.controls-row label {\\r\\n  margin-right: 8px;\\r\\n  font-size: 12px;\\r\\n  white-space: nowrap;\\r\\n  color: var(--text-color);\\r\\n  min-width: 80px;\\r\\n}\\r\\n\\r\\n.sensitivity-control {\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  flex-grow: 1;\\r\\n}\\r\\n\\r\\n.volume-icon, .sensitivity-icon {\\r\\n  margin-right: 8px;\\r\\n}\\r\\n\\r\\ninput[type=\\\"range\\\"] {\\r\\n  width: 100%;\\r\\n  -webkit-appearance: none;\\r\\n  appearance: none;\\r\\n  height: 5px;\\r\\n  background: rgba(255, 255, 255, 0.3);\\r\\n  border-radius: 2px;\\r\\n}\\r\\n\\r\\ninput[type=\\\"range\\\"]::-webkit-slider-thumb {\\r\\n  -webkit-appearance: none;\\r\\n  appearance: none;\\r\\n  width: 15px;\\r\\n  height: 15px;\\r\\n  border-radius: 50%;\\r\\n  background: var(--accent-color);\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\ninput[type=\\\"range\\\"]::-moz-range-thumb {\\r\\n  width: 15px;\\r\\n  height: 15px;\\r\\n  border-radius: 50%;\\r\\n  background: var(--accent-color);\\r\\n  cursor: pointer;\\r\\n  border: none;\\r\\n}\\r\\n\\r\\n/* ====== INPUTS ====== */\\r\\n/* File input */\\r\\n.file-input-container {\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  margin-left: 5px;\\r\\n  flex-wrap: nowrap;\\r\\n  max-width: 180px;\\r\\n}\\r\\n\\r\\n#file-input {\\r\\n  width: 0.1px;\\r\\n  height: 0.1px;\\r\\n  opacity: 0;\\r\\n  overflow: hidden;\\r\\n  position: absolute;\\r\\n  z-index: -1;\\r\\n}\\r\\n\\r\\n.file-input-label {\\r\\n  cursor: pointer;\\r\\n  background-color: var(--control-bg);\\r\\n  color: var(--text-color);\\r\\n  padding: 2px 8px;\\r\\n  border-radius: 3px;\\r\\n  font-size: 12px;\\r\\n  white-space: nowrap;\\r\\n  min-width: 60px;\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n.file-input-label:hover {\\r\\n  background-color: var(--control-hover);\\r\\n}\\r\\n\\r\\n/* ====== NOW PLAYING ====== */\\r\\n.audio-controls {\\r\\n  display: flex;\\r\\n  justify-content: center;\\r\\n  align-items: center;\\r\\n  margin-top: var(--spacing-md);\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n/* ====== SPOTIFY SECTION ====== */\\r\\n#spotify-controls {\\r\\n  margin-top: var(--spacing-md);\\r\\n}\\r\\n\\r\\n#spotify-now-playing {\\r\\n  margin: 5px 0;\\r\\n  padding: 8px;\\r\\n  background-color: rgba(30, 215, 96, 0.1);\\r\\n  border-radius: 5px;\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  align-items: center;\\r\\n}\\r\\n\\r\\n#spotify-status {\\r\\n  font-size: 12px;\\r\\n  color: #aaa;\\r\\n  margin-bottom: 5px;\\r\\n}\\r\\n\\r\\n#spotify-track-name {\\r\\n  font-weight: bold;\\r\\n  margin-bottom: 3px;\\r\\n}\\r\\n\\r\\n#spotify-track-artist {\\r\\n  font-size: 12px;\\r\\n  color: #aaa;\\r\\n}\\r\\n\\r\\n#spotify-controls-buttons {\\r\\n  display: flex;\\r\\n  justify-content: center;\\r\\n  align-items: center;\\r\\n  margin: 10px 0;\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n#spotify-play-pause {\\r\\n  padding: 8px 16px;\\r\\n  font-size: 18px;\\r\\n}\\r\\n\\r\\n.spotify-note {\\r\\n  font-size: 12px;\\r\\n  color: #aaa;\\r\\n  text-align: center;\\r\\n  margin-top: var(--spacing-md);\\r\\n}\\r\\n\\r\\n#spotify-album-art {\\r\\n  width: 50px;\\r\\n  height: 50px;\\r\\n  margin: 3px 0;\\r\\n}\\r\\n\\r\\n#system-audio-container {\\r\\n  margin-top: 5px;\\r\\n  padding-top: 5px;\\r\\n  border-top: 1px dashed var(--border-color);\\r\\n}\\r\\n\\r\\n#system-audio-container label {\\r\\n  color: var(--accent-color);\\r\\n}\\r\\n\\r\\n/* ====== MODAL DIALOG ====== */\\r\\n.modal {\\r\\n  display: none;\\r\\n  position: fixed;\\r\\n  z-index: 1000;\\r\\n  left: 0;\\r\\n  top: 0;\\r\\n  width: 100%;\\r\\n  height: 100%;\\r\\n  background-color: rgba(0, 0, 0, 0.7);\\r\\n}\\r\\n\\r\\n.modal-content {\\r\\n  background-color: #1e1e2e;\\r\\n  color: #cdd6f4;\\r\\n  margin: 15% auto;\\r\\n  padding: 20px;\\r\\n  border: 1px solid #7f849c;\\r\\n  border-radius: 8px;\\r\\n  width: 80%;\\r\\n  max-width: 500px;\\r\\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);\\r\\n}\\r\\n\\r\\n.close-modal {\\r\\n  color: #aaa;\\r\\n  float: right;\\r\\n  font-size: 28px;\\r\\n  font-weight: bold;\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\n.close-modal:hover,\\r\\n.close-modal:focus {\\r\\n  color: #cba6f7;\\r\\n  text-decoration: none;\\r\\n}\\r\\n\\r\\n.modal h3 {\\r\\n  margin-top: 0;\\r\\n  color: #cba6f7;\\r\\n}\\r\\n\\r\\n.modal input[type=\\\"text\\\"] {\\r\\n  width: 100%;\\r\\n  padding: 10px;\\r\\n  margin: 10px 0 20px 0;\\r\\n  border-radius: 4px;\\r\\n  border: 1px solid #7f849c;\\r\\n  background-color: #313244;\\r\\n  color: #cdd6f4;\\r\\n  box-sizing: border-box;\\r\\n}\\r\\n\\r\\n.modal-buttons {\\r\\n  display: flex;\\r\\n  justify-content: flex-end;\\r\\n}\\r\\n\\r\\n.modal-buttons button {\\r\\n  margin-left: 10px;\\r\\n  padding: 8px 16px;\\r\\n  border: none;\\r\\n  border-radius: 4px;\\r\\n  background-color: #89b4fa;\\r\\n  color: #1e1e2e;\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\n.modal-buttons button:hover {\\r\\n  background-color: #b4befe;\\r\\n}\\r\\n\\r\\n/* ====== RESPONSIVE STYLES ====== */\\r\\n@media (max-height: 700px) {\\r\\n  .control-panel {\\r\\n    max-height: 85vh;\\r\\n  }\\r\\n  \\r\\n  .panel-content {\\r\\n    max-height: calc(85vh - 60px);\\r\\n  }\\r\\n  \\r\\n  .control-group {\\r\\n    margin-bottom: 5px;\\r\\n    padding: 3px;\\r\\n  }\\r\\n  \\r\\n  #spotify-album-art {\\r\\n    width: 40px;\\r\\n    height: 40px;\\r\\n  }\\r\\n  \\r\\n  .spotify-note p {\\r\\n    margin: 5px 0;\\r\\n  }\\r\\n}\\r\\n\\r\\n@media (max-height: 500px) {\\r\\n  .control-panel {\\r\\n    width: 220px;\\r\\n  }\\r\\n  \\r\\n  .header-text h2 {\\r\\n    font-size: 16px;\\r\\n  }\\r\\n  \\r\\n  .header-text h3 {\\r\\n    font-size: 14px;\\r\\n  }\\r\\n  \\r\\n  .control-group h3 {\\r\\n    font-size: 13px;\\r\\n  }\\r\\n  \\r\\n  .toggle-item label {\\r\\n    font-size: 12px;\\r\\n  }\\r\\n}\\r\\n\\r\\n/* ====== VISUALIZATION MODAL ====== */\\r\\n.full-width {\\r\\n  width: 100%;\\r\\n  margin: 0;\\r\\n}\\r\\n\\r\\n.viz-modal-content {\\r\\n  max-width: 600px;\\r\\n  max-height: 80vh;\\r\\n  overflow-y: auto;\\r\\n}\\r\\n\\r\\n.modal-header {\\r\\n  display: flex;\\r\\n  justify-content: space-between;\\r\\n  align-items: center;\\r\\n  margin-bottom: 15px;\\r\\n  padding-bottom: 10px;\\r\\n  border-bottom: 1px solid var(--border-color);\\r\\n}\\r\\n\\r\\n.modal-header h3 {\\r\\n  margin: 0;\\r\\n  color: var(--accent-color);\\r\\n}\\r\\n\\r\\n.modal-body {\\r\\n  overflow-y: auto;\\r\\n}\\r\\n\\r\\n.modal-body .control-group {\\r\\n  background-color: rgba(0, 0, 0, 0.2);\\r\\n  border-radius: 5px;\\r\\n  padding: 10px;\\r\\n  margin-bottom: 15px;\\r\\n}\\r\\n\\r\\n.modal-body .control-group h3 {\\r\\n  color: var(--accent-color);\\r\\n  margin-top: 0;\\r\\n  margin-bottom: 10px;\\r\\n  font-size: 16px;\\r\\n}\\r\\n\\r\\n.modal-body .toggle-item {\\r\\n  padding: 5px 0;\\r\\n}\\r\\n\\r\\n/* ====== ENHANCED MODAL STYLES ====== */\\r\\n.modal {\\r\\n  display: none;\\r\\n  position: fixed;\\r\\n  z-index: 1000;\\r\\n  left: 0;\\r\\n  top: 0;\\r\\n  width: 100%;\\r\\n  height: 100%;\\r\\n  background-color: rgba(0, 0, 0, 0.7);\\r\\n  overflow: auto;\\r\\n  animation: fadeIn 0.3s;\\r\\n}\\r\\n\\r\\n.modal-content {\\r\\n  background-color: #1e1e2e;\\r\\n  color: #cdd6f4;\\r\\n  margin: 5% auto;\\r\\n  padding: 20px;\\r\\n  border: 1px solid #7f849c;\\r\\n  border-radius: 8px;\\r\\n  width: 80%;\\r\\n  max-width: 500px;\\r\\n  box-shadow: 0 4px 30px rgba(0, 0, 0, 0.5);\\r\\n  animation: slideIn 0.3s;\\r\\n  position: relative;\\r\\n}\\r\\n\\r\\n@keyframes fadeIn {\\r\\n  from { opacity: 0; }\\r\\n  to { opacity: 1; }\\r\\n}\\r\\n\\r\\n@keyframes slideIn {\\r\\n  from { transform: translateY(-50px); opacity: 0; }\\r\\n  to { transform: translateY(0); opacity: 1; }\\r\\n}\\r\\n\\r\\n.close-modal {\\r\\n  color: #aaa;\\r\\n  font-size: 28px;\\r\\n  font-weight: bold;\\r\\n  cursor: pointer;\\r\\n  transition: color 0.2s;\\r\\n}\\r\\n\\r\\n.close-modal:hover,\\r\\n.close-modal:focus {\\r\\n  color: var(--accent-color);\\r\\n  text-decoration: none;\\r\\n}\\r\\n\\r\\n/* ====== VISUALIZATION CONTROL PANEL ====== */\\r\\n.viz-control-panel {\\r\\n  position: absolute;\\r\\n  top: calc(10px + var(--spacing-md) + var(--spacing-md));\\r\\n  right: 10px;\\r\\n  background-color: var(--panel-bg);\\r\\n  color: var(--text-color);\\r\\n  padding: var(--spacing-md);\\r\\n  border-radius: 5px;\\r\\n  z-index: 100;\\r\\n  width: 250px;\\r\\n  max-height: 90vh;\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);\\r\\n}\\r\\n\\r\\n.viz-panel-header {\\r\\n  display: flex;\\r\\n  justify-content: space-between;\\r\\n  align-items: center;\\r\\n  cursor: pointer;\\r\\n  margin-bottom: var(--spacing-md);\\r\\n  flex-shrink: 0;\\r\\n  padding-bottom: var(--spacing-sm);\\r\\n  border-bottom: 1px solid var(--border-color);\\r\\n}\\r\\n\\r\\n.viz-panel-header h3 {\\r\\n  margin: 0;\\r\\n  font-size: 16px;\\r\\n  line-height: 1.2;\\r\\n  color: var(--accent-color);\\r\\n}\\r\\n\\r\\n.viz-toggle-icon {\\r\\n  font-size: 14px;\\r\\n  transition: transform 0.3s ease;\\r\\n}\\r\\n\\r\\n.viz-panel-content {\\r\\n  overflow-y: auto;\\r\\n  overflow-x: hidden;\\r\\n  transition: max-height 0.3s ease;\\r\\n  max-height: calc(90vh - 60px);\\r\\n  scrollbar-width: thin;\\r\\n  scrollbar-color: rgba(255, 255, 255, 0.3) transparent;\\r\\n}\\r\\n\\r\\n.viz-panel-content.collapsed {\\r\\n  max-height: 0;\\r\\n  overflow: hidden;\\r\\n}\\r\\n\\r\\n/* Reusing existing scrollbar styles */\\r\\n.viz-panel-content::-webkit-scrollbar {\\r\\n  width: 6px;\\r\\n}\\r\\n\\r\\n.viz-panel-content::-webkit-scrollbar-track {\\r\\n  background: transparent;\\r\\n}\\r\\n\\r\\n.viz-panel-content::-webkit-scrollbar-thumb {\\r\\n  background-color: rgba(255, 255, 255, 0.3);\\r\\n  border-radius: 3px;\\r\\n}\\r\\n\\r\\n/* Media queries for responsive design */\\r\\n@media (max-width: 768px) {\\r\\n  .viz-control-panel {\\r\\n    left: 10px;\\r\\n    top: auto;\\r\\n    bottom: 10px;\\r\\n    width: calc(100% - 40px);\\r\\n    max-height: 40vh;\\r\\n  }\\r\\n} \"],\"sourceRoot\":\"\"}]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/css-loader/dist/cjs.js!./src/styles/main.css\n");

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/api.js":
/*!*****************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/api.js ***!
  \*****************************************************/
/***/ ((module) => {

eval("\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += \"}\";\n      }\n      if (item[2]) {\n        content += \"}\";\n      }\n      if (item[4]) {\n        content += \"}\";\n      }\n      return content;\n    }).join(\"\");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxREFBcUQ7QUFDckQ7QUFDQTtBQUNBLGdEQUFnRDtBQUNoRDtBQUNBO0FBQ0EscUZBQXFGO0FBQ3JGO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBLEtBQUs7QUFDTDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQixpQkFBaUI7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLHFCQUFxQjtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVixzRkFBc0YscUJBQXFCO0FBQzNHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVixpREFBaUQscUJBQXFCO0FBQ3RFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVixzREFBc0QscUJBQXFCO0FBQzNFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZXZlcmIteHIvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzPzI0ZmIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qXG4gIE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXG4gIEF1dGhvciBUb2JpYXMgS29wcGVycyBAc29rcmFcbiovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKSB7XG4gIHZhciBsaXN0ID0gW107XG5cbiAgLy8gcmV0dXJuIHRoZSBsaXN0IG9mIG1vZHVsZXMgYXMgY3NzIHN0cmluZ1xuICBsaXN0LnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gICAgcmV0dXJuIHRoaXMubWFwKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICB2YXIgY29udGVudCA9IFwiXCI7XG4gICAgICB2YXIgbmVlZExheWVyID0gdHlwZW9mIGl0ZW1bNV0gIT09IFwidW5kZWZpbmVkXCI7XG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIik7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpO1xuICAgICAgfVxuICAgICAgaWYgKG5lZWRMYXllcikge1xuICAgICAgICBjb250ZW50ICs9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIik7XG4gICAgICB9XG4gICAgICBjb250ZW50ICs9IGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSk7XG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIHJldHVybiBjb250ZW50O1xuICAgIH0pLmpvaW4oXCJcIik7XG4gIH07XG5cbiAgLy8gaW1wb3J0IGEgbGlzdCBvZiBtb2R1bGVzIGludG8gdGhlIGxpc3RcbiAgbGlzdC5pID0gZnVuY3Rpb24gaShtb2R1bGVzLCBtZWRpYSwgZGVkdXBlLCBzdXBwb3J0cywgbGF5ZXIpIHtcbiAgICBpZiAodHlwZW9mIG1vZHVsZXMgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgIG1vZHVsZXMgPSBbW251bGwsIG1vZHVsZXMsIHVuZGVmaW5lZF1dO1xuICAgIH1cbiAgICB2YXIgYWxyZWFkeUltcG9ydGVkTW9kdWxlcyA9IHt9O1xuICAgIGlmIChkZWR1cGUpIHtcbiAgICAgIGZvciAodmFyIGsgPSAwOyBrIDwgdGhpcy5sZW5ndGg7IGsrKykge1xuICAgICAgICB2YXIgaWQgPSB0aGlzW2tdWzBdO1xuICAgICAgICBpZiAoaWQgIT0gbnVsbCkge1xuICAgICAgICAgIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaWRdID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICBmb3IgKHZhciBfayA9IDA7IF9rIDwgbW9kdWxlcy5sZW5ndGg7IF9rKyspIHtcbiAgICAgIHZhciBpdGVtID0gW10uY29uY2F0KG1vZHVsZXNbX2tdKTtcbiAgICAgIGlmIChkZWR1cGUgJiYgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpdGVtWzBdXSkge1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cbiAgICAgIGlmICh0eXBlb2YgbGF5ZXIgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBpdGVtWzVdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgICAgaXRlbVs1XSA9IGxheWVyO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVs1XSA9IGxheWVyO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAobWVkaWEpIHtcbiAgICAgICAgaWYgKCFpdGVtWzJdKSB7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKHN1cHBvcnRzKSB7XG4gICAgICAgIGlmICghaXRlbVs0XSkge1xuICAgICAgICAgIGl0ZW1bNF0gPSBcIlwiLmNvbmNhdChzdXBwb3J0cyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzRdID0gc3VwcG9ydHM7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGxpc3QucHVzaChpdGVtKTtcbiAgICB9XG4gIH07XG4gIHJldHVybiBsaXN0O1xufTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/css-loader/dist/runtime/api.js\n");

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/sourceMaps.js":
/*!************************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/sourceMaps.js ***!
  \************************************************************/
/***/ ((module) => {

eval("\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n  if (!cssMapping) {\n    return content;\n  }\n  if (typeof btoa === \"function\") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    return [content].concat([sourceMapping]).join(\"\\n\");\n  }\n  return [content].join(\"\\n\");\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdURBQXVELGNBQWM7QUFDckU7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3JldmVyYi14ci8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzP2FmMTIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0ZW0pIHtcbiAgdmFyIGNvbnRlbnQgPSBpdGVtWzFdO1xuICB2YXIgY3NzTWFwcGluZyA9IGl0ZW1bM107XG4gIGlmICghY3NzTWFwcGluZykge1xuICAgIHJldHVybiBjb250ZW50O1xuICB9XG4gIGlmICh0eXBlb2YgYnRvYSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgdmFyIGJhc2U2NCA9IGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KGNzc01hcHBpbmcpKSkpO1xuICAgIHZhciBkYXRhID0gXCJzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxcIi5jb25jYXQoYmFzZTY0KTtcbiAgICB2YXIgc291cmNlTWFwcGluZyA9IFwiLyojIFwiLmNvbmNhdChkYXRhLCBcIiAqL1wiKTtcbiAgICByZXR1cm4gW2NvbnRlbnRdLmNvbmNhdChbc291cmNlTWFwcGluZ10pLmpvaW4oXCJcXG5cIik7XG4gIH1cbiAgcmV0dXJuIFtjb250ZW50XS5qb2luKFwiXFxuXCIpO1xufTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/css-loader/dist/runtime/sourceMaps.js\n");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":
/*!****************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js ***!
  \****************************************************************************/
/***/ ((module) => {

eval("\n\nvar stylesInDOM = [];\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n}\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n    identifiers.push(identifier);\n  }\n  return identifiers;\n}\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n  return updater;\n}\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n    var newLastIdentifiers = modulesToDom(newList, options);\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n      var _index = getIndexByIdentifier(_identifier);\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n    lastIdentifiers = newLastIdentifiers;\n  };\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLHdCQUF3QjtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixpQkFBaUI7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQiw0QkFBNEI7QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQiw2QkFBNkI7QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZXZlcmIteHIvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanM/MmRiYSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxudmFyIHN0eWxlc0luRE9NID0gW107XG5mdW5jdGlvbiBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKSB7XG4gIHZhciByZXN1bHQgPSAtMTtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdHlsZXNJbkRPTS5sZW5ndGg7IGkrKykge1xuICAgIGlmIChzdHlsZXNJbkRPTVtpXS5pZGVudGlmaWVyID09PSBpZGVudGlmaWVyKSB7XG4gICAgICByZXN1bHQgPSBpO1xuICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG4gIHJldHVybiByZXN1bHQ7XG59XG5mdW5jdGlvbiBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucykge1xuICB2YXIgaWRDb3VudE1hcCA9IHt9O1xuICB2YXIgaWRlbnRpZmllcnMgPSBbXTtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsaXN0Lmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGl0ZW0gPSBsaXN0W2ldO1xuICAgIHZhciBpZCA9IG9wdGlvbnMuYmFzZSA/IGl0ZW1bMF0gKyBvcHRpb25zLmJhc2UgOiBpdGVtWzBdO1xuICAgIHZhciBjb3VudCA9IGlkQ291bnRNYXBbaWRdIHx8IDA7XG4gICAgdmFyIGlkZW50aWZpZXIgPSBcIlwiLmNvbmNhdChpZCwgXCIgXCIpLmNvbmNhdChjb3VudCk7XG4gICAgaWRDb3VudE1hcFtpZF0gPSBjb3VudCArIDE7XG4gICAgdmFyIGluZGV4QnlJZGVudGlmaWVyID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgdmFyIG9iaiA9IHtcbiAgICAgIGNzczogaXRlbVsxXSxcbiAgICAgIG1lZGlhOiBpdGVtWzJdLFxuICAgICAgc291cmNlTWFwOiBpdGVtWzNdLFxuICAgICAgc3VwcG9ydHM6IGl0ZW1bNF0sXG4gICAgICBsYXllcjogaXRlbVs1XVxuICAgIH07XG4gICAgaWYgKGluZGV4QnlJZGVudGlmaWVyICE9PSAtMSkge1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnJlZmVyZW5jZXMrKztcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4QnlJZGVudGlmaWVyXS51cGRhdGVyKG9iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciB1cGRhdGVyID0gYWRkRWxlbWVudFN0eWxlKG9iaiwgb3B0aW9ucyk7XG4gICAgICBvcHRpb25zLmJ5SW5kZXggPSBpO1xuICAgICAgc3R5bGVzSW5ET00uc3BsaWNlKGksIDAsIHtcbiAgICAgICAgaWRlbnRpZmllcjogaWRlbnRpZmllcixcbiAgICAgICAgdXBkYXRlcjogdXBkYXRlcixcbiAgICAgICAgcmVmZXJlbmNlczogMVxuICAgICAgfSk7XG4gICAgfVxuICAgIGlkZW50aWZpZXJzLnB1c2goaWRlbnRpZmllcik7XG4gIH1cbiAgcmV0dXJuIGlkZW50aWZpZXJzO1xufVxuZnVuY3Rpb24gYWRkRWxlbWVudFN0eWxlKG9iaiwgb3B0aW9ucykge1xuICB2YXIgYXBpID0gb3B0aW9ucy5kb21BUEkob3B0aW9ucyk7XG4gIGFwaS51cGRhdGUob2JqKTtcbiAgdmFyIHVwZGF0ZXIgPSBmdW5jdGlvbiB1cGRhdGVyKG5ld09iaikge1xuICAgIGlmIChuZXdPYmopIHtcbiAgICAgIGlmIChuZXdPYmouY3NzID09PSBvYmouY3NzICYmIG5ld09iai5tZWRpYSA9PT0gb2JqLm1lZGlhICYmIG5ld09iai5zb3VyY2VNYXAgPT09IG9iai5zb3VyY2VNYXAgJiYgbmV3T2JqLnN1cHBvcnRzID09PSBvYmouc3VwcG9ydHMgJiYgbmV3T2JqLmxheWVyID09PSBvYmoubGF5ZXIpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgYXBpLnVwZGF0ZShvYmogPSBuZXdPYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICBhcGkucmVtb3ZlKCk7XG4gICAgfVxuICB9O1xuICByZXR1cm4gdXBkYXRlcjtcbn1cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGxpc3QsIG9wdGlvbnMpIHtcbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG4gIGxpc3QgPSBsaXN0IHx8IFtdO1xuICB2YXIgbGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpO1xuICByZXR1cm4gZnVuY3Rpb24gdXBkYXRlKG5ld0xpc3QpIHtcbiAgICBuZXdMaXN0ID0gbmV3TGlzdCB8fCBbXTtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIGlkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbaV07XG4gICAgICB2YXIgaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4XS5yZWZlcmVuY2VzLS07XG4gICAgfVxuICAgIHZhciBuZXdMYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obmV3TGlzdCwgb3B0aW9ucyk7XG4gICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IF9pKyspIHtcbiAgICAgIHZhciBfaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tfaV07XG4gICAgICB2YXIgX2luZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoX2lkZW50aWZpZXIpO1xuICAgICAgaWYgKHN0eWxlc0luRE9NW19pbmRleF0ucmVmZXJlbmNlcyA9PT0gMCkge1xuICAgICAgICBzdHlsZXNJbkRPTVtfaW5kZXhdLnVwZGF0ZXIoKTtcbiAgICAgICAgc3R5bGVzSW5ET00uc3BsaWNlKF9pbmRleCwgMSk7XG4gICAgICB9XG4gICAgfVxuICAgIGxhc3RJZGVudGlmaWVycyA9IG5ld0xhc3RJZGVudGlmaWVycztcbiAgfTtcbn07Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\n");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/insertBySelector.js":
/*!********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/insertBySelector.js ***!
  \********************************************************************/
/***/ ((module) => {

eval("\n\nvar memo = {};\n\n/* istanbul ignore next  */\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target);\n\n    // Special case to return head of iframe instead of iframe itself\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n    memo[target] = styleTarget;\n  }\n  return memo[target];\n}\n\n/* istanbul ignore next  */\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n  target.appendChild(style);\n}\nmodule.exports = insertBySelector;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3JldmVyYi14ci8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanM/YjIxNCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxudmFyIG1lbW8gPSB7fTtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBnZXRUYXJnZXQodGFyZ2V0KSB7XG4gIGlmICh0eXBlb2YgbWVtb1t0YXJnZXRdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgdmFyIHN0eWxlVGFyZ2V0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0YXJnZXQpO1xuXG4gICAgLy8gU3BlY2lhbCBjYXNlIHRvIHJldHVybiBoZWFkIG9mIGlmcmFtZSBpbnN0ZWFkIG9mIGlmcmFtZSBpdHNlbGZcbiAgICBpZiAod2luZG93LkhUTUxJRnJhbWVFbGVtZW50ICYmIHN0eWxlVGFyZ2V0IGluc3RhbmNlb2Ygd2luZG93LkhUTUxJRnJhbWVFbGVtZW50KSB7XG4gICAgICB0cnkge1xuICAgICAgICAvLyBUaGlzIHdpbGwgdGhyb3cgYW4gZXhjZXB0aW9uIGlmIGFjY2VzcyB0byBpZnJhbWUgaXMgYmxvY2tlZFxuICAgICAgICAvLyBkdWUgdG8gY3Jvc3Mtb3JpZ2luIHJlc3RyaWN0aW9uc1xuICAgICAgICBzdHlsZVRhcmdldCA9IHN0eWxlVGFyZ2V0LmNvbnRlbnREb2N1bWVudC5oZWFkO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAvLyBpc3RhbmJ1bCBpZ25vcmUgbmV4dFxuICAgICAgICBzdHlsZVRhcmdldCA9IG51bGw7XG4gICAgICB9XG4gICAgfVxuICAgIG1lbW9bdGFyZ2V0XSA9IHN0eWxlVGFyZ2V0O1xuICB9XG4gIHJldHVybiBtZW1vW3RhcmdldF07XG59XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gaW5zZXJ0QnlTZWxlY3RvcihpbnNlcnQsIHN0eWxlKSB7XG4gIHZhciB0YXJnZXQgPSBnZXRUYXJnZXQoaW5zZXJ0KTtcbiAgaWYgKCF0YXJnZXQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJDb3VsZG4ndCBmaW5kIGEgc3R5bGUgdGFyZ2V0LiBUaGlzIHByb2JhYmx5IG1lYW5zIHRoYXQgdGhlIHZhbHVlIGZvciB0aGUgJ2luc2VydCcgcGFyYW1ldGVyIGlzIGludmFsaWQuXCIpO1xuICB9XG4gIHRhcmdldC5hcHBlbmRDaGlsZChzdHlsZSk7XG59XG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydEJ5U2VsZWN0b3I7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/style-loader/dist/runtime/insertBySelector.js\n");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/insertStyleElement.js":
/*!**********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/insertStyleElement.js ***!
  \**********************************************************************/
/***/ ((module) => {

eval("\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\nmodule.exports = insertStyleElement;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3JldmVyYi14ci8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qcz9kZTZjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKSB7XG4gIHZhciBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInN0eWxlXCIpO1xuICBvcHRpb25zLnNldEF0dHJpYnV0ZXMoZWxlbWVudCwgb3B0aW9ucy5hdHRyaWJ1dGVzKTtcbiAgb3B0aW9ucy5pbnNlcnQoZWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbiAgcmV0dXJuIGVsZW1lbnQ7XG59XG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydFN0eWxlRWxlbWVudDsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/style-loader/dist/runtime/insertStyleElement.js\n");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js ***!
  \**********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce =  true ? __webpack_require__.nc : 0;\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\nmodule.exports = setAttributesWithoutAttributes;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQTtBQUNBLGNBQWMsS0FBd0MsR0FBRyxzQkFBaUIsR0FBRyxDQUFJO0FBQ2pGO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZXZlcmIteHIvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanM/ZGRjZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMoc3R5bGVFbGVtZW50KSB7XG4gIHZhciBub25jZSA9IHR5cGVvZiBfX3dlYnBhY2tfbm9uY2VfXyAhPT0gXCJ1bmRlZmluZWRcIiA/IF9fd2VicGFja19ub25jZV9fIDogbnVsbDtcbiAgaWYgKG5vbmNlKSB7XG4gICAgc3R5bGVFbGVtZW50LnNldEF0dHJpYnV0ZShcIm5vbmNlXCIsIG5vbmNlKTtcbiAgfVxufVxubW9kdWxlLmV4cG9ydHMgPSBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXM7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\n");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/styleDomAPI.js":
/*!***************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/styleDomAPI.js ***!
  \***************************************************************/
/***/ ((module) => {

eval("\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n  var needLayer = typeof obj.layer !== \"undefined\";\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n  css += obj.css;\n  if (needLayer) {\n    css += \"}\";\n  }\n  if (obj.media) {\n    css += \"}\";\n  }\n  if (obj.supports) {\n    css += \"}\";\n  }\n  var sourceMap = obj.sourceMap;\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  }\n\n  // For old IE\n  /* istanbul ignore if  */\n  options.styleTagTransform(css, styleElement, options.options);\n}\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n  styleElement.parentNode.removeChild(styleElement);\n}\n\n/* istanbul ignore next  */\nfunction domAPI(options) {\n  if (typeof document === \"undefined\") {\n    return {\n      update: function update() {},\n      remove: function remove() {}\n    };\n  }\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\nmodule.exports = domAPI;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtEQUFrRDtBQUNsRDtBQUNBO0FBQ0EsMENBQTBDO0FBQzFDO0FBQ0E7QUFDQTtBQUNBLGlGQUFpRjtBQUNqRjtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLHlEQUF5RDtBQUN6RDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3JldmVyYi14ci8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzP2U0NzkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gYXBwbHkoc3R5bGVFbGVtZW50LCBvcHRpb25zLCBvYmopIHtcbiAgdmFyIGNzcyA9IFwiXCI7XG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChvYmouc3VwcG9ydHMsIFwiKSB7XCIpO1xuICB9XG4gIGlmIChvYmoubWVkaWEpIHtcbiAgICBjc3MgKz0gXCJAbWVkaWEgXCIuY29uY2F0KG9iai5tZWRpYSwgXCIge1wiKTtcbiAgfVxuICB2YXIgbmVlZExheWVyID0gdHlwZW9mIG9iai5sYXllciAhPT0gXCJ1bmRlZmluZWRcIjtcbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIkBsYXllclwiLmNvbmNhdChvYmoubGF5ZXIubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChvYmoubGF5ZXIpIDogXCJcIiwgXCIge1wiKTtcbiAgfVxuICBjc3MgKz0gb2JqLmNzcztcbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cbiAgdmFyIHNvdXJjZU1hcCA9IG9iai5zb3VyY2VNYXA7XG4gIGlmIChzb3VyY2VNYXAgJiYgdHlwZW9mIGJ0b2EgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICBjc3MgKz0gXCJcXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LFwiLmNvbmNhdChidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpLCBcIiAqL1wiKTtcbiAgfVxuXG4gIC8vIEZvciBvbGQgSUVcbiAgLyogaXN0YW5idWwgaWdub3JlIGlmICAqL1xuICBvcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGVFbGVtZW50LCBvcHRpb25zLm9wdGlvbnMpO1xufVxuZnVuY3Rpb24gcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCkge1xuICAvLyBpc3RhbmJ1bCBpZ25vcmUgaWZcbiAgaWYgKHN0eWxlRWxlbWVudC5wYXJlbnROb2RlID09PSBudWxsKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIHN0eWxlRWxlbWVudC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudCk7XG59XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gZG9tQVBJKG9wdGlvbnMpIHtcbiAgaWYgKHR5cGVvZiBkb2N1bWVudCA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHJldHVybiB7XG4gICAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZSgpIHt9LFxuICAgICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUoKSB7fVxuICAgIH07XG4gIH1cbiAgdmFyIHN0eWxlRWxlbWVudCA9IG9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpO1xuICByZXR1cm4ge1xuICAgIHVwZGF0ZTogZnVuY3Rpb24gdXBkYXRlKG9iaikge1xuICAgICAgYXBwbHkoc3R5bGVFbGVtZW50LCBvcHRpb25zLCBvYmopO1xuICAgIH0sXG4gICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUoKSB7XG4gICAgICByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGVFbGVtZW50KTtcbiAgICB9XG4gIH07XG59XG5tb2R1bGUuZXhwb3J0cyA9IGRvbUFQSTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/style-loader/dist/runtime/styleDomAPI.js\n");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/styleTagTransform.js":
/*!*********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/styleTagTransform.js ***!
  \*********************************************************************/
/***/ ((module) => {

eval("\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\nmodule.exports = styleTagTransform;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3JldmVyYi14ci8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzPzFkZGUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gc3R5bGVUYWdUcmFuc2Zvcm0oY3NzLCBzdHlsZUVsZW1lbnQpIHtcbiAgaWYgKHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0KSB7XG4gICAgc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQuY3NzVGV4dCA9IGNzcztcbiAgfSBlbHNlIHtcbiAgICB3aGlsZSAoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpIHtcbiAgICAgIHN0eWxlRWxlbWVudC5yZW1vdmVDaGlsZChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCk7XG4gICAgfVxuICAgIHN0eWxlRWxlbWVudC5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShjc3MpKTtcbiAgfVxufVxubW9kdWxlLmV4cG9ydHMgPSBzdHlsZVRhZ1RyYW5zZm9ybTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/style-loader/dist/runtime/styleTagTransform.js\n");

/***/ }),

/***/ "./src/main.js":
/*!*********************!*\
  !*** ./src/main.js ***!
  \*********************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _styles_main_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./styles/main.css */ \"./src/styles/main.css\");\n/* harmony import */ var _scripts_utils_pathResolver_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./scripts/utils/pathResolver.js */ \"./src/scripts/utils/pathResolver.js\");\n/* harmony import */ var _scripts_audio_GPUAudioProcessor_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./scripts/audio/GPUAudioProcessor.js */ \"./src/scripts/audio/GPUAudioProcessor.js\");\n/* harmony import */ var _scripts_audio_AudioProcessor_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./scripts/audio/AudioProcessor.js */ \"./src/scripts/audio/AudioProcessor.js\");\n/* harmony import */ var _scripts_audio_SpotifyProcessor_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./scripts/audio/SpotifyProcessor.js */ \"./src/scripts/audio/SpotifyProcessor.js\");\n/* harmony import */ var _scripts_external_spotify_sdk_loader_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./scripts/external/spotify-sdk-loader.js */ \"./src/scripts/external/spotify-sdk-loader.js\");\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, \"catch\": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }\nfunction _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); }); }; }\n// Import styles\n\n\n// Import utility modules\n\n\n// Import audio processors\n\n\n\n\n\n/**\r\n * Main application controller for audio visualization\r\n * Handles UI interactions, audio source selection, and visualization data processing\r\n */\ndocument.addEventListener('DOMContentLoaded', function () {\n  // Make path resolver globally available\n  window.resolvePath = _scripts_utils_pathResolver_js__WEBPACK_IMPORTED_MODULE_1__.resolvePath;\n\n  // ====== INITIALIZATION ======\n\n  /**\r\n   * Initialize the audio processor with configuration\r\n   * @type {GPUAudioProcessor}\r\n   */\n  var audioProcessor = new _scripts_audio_GPUAudioProcessor_js__WEBPACK_IMPORTED_MODULE_2__.GPUAudioProcessor({\n    debugMode: true,\n    // Enable debugging initially\n    fftSize: 1024,\n    // Reduced size for better performance\n    smoothingTimeConstant: 0.6 // Less smoothing for more responsive visuals\n  });\n\n  // DOM element references\n  var micOption = document.getElementById('mic-option');\n  var fileOption = document.getElementById('file-option');\n  var urlOption = document.getElementById('url-option');\n  var spotifyOption = document.getElementById('spotify-option');\n  var systemAudioOption = document.getElementById('system-audio-option');\n  var systemAudioContainer = document.getElementById('system-audio-container');\n  var startMicButton = document.getElementById('start-mic');\n  var startSystemAudioButton = document.getElementById('start-system-audio');\n  var fileInput = document.getElementById('file-input');\n  var openUrlModalButton = document.getElementById('open-url-modal');\n  var urlModal = document.getElementById('url-modal');\n  var urlInput = document.getElementById('url-input');\n  var playUrlButton = document.getElementById('play-url-button');\n  var cancelUrlButton = document.getElementById('cancel-url-button');\n  var closeModalButton = document.querySelector('.close-modal');\n  var demoTrackButton = document.getElementById('demo-track-button');\n  var playPauseButton = document.getElementById('play-pause-button');\n  var playbackControls = document.getElementById('playback-controls');\n  var dataOutput = document.getElementById('data-output');\n  var aframeIframe = document.getElementById('aframe-iframe');\n  var spotifyControls = document.getElementById('spotify-controls');\n  var spotifyLogin = document.getElementById('spotify-login');\n  var nowPlaying = document.getElementById('now-playing');\n\n  // Lazy loading variables for Spotify\n  var spotifyProcessor = null;\n  var spotifySDKLoaded = false;\n\n  // Track current audio state\n  var isAudioPlaying = false;\n  var currentAudioType = null; // 'demo', 'file', 'url', 'mic', etc.\n  var currentUrlAudio = null;\n\n  // Demo track URL\n  var DEMO_TRACK_URL = 'https://cdn.pixabay.com/audio/2025/01/09/audio_ebb251db8d.mp3';\n\n  // Set the iframe source using the path resolver\n  if (aframeIframe) {\n    aframeIframe.src = (0,_scripts_utils_pathResolver_js__WEBPACK_IMPORTED_MODULE_1__.resolvePath)('stages/home.html');\n  }\n\n  // ====== AUDIO SOURCE SELECTION ======\n\n  /**\r\n   * Handle microphone selection\r\n   */\n  micOption.addEventListener('change', function () {\n    if (micOption.checked) {\n      switchAudioSource('mic');\n    }\n  });\n\n  /**\r\n   * Handle file input selection\r\n   */\n  fileOption.addEventListener('change', function () {\n    if (fileOption.checked) {\n      switchAudioSource('file');\n    }\n  });\n\n  /**\r\n   * Handle URL input selection\r\n   */\n  urlOption.addEventListener('change', function () {\n    if (urlOption.checked) {\n      switchAudioSource('url');\n    }\n  });\n\n  /**\r\n   * Handle Spotify selection\r\n   */\n  spotifyOption.addEventListener('change', function () {\n    if (spotifyOption.checked) {\n      switchAudioSource('spotify');\n    }\n  });\n\n  /**\r\n   * Handle system audio selection\r\n   */\n  systemAudioOption.addEventListener('change', function () {\n    if (systemAudioOption.checked) {\n      switchAudioSource('system');\n    }\n  });\n\n  /**\r\n   * Handle opening URL modal\r\n   */\n  openUrlModalButton.addEventListener('click', function () {\n    urlModal.style.display = 'block';\n    urlInput.focus();\n  });\n\n  /**\r\n   * Handle URL modal close button\r\n   */\n  closeModalButton.addEventListener('click', function () {\n    urlModal.style.display = 'none';\n  });\n\n  /**\r\n   * Handle URL modal cancel button\r\n   */\n  cancelUrlButton.addEventListener('click', function () {\n    urlModal.style.display = 'none';\n  });\n\n  /**\r\n   * Close the modal when clicking outside of it\r\n   */\n  window.addEventListener('click', function (event) {\n    if (event.target === urlModal) {\n      urlModal.style.display = 'none';\n    }\n  });\n\n  // ====== AUDIO CONTROL BUTTONS ======\n\n  /**\r\n   * Handle microphone start button click\r\n   */\n  startMicButton.addEventListener('click', /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return audioProcessor.initMicrophone();\n        case 3:\n          nowPlaying.textContent = 'Microphone (Visualization Only)';\n          currentAudioType = 'mic';\n          // Microphone doesn't need play/pause control\n          removePlayPauseControl();\n          console.log(\"Microphone initialized for visualization only\");\n\n          // Optionally alert the user that the microphone is for visualization only\n          if (!localStorage.getItem('micAlertShown')) {\n            alert('Microphone is used for visualization only. Audio output is muted to prevent feedback.');\n            localStorage.setItem('micAlertShown', 'true');\n          }\n          _context.next = 15;\n          break;\n        case 10:\n          _context.prev = 10;\n          _context.t0 = _context[\"catch\"](0);\n          console.error('Error initializing microphone:', _context.t0);\n          nowPlaying.textContent = 'Microphone error';\n          alert('Could not access microphone: ' + _context.t0.message);\n        case 15:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee, null, [[0, 10]]);\n  })));\n\n  /**\r\n   * Handle system audio start button click\r\n   */\n  startSystemAudioButton.addEventListener('click', /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          showSystemAudioInstructions();\n          _context2.next = 4;\n          return audioProcessor.initMicrophone();\n        case 4:\n          nowPlaying.textContent = 'System Audio (Visualization Only)';\n          currentAudioType = 'system';\n          // System audio doesn't need play/pause control\n          removePlayPauseControl();\n          console.log(\"System audio capture initialized for visualization only\");\n\n          // Make it clear that this is for visualization only\n          alert('System audio capture is enabled for visualization only. The audio from your system will not be played back through the browser to prevent feedback.');\n          _context2.next = 16;\n          break;\n        case 11:\n          _context2.prev = 11;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.error('Error starting system audio capture:', _context2.t0);\n          nowPlaying.textContent = 'System Audio error';\n          alert('Error: ' + _context2.t0.message);\n        case 16:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2, null, [[0, 11]]);\n  })));\n\n  /**\r\n   * Handle file selection\r\n   */\n  fileInput.addEventListener('change', /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n    var file;\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          file = fileInput.files[0];\n          if (!file) {\n            _context3.next = 10;\n            break;\n          }\n          // Stop previous source first\n          if (audioProcessor.isActive) {\n            audioProcessor.stop();\n          }\n          _context3.next = 5;\n          return audioProcessor.initFile(file);\n        case 5:\n          nowPlaying.textContent = file.name;\n\n          // Update audio state\n          isAudioPlaying = true;\n          currentAudioType = 'file';\n\n          // Add play/pause control\n          addPlayPauseControl();\n          console.log(\"File initialized:\", file.name);\n        case 10:\n        case \"end\":\n          return _context3.stop();\n      }\n    }, _callee3);\n  })));\n\n  /**\r\n   * Handle demo track button click\r\n   */\n  demoTrackButton.addEventListener('click', function () {\n    switchAudioSource('demo');\n  });\n\n  /**\r\n   * Handle URL play button click\r\n   */\n  playUrlButton.addEventListener('click', /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n    var url, response, arrayBuffer, blob, file;\n    return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n      while (1) switch (_context4.prev = _context4.next) {\n        case 0:\n          url = urlInput.value.trim();\n          if (!url) {\n            _context4.next = 27;\n            break;\n          }\n          // Stop previous source first\n          if (audioProcessor.isActive) {\n            audioProcessor.stop();\n          }\n          _context4.prev = 3;\n          _context4.next = 6;\n          return fetch(url);\n        case 6:\n          response = _context4.sent;\n          _context4.next = 9;\n          return response.arrayBuffer();\n        case 9:\n          arrayBuffer = _context4.sent;\n          blob = new Blob([arrayBuffer], {\n            type: response.headers.get('content-type')\n          });\n          file = new File([blob], url.split('/').pop(), {\n            type: blob.type\n          });\n          _context4.next = 14;\n          return audioProcessor.initFile(file);\n        case 14:\n          urlModal.style.display = 'none';\n          nowPlaying.textContent = 'URL: ' + url.substring(0, 30) + (url.length > 30 ? '...' : '');\n\n          // Update audio state\n          isAudioPlaying = true;\n          currentAudioType = 'url';\n          currentUrlAudio = url;\n\n          // Add play/pause control\n          addPlayPauseControl();\n          console.log(\"URL audio initialized:\", url);\n          _context4.next = 27;\n          break;\n        case 23:\n          _context4.prev = 23;\n          _context4.t0 = _context4[\"catch\"](3);\n          console.error('Error playing audio from URL:', _context4.t0);\n          alert('Error loading audio: ' + _context4.t0.message);\n        case 27:\n        case \"end\":\n          return _context4.stop();\n      }\n    }, _callee4, null, [[3, 23]]);\n  })));\n\n  // ====== AUDIO DATA PROCESSING ======\n\n  /**\r\n   * Continuously send audio data to A-Frame for visualization\r\n   * Called recursively with requestAnimationFrame\r\n   */\n  function sendAudioDataToAFrame() {\n    // Force the analyzer to update data by calling these methods\n    var frequencyData = audioProcessor.getFrequencyDataForAPI();\n    var timeDomainData = audioProcessor.getTimeDomainDataForAPI();\n\n    // Print summary stats occasionally\n    if (Math.random() < 0.01) {\n      // ~1% of frames\n      var freqStats = calculateStats(frequencyData);\n      console.log(\"Sending frequency data stats:\", freqStats);\n    }\n\n    // Send to iframe if it's loaded\n    if (aframeIframe.contentWindow) {\n      aframeIframe.contentWindow.postMessage({\n        type: 'frequencyData',\n        data: frequencyData\n      }, '*');\n      aframeIframe.contentWindow.postMessage({\n        type: 'timeDomainData',\n        data: timeDomainData\n      }, '*');\n    }\n    requestAnimationFrame(sendAudioDataToAFrame);\n  }\n\n  /**\r\n   * Calculate statistics for audio data arrays\r\n   * @param {Uint8Array} data - The audio data array\r\n   * @returns {Object} Object containing min, max, avg, and nonZeroPercent stats\r\n   */\n  function calculateStats(data) {\n    if (!data || data.length === 0) return {\n      min: 0,\n      max: 0,\n      avg: 0\n    };\n    var min = 255,\n      max = 0,\n      sum = 0;\n    for (var i = 0; i < data.length; i++) {\n      min = Math.min(min, data[i]);\n      max = Math.max(max, data[i]);\n      sum += data[i];\n    }\n    return {\n      min: min,\n      max: max,\n      avg: (sum / data.length).toFixed(2),\n      nonZeroPercent: (data.filter(function (v) {\n        return v > 0;\n      }).length / data.length * 100).toFixed(1) + '%'\n    };\n  }\n\n  // ====== UI MANAGEMENT HELPERS ======\n\n  /**\r\n   * Update UI for microphone mode\r\n   */\n  function updateUIForMicrophoneMode() {\n    startMicButton.disabled = false;\n    startSystemAudioButton.disabled = true;\n    fileInput.disabled = true;\n    openUrlModalButton.disabled = true;\n    spotifyControls.style.display = 'none';\n    systemAudioContainer.style.display = 'none';\n\n    // Stop any currently active audio\n    if (audioProcessor.isActive) {\n      audioProcessor.stop();\n    }\n\n    // Show the now playing container\n    document.querySelector('.now-playing-container').style.display = 'flex';\n\n    // Microphone input doesn't use play/pause control\n    removePlayPauseControl();\n\n    // Reset audio state\n    isAudioPlaying = false;\n    currentAudioType = null;\n  }\n\n  /**\r\n   * Update UI for file input mode\r\n   */\n  function updateUIForFileMode() {\n    fileInput.disabled = false;\n    openUrlModalButton.disabled = true;\n    startMicButton.disabled = true;\n    startSystemAudioButton.disabled = true;\n    spotifyControls.style.display = 'none';\n    systemAudioContainer.style.display = 'none';\n\n    // If audio is currently playing, stop it\n    if (audioProcessor.isActive) {\n      audioProcessor.stop();\n      isAudioPlaying = false;\n      currentAudioType = null;\n    }\n\n    // Show the now playing container\n    document.querySelector('.now-playing-container').style.display = 'flex';\n\n    // File mode starts with no file, so no play/pause control initially\n    removePlayPauseControl();\n  }\n\n  /**\r\n   * Update UI for URL input mode\r\n   */\n  function updateUIForUrlMode() {\n    openUrlModalButton.disabled = false;\n    startMicButton.disabled = true;\n    startSystemAudioButton.disabled = true;\n    fileInput.disabled = true;\n    spotifyControls.style.display = 'none';\n    systemAudioContainer.style.display = 'none';\n\n    // If audio is currently playing and not URL, stop it\n    if (audioProcessor.isActive && currentAudioType !== 'url') {\n      audioProcessor.stop();\n      isAudioPlaying = false;\n    }\n\n    // Show the now playing container\n    document.querySelector('.now-playing-container').style.display = 'flex';\n\n    // If we have a URL loaded and that was our previous source, restore the play/pause button\n    if (currentUrlAudio && currentAudioType === 'url') {\n      addPlayPauseControl();\n    } else {\n      removePlayPauseControl();\n      currentAudioType = null;\n    }\n  }\n\n  /**\r\n   * Update UI for Spotify mode\r\n   */\n  function updateUIForSpotifyMode() {\n    // Only load Spotify components when needed\n    loadSpotifyComponents();\n    showSpotifyControls();\n\n    // Show system audio option when Spotify is selected but hide the radio button\n    systemAudioContainer.style.display = 'flex';\n    systemAudioOption.style.display = 'none'; // Hide the radio button\n    systemAudioOption.disabled = true; // Disable it to prevent interactions\n    startSystemAudioButton.disabled = false; // Enable the start button\n\n    // Make the label text clearer since there's no radio button\n    var systemAudioLabel = document.querySelector('label[for=\"system-audio-option\"]');\n    if (systemAudioLabel) {\n      systemAudioLabel.textContent = \"Capture System Audio:\";\n    }\n    startMicButton.disabled = true;\n    fileInput.disabled = true;\n    openUrlModalButton.disabled = true;\n\n    // If audio is currently playing, stop it\n    if (audioProcessor.isActive) {\n      audioProcessor.stop();\n      isAudioPlaying = false;\n      currentAudioType = null;\n    }\n\n    // Hide the now playing container\n    document.querySelector('.now-playing-container').style.display = 'none';\n\n    // Spotify has its own controls\n    removePlayPauseControl();\n  }\n\n  /**\r\n   * Update UI for system audio mode\r\n   */\n  function updateUIForSystemAudioMode() {\n    startSystemAudioButton.disabled = false;\n    startMicButton.disabled = true;\n    fileInput.disabled = true;\n    openUrlModalButton.disabled = true;\n\n    // If audio is currently playing, stop it\n    if (audioProcessor.isActive) {\n      audioProcessor.stop();\n      isAudioPlaying = false;\n      currentAudioType = null;\n    }\n\n    // System audio doesn't need play/pause control\n    removePlayPauseControl();\n  }\n\n  /**\r\n   * Show instructions for system audio capture\r\n   */\n  function showSystemAudioInstructions() {\n    alert('Please play music on Spotify and make sure your microphone can capture system audio.\\n\\n' + 'On Windows: Enable \"Stereo Mix\" in sound settings\\n' + 'On Mac: Use Soundflower or BlackHole\\n' + 'On mobile: Place device near speakers');\n  }\n\n  // ====== VISUALIZATION CONTROLS ======\n\n  /**\r\n   * Set up toggle controls for visualization elements\r\n   */\n  function setupToggleControls() {\n    // Function to send toggle commands to iframe\n    function toggleElement(elementType, visible) {\n      aframeIframe.contentWindow.postMessage({\n        type: 'toggle',\n        element: elementType,\n        visible: visible\n      }, '*');\n    }\n\n    // Set up event listeners for toggle controls\n    document.querySelectorAll('.toggle-control').forEach(function (control) {\n      control.addEventListener('change', function () {\n        toggleElement(this.dataset.element, this.checked);\n      });\n    });\n  }\n\n  // ====== SPOTIFY INTEGRATION ======\n\n  /**\r\n   * Load Spotify SDK and initialize components\r\n   */\n  function loadSpotifyComponents() {\n    // Only load the SDK once\n    if (!spotifySDKLoaded) {\n      // Use the SDK loader to properly handle webpack integration\n      (0,_scripts_external_spotify_sdk_loader_js__WEBPACK_IMPORTED_MODULE_5__.loadSpotifySDK)().then(function () {\n        console.log('Spotify Web Playback SDK loaded successfully');\n        spotifySDKLoaded = true;\n        initializeSpotifyProcessor();\n      })[\"catch\"](function (error) {\n        console.error('Failed to load Spotify SDK:', error);\n      });\n    } else if (!spotifyProcessor) {\n      // SDK already loaded, just initialize the processor\n      initializeSpotifyProcessor();\n    }\n  }\n\n  /**\r\n   * Initialize the Spotify processor and UI elements\r\n   */\n  function initializeSpotifyProcessor() {\n    // Only create the processor if it doesn't exist\n    if (!spotifyProcessor) {\n      // Get the singleton instance\n      spotifyProcessor = _scripts_audio_SpotifyProcessor_js__WEBPACK_IMPORTED_MODULE_4__.SpotifyProcessor.getInstance();\n\n      // Get references to DOM elements\n      var _spotifyLogin = document.getElementById('spotify-login');\n      var spotifyPlayerContainer = document.getElementById('spotify-player-container');\n\n      // Check if elements exist before trying to access them\n      if (!_spotifyLogin || !spotifyPlayerContainer) {\n        console.error('Spotify UI elements not found in the DOM');\n        return;\n      }\n\n      // Check if we have a valid token\n      if (spotifyProcessor.checkAuth()) {\n        _spotifyLogin.style.display = 'none';\n        spotifyPlayerContainer.style.display = 'block';\n\n        // Connect to Spotify (initializes audio context)\n        spotifyProcessor.connectToSpotify();\n      } else {\n        _spotifyLogin.style.display = 'block';\n        spotifyPlayerContainer.style.display = 'none';\n      }\n\n      // Set up event listeners\n      setupSpotifyEventListeners();\n\n      // Update the note about audio visualization\n      var spotifyNote = document.querySelector('.spotify-note p');\n      if (spotifyNote) {\n        spotifyNote.innerHTML = 'Start playing in your Spotify app, then control here!<br>' + '<strong>For visualization:</strong> Select \"System Audio\" option and click Start.';\n      }\n    }\n  }\n\n  /**\r\n   * Set up event listeners for Spotify controls\r\n   */\n  function setupSpotifyEventListeners() {\n    console.log('Setting up Spotify event listeners');\n\n    // Login button\n    var loginButton = document.getElementById('spotify-login');\n    if (loginButton) {\n      loginButton.removeEventListener('click', spotifyLoginHandler); // Remove any existing listeners\n      loginButton.addEventListener('click', spotifyLoginHandler);\n      console.log('Spotify login button listener attached');\n    }\n\n    // Play/Pause button\n    var playPauseButton = document.getElementById('spotify-play-pause');\n    if (playPauseButton) {\n      playPauseButton.addEventListener('click', function () {\n        console.log('Play/Pause clicked');\n        if (spotifyProcessor) {\n          spotifyProcessor.togglePlayback();\n        }\n      });\n    }\n\n    // Next track button\n    var nextButton = document.getElementById('spotify-next');\n    if (nextButton) {\n      nextButton.addEventListener('click', function () {\n        console.log('Next track clicked');\n        if (spotifyProcessor) {\n          spotifyProcessor.nextTrack();\n        }\n      });\n    }\n\n    // Previous track button\n    var prevButton = document.getElementById('spotify-prev');\n    if (prevButton) {\n      prevButton.addEventListener('click', function () {\n        console.log('Previous track clicked');\n        if (spotifyProcessor) {\n          spotifyProcessor.previousTrack();\n        }\n      });\n    }\n  }\n\n  /**\r\n   * Handle Spotify login button click\r\n   */\n  function spotifyLoginHandler() {\n    console.log('Spotify login button clicked');\n    if (spotifyProcessor) {\n      spotifyProcessor.authorize();\n    } else {\n      console.error('Spotify processor not initialized');\n    }\n  }\n\n  /**\r\n   * Show Spotify control UI\r\n   */\n  function showSpotifyControls() {\n    // Hide other controls\n    startMicButton.disabled = true;\n    fileInput.disabled = true;\n\n    // Show Spotify controls\n    spotifyControls.style.display = 'block';\n  }\n\n  /**\r\n   * Search for tracks on Spotify\r\n   * @returns {Promise<void>}\r\n   */\n  function searchSpotify() {\n    return _searchSpotify.apply(this, arguments);\n  }\n  /**\r\n   * Display Spotify search results\r\n   * @param {Array} tracks - Array of track objects from Spotify API\r\n   */\n  function _searchSpotify() {\n    _searchSpotify = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n      var query, results;\n      return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n        while (1) switch (_context5.prev = _context5.next) {\n          case 0:\n            if (spotifyProcessor) {\n              _context5.next = 2;\n              break;\n            }\n            return _context5.abrupt(\"return\");\n          case 2:\n            query = document.getElementById('spotify-search').value.trim();\n            if (query) {\n              _context5.next = 5;\n              break;\n            }\n            return _context5.abrupt(\"return\");\n          case 5:\n            _context5.prev = 5;\n            _context5.next = 8;\n            return spotifyProcessor.searchTracks(query);\n          case 8:\n            results = _context5.sent;\n            displaySearchResults(results.tracks.items);\n            _context5.next = 15;\n            break;\n          case 12:\n            _context5.prev = 12;\n            _context5.t0 = _context5[\"catch\"](5);\n            console.error('Error searching Spotify:', _context5.t0);\n          case 15:\n          case \"end\":\n            return _context5.stop();\n        }\n      }, _callee5, null, [[5, 12]]);\n    }));\n    return _searchSpotify.apply(this, arguments);\n  }\n  function displaySearchResults(tracks) {\n    var spotifyResults = document.getElementById('spotify-results');\n    var spotifyTrackName = document.getElementById('spotify-track-name');\n    spotifyResults.innerHTML = '';\n    tracks.forEach(function (track) {\n      var trackElement = document.createElement('div');\n      trackElement.className = 'track-result';\n      trackElement.innerHTML = \"\\n        <div class=\\\"track-info\\\">\\n          <div class=\\\"track-name\\\">\".concat(track.name, \"</div>\\n          <div class=\\\"track-artist\\\">\").concat(track.artists[0].name, \"</div>\\n        </div>\\n      \");\n      trackElement.addEventListener('click', function () {\n        spotifyProcessor.playTrack(track.uri);\n        spotifyTrackName.textContent = \"\".concat(track.name, \" - \").concat(track.artists[0].name);\n      });\n      spotifyResults.appendChild(trackElement);\n    });\n  }\n\n  // ====== APPLICATION STARTUP ======\n\n  // Start sending data\n  sendAudioDataToAFrame();\n\n  // Disable debug mode after 10 seconds to avoid console spam\n  setTimeout(function () {\n    audioProcessor.setDebugMode(false);\n    console.log(\"Debug mode disabled to reduce console output\");\n  }, 10000);\n\n  // Set up toggle controls\n  setupToggleControls();\n\n  // Set up event listener for play/pause button\n  playPauseButton.addEventListener('click', togglePlayPause);\n\n  /**\r\n   * Toggle play/pause for current audio\r\n   */\n  function togglePlayPause() {\n    console.log(\"Toggle play/pause clicked, current state:\", isAudioPlaying);\n    if (isAudioPlaying) {\n      audioProcessor.pause();\n      isAudioPlaying = false;\n    } else {\n      audioProcessor.play();\n      isAudioPlaying = true;\n    }\n    updatePlayPauseButton();\n  }\n\n  /**\r\n   * Update the play/pause button appearance\r\n   */\n  function updatePlayPauseButton() {\n    if (playPauseButton) {\n      playPauseButton.textContent = isAudioPlaying ? '⏸' : '▶';\n      console.log(\"Updated play/pause button to:\", playPauseButton.textContent);\n    }\n  }\n\n  /**\r\n   * Add play/pause control to the UI\r\n   */\n  function addPlayPauseControl() {\n    // Show the playback controls\n    playbackControls.style.display = 'block';\n\n    // Update button state\n    updatePlayPauseButton();\n  }\n\n  /**\r\n   * Remove play/pause control from the UI\r\n   */\n  function removePlayPauseControl() {\n    playbackControls.style.display = 'none';\n  }\n\n  // Get reference to volume slider\n  var volumeSlider = document.getElementById('volume-slider');\n\n  /**\r\n   * Handle volume slider changes\r\n   */\n  volumeSlider.addEventListener('input', function () {\n    // Get volume from slider (0-100) and normalize to 0-1\n    var rawVolume = parseFloat(volumeSlider.value);\n    var volume = rawVolume / 100;\n\n    // Set volume on audio processor (which sets volume on its internal gain node)\n    audioProcessor.setVolume(volume);\n\n    // Update volume icon based on level\n    var volumeIcon = document.querySelector('.volume-icon');\n    if (volume === 0) {\n      volumeIcon.textContent = '🔇';\n    } else if (volume < 0.5) {\n      volumeIcon.textContent = '🔉';\n    } else {\n      volumeIcon.textContent = '🔊';\n    }\n    console.log(\"Volume changed to:\", volume, \"(raw slider value:\", rawVolume, \")\");\n  });\n\n  /**\r\n   * Set initial volume on audio processor\r\n   */\n  audioProcessor.setVolume(1.0); // Set default volume\n\n  /**\r\n   * Switch to a new audio source, properly cleaning up the previous one\r\n   * @param {string} sourceType - Type of source to switch to ('mic', 'file', 'url', 'spotify', 'system', 'demo')\r\n   */\n  function switchAudioSource(sourceType) {\n    console.log(\"Switching audio source to: \".concat(sourceType));\n\n    // Stop the current source first\n    if (audioProcessor.isActive) {\n      audioProcessor.stop();\n    }\n\n    // Reset audio state\n    isAudioPlaying = false;\n\n    // Update current audio type\n    currentAudioType = sourceType;\n\n    // Reset UI elements based on new source type\n    resetUIForSourceSwitch();\n\n    // Apply source-specific UI updates\n    switch (sourceType) {\n      case 'mic':\n        updateUIForMicrophoneMode();\n        break;\n      case 'file':\n        updateUIForFileMode();\n        break;\n      case 'url':\n        updateUIForUrlMode();\n        break;\n      case 'spotify':\n        updateUIForSpotifyMode();\n        break;\n      case 'system':\n        updateUIForSystemAudioMode();\n        break;\n      case 'demo':\n        // Demo is a special case, we actually start playback immediately\n        playDemoTrack();\n        break;\n    }\n\n    // Ensure volume is set correctly\n    var volume = parseFloat(volumeSlider.value);\n    audioProcessor.setVolume(volume);\n    console.log(\"Audio source switched to \".concat(sourceType));\n  }\n\n  /**\r\n   * Reset all UI elements to a default state before switching sources\r\n   */\n  function resetUIForSourceSwitch() {\n    // Hide the playback controls by default\n    playbackControls.style.display = 'none';\n\n    // Reset the now playing text\n    nowPlaying.textContent = 'None';\n\n    // Ensure all input controls are disabled by default\n    startMicButton.disabled = true;\n    startSystemAudioButton.disabled = true;\n    fileInput.disabled = true;\n    openUrlModalButton.disabled = true;\n\n    // Hide Spotify controls\n    spotifyControls.style.display = 'none';\n\n    // Hide system audio container\n    systemAudioContainer.style.display = 'none';\n\n    // Show all radio buttons by default (we'll hide specific ones later if needed)\n    systemAudioOption.style.display = 'inline-block';\n\n    // Reset any custom label text\n    var systemAudioLabel = document.querySelector('label[for=\"system-audio-option\"]');\n    if (systemAudioLabel) {\n      systemAudioLabel.textContent = \"System Audio (via Mic)\";\n    }\n\n    // Show the now playing container\n    document.querySelector('.now-playing-container').style.display = 'flex';\n  }\n\n  /**\r\n   * Play the demo track\r\n   */\n  function playDemoTrack() {\n    return _playDemoTrack.apply(this, arguments);\n  }\n  /**\r\n   * Restart the current audio source\r\n   * Useful when something breaks and you need to reset the audio system\r\n   */\n  function _playDemoTrack() {\n    _playDemoTrack = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n      var response, arrayBuffer, blob, file;\n      return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n        while (1) switch (_context6.prev = _context6.next) {\n          case 0:\n            // Show that we're loading\n            nowPlaying.textContent = 'Loading Demo Track...';\n            _context6.prev = 1;\n            _context6.next = 4;\n            return fetch(DEMO_TRACK_URL);\n          case 4:\n            response = _context6.sent;\n            _context6.next = 7;\n            return response.arrayBuffer();\n          case 7:\n            arrayBuffer = _context6.sent;\n            blob = new Blob([arrayBuffer], {\n              type: response.headers.get('content-type')\n            });\n            file = new File([blob], 'demo-track.mp3', {\n              type: 'audio/mpeg'\n            });\n            _context6.next = 12;\n            return audioProcessor.initFile(file);\n          case 12:\n            nowPlaying.textContent = 'Demo Track';\n\n            // Update audio state\n            isAudioPlaying = true;\n            currentAudioType = 'demo';\n\n            // Add play/pause control\n            addPlayPauseControl();\n            console.log(\"Demo track initialized\");\n            _context6.next = 24;\n            break;\n          case 19:\n            _context6.prev = 19;\n            _context6.t0 = _context6[\"catch\"](1);\n            console.error('Error playing demo track:', _context6.t0);\n            alert('Error playing demo track: ' + _context6.t0.message);\n            nowPlaying.textContent = 'Error: Demo Track Failed';\n          case 24:\n          case \"end\":\n            return _context6.stop();\n        }\n      }, _callee6, null, [[1, 19]]);\n    }));\n    return _playDemoTrack.apply(this, arguments);\n  }\n  function restartCurrentSource() {\n    // Only if we have an active audio type\n    if (currentAudioType) {\n      // Save the current type\n      var savedType = currentAudioType;\n\n      // Stop everything\n      if (audioProcessor.isActive) {\n        audioProcessor.stop();\n      }\n\n      // Wait a tiny bit for the audio context to reset\n      setTimeout(function () {\n        // Restart with the same source type\n        switchAudioSource(savedType);\n      }, 100);\n    }\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/main.js\n");

/***/ }),

/***/ "./src/scripts/SpotifyAPIHandler.js":
/*!******************************************!*\
  !*** ./src/scripts/SpotifyAPIHandler.js ***!
  \******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SpotifyAPIHandler: () => (/* binding */ SpotifyAPIHandler)\n/* harmony export */ });\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, \"catch\": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }\nfunction _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); }); }; }\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\n/**\r\n * Handles all Spotify API interactions\r\n * Separates API concerns from audio processing\r\n */\nvar SpotifyAPIHandler = /*#__PURE__*/function () {\n  function SpotifyAPIHandler() {\n    var _window$APP_CONFIG;\n    _classCallCheck(this, SpotifyAPIHandler);\n    this.clientId = ((_window$APP_CONFIG = window.APP_CONFIG) === null || _window$APP_CONFIG === void 0 ? void 0 : _window$APP_CONFIG.SPOTIFY_CLIENT_ID) || '';\n    this.redirectUri = window.location.origin + '/callback.html';\n    this.accessToken = null;\n    this.isAuthorized = false;\n    this.currentTrack = null;\n    this.playbackInterval = null;\n    this.playbackCallback = null;\n\n    // Validate configuration\n    if (!this.clientId) {\n      console.error('Spotify Client ID not configured. Spotify integration will not work.');\n    } else {\n      console.log('Spotify Client ID loaded successfully');\n    }\n\n    // Check if we're returning from an auth flow\n    this.checkAuth();\n  }\n\n  /**\r\n   * Start the Spotify authorization flow\r\n   */\n  return _createClass(SpotifyAPIHandler, [{\n    key: \"authorize\",\n    value: function authorize() {\n      // Generate a random state value for security\n      var state = this.generateRandomString(16);\n      localStorage.setItem('spotify_auth_state', state);\n\n      // Define the scopes needed for your application\n      var scope = 'user-read-playback-state user-read-currently-playing user-modify-playback-state';\n\n      // Redirect to Spotify authorization page\n      window.location.href = 'https://accounts.spotify.com/authorize' + '?response_type=token' + '&client_id=' + encodeURIComponent(this.clientId) + '&scope=' + encodeURIComponent(scope) + '&redirect_uri=' + encodeURIComponent(this.redirectUri) + '&state=' + encodeURIComponent(state);\n    }\n\n    /**\r\n     * Check if we have a valid auth token\r\n     * @returns {boolean} Whether we're authorized\r\n     */\n  }, {\n    key: \"checkAuth\",\n    value: function checkAuth() {\n      var params = this.getHashParams();\n      var storedState = localStorage.getItem('spotify_auth_state');\n      if (params.access_token && (params.state == null || params.state === storedState)) {\n        this.accessToken = params.access_token;\n        this.isAuthorized = true;\n\n        // Clear the hash parameters from the URL\n        window.history.replaceState({}, document.title, window.location.pathname);\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n    /**\r\n     * Register a callback to receive track updates\r\n     * @param {Function} callback Function to call with track updates\r\n     */\n  }, {\n    key: \"onPlaybackUpdate\",\n    value: function onPlaybackUpdate(callback) {\n      this.playbackCallback = callback;\n    }\n\n    /**\r\n     * Begin monitoring Spotify playback\r\n     */\n  }, {\n    key: \"startPlaybackMonitoring\",\n    value: function startPlaybackMonitoring() {\n      var _this = this;\n      // Check immediately\n      this.getCurrentPlayback();\n\n      // Then check every 3 seconds\n      this.playbackInterval = setInterval(function () {\n        _this.getCurrentPlayback();\n      }, 3000);\n    }\n\n    /**\r\n     * Stop monitoring playback state\r\n     */\n  }, {\n    key: \"stopPlaybackMonitoring\",\n    value: function stopPlaybackMonitoring() {\n      if (this.playbackInterval) {\n        clearInterval(this.playbackInterval);\n        this.playbackInterval = null;\n      }\n    }\n\n    /**\r\n     * Check if Spotify has an active device\r\n     * @returns {Promise<boolean>} Whether a device is active\r\n     */\n  }, {\n    key: \"hasActiveDevice\",\n    value: (function () {\n      var _hasActiveDevice = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              if (this.isAuthorized) {\n                _context.next = 2;\n                break;\n              }\n              return _context.abrupt(\"return\", false);\n            case 2:\n              _context.prev = 2;\n              _context.next = 5;\n              return fetch('https://api.spotify.com/v1/me/player', {\n                headers: {\n                  'Authorization': \"Bearer \".concat(this.accessToken)\n                }\n              });\n            case 5:\n              response = _context.sent;\n              return _context.abrupt(\"return\", response.status !== 204);\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](2);\n              console.error('Error checking for active device:', _context.t0);\n              return _context.abrupt(\"return\", false);\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this, [[2, 9]]);\n      }));\n      function hasActiveDevice() {\n        return _hasActiveDevice.apply(this, arguments);\n      }\n      return hasActiveDevice;\n    }()\n    /**\r\n     * Get the current playback state from Spotify\r\n     */\n    )\n  }, {\n    key: \"getCurrentPlayback\",\n    value: (function () {\n      var _getCurrentPlayback = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var _data$item$album$imag, response, data;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              if (this.isAuthorized) {\n                _context2.next = 2;\n                break;\n              }\n              return _context2.abrupt(\"return\", this.notifyPlaybackUpdate(null, 'Not authorized'));\n            case 2:\n              _context2.prev = 2;\n              _context2.next = 5;\n              return fetch('https://api.spotify.com/v1/me/player', {\n                headers: {\n                  'Authorization': \"Bearer \".concat(this.accessToken)\n                }\n              });\n            case 5:\n              response = _context2.sent;\n              if (!(response.status === 204)) {\n                _context2.next = 8;\n                break;\n              }\n              return _context2.abrupt(\"return\", this.notifyPlaybackUpdate(null, 'No active Spotify playback'));\n            case 8:\n              if (response.ok) {\n                _context2.next = 10;\n                break;\n              }\n              throw new Error(\"HTTP error \".concat(response.status));\n            case 10:\n              _context2.next = 12;\n              return response.json();\n            case 12:\n              data = _context2.sent;\n              if (data.item) {\n                _context2.next = 15;\n                break;\n              }\n              return _context2.abrupt(\"return\", this.notifyPlaybackUpdate(null, 'Nothing playing'));\n            case 15:\n              // Update the current track info\n              this.currentTrack = {\n                name: data.item.name,\n                artist: data.item.artists.map(function (a) {\n                  return a.name;\n                }).join(', '),\n                album: data.item.album.name,\n                albumArt: (_data$item$album$imag = data.item.album.images[0]) === null || _data$item$album$imag === void 0 ? void 0 : _data$item$album$imag.url,\n                isPlaying: data.is_playing,\n                uri: data.item.uri\n              };\n\n              // Notify any listeners\n              this.notifyPlaybackUpdate(this.currentTrack, this.currentTrack.isPlaying ? 'Now Playing' : 'Paused');\n              return _context2.abrupt(\"return\", this.currentTrack);\n            case 20:\n              _context2.prev = 20;\n              _context2.t0 = _context2[\"catch\"](2);\n              console.error('Error fetching current playback:', _context2.t0);\n              return _context2.abrupt(\"return\", this.notifyPlaybackUpdate(null, 'Error fetching playback'));\n            case 24:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this, [[2, 20]]);\n      }));\n      function getCurrentPlayback() {\n        return _getCurrentPlayback.apply(this, arguments);\n      }\n      return getCurrentPlayback;\n    }()\n    /**\r\n     * Notify callback about playback updates\r\n     * @param {Object|null} track Track information\r\n     * @param {string} status Status message\r\n     */\n    )\n  }, {\n    key: \"notifyPlaybackUpdate\",\n    value: function notifyPlaybackUpdate(track, status) {\n      if (this.playbackCallback) {\n        this.playbackCallback(track, status);\n      }\n      return track;\n    }\n\n    /**\r\n     * Toggle play/pause state\r\n     */\n  }, {\n    key: \"togglePlayback\",\n    value: (function () {\n      var _togglePlayback = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var _this2 = this;\n        var response, data, isPlaying;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              if (this.isAuthorized) {\n                _context3.next = 2;\n                break;\n              }\n              return _context3.abrupt(\"return\", false);\n            case 2:\n              _context3.prev = 2;\n              _context3.next = 5;\n              return fetch('https://api.spotify.com/v1/me/player', {\n                headers: {\n                  'Authorization': \"Bearer \".concat(this.accessToken)\n                }\n              });\n            case 5:\n              response = _context3.sent;\n              if (!(response.status === 204)) {\n                _context3.next = 9;\n                break;\n              }\n              alert('No active Spotify device found. Start playing in your Spotify app first.');\n              return _context3.abrupt(\"return\", false);\n            case 9:\n              if (response.ok) {\n                _context3.next = 11;\n                break;\n              }\n              throw new Error(\"HTTP error \".concat(response.status));\n            case 11:\n              _context3.next = 13;\n              return response.json();\n            case 13:\n              data = _context3.sent;\n              isPlaying = data.is_playing; // Send the opposite command\n              _context3.next = 17;\n              return fetch(\"https://api.spotify.com/v1/me/player/\".concat(isPlaying ? 'pause' : 'play'), {\n                method: 'PUT',\n                headers: {\n                  'Authorization': \"Bearer \".concat(this.accessToken)\n                }\n              });\n            case 17:\n              // Update immediately\n              setTimeout(function () {\n                return _this2.getCurrentPlayback();\n              }, 500);\n              return _context3.abrupt(\"return\", !isPlaying);\n            case 21:\n              _context3.prev = 21;\n              _context3.t0 = _context3[\"catch\"](2);\n              console.error('Error toggling playback:', _context3.t0);\n              return _context3.abrupt(\"return\", false);\n            case 25:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this, [[2, 21]]);\n      }));\n      function togglePlayback() {\n        return _togglePlayback.apply(this, arguments);\n      }\n      return togglePlayback;\n    }()\n    /**\r\n     * Resume playback\r\n     */\n    )\n  }, {\n    key: \"play\",\n    value: (function () {\n      var _play = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var _this3 = this;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              if (this.isAuthorized) {\n                _context4.next = 2;\n                break;\n              }\n              return _context4.abrupt(\"return\", false);\n            case 2:\n              _context4.prev = 2;\n              _context4.next = 5;\n              return fetch('https://api.spotify.com/v1/me/player/play', {\n                method: 'PUT',\n                headers: {\n                  'Authorization': \"Bearer \".concat(this.accessToken)\n                }\n              });\n            case 5:\n              // Update immediately\n              setTimeout(function () {\n                return _this3.getCurrentPlayback();\n              }, 500);\n              return _context4.abrupt(\"return\", true);\n            case 9:\n              _context4.prev = 9;\n              _context4.t0 = _context4[\"catch\"](2);\n              console.error('Error resuming Spotify playback:', _context4.t0);\n              return _context4.abrupt(\"return\", false);\n            case 13:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, this, [[2, 9]]);\n      }));\n      function play() {\n        return _play.apply(this, arguments);\n      }\n      return play;\n    }()\n    /**\r\n     * Pause playback\r\n     */\n    )\n  }, {\n    key: \"pause\",\n    value: (function () {\n      var _pause = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        var _this4 = this;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              if (this.isAuthorized) {\n                _context5.next = 2;\n                break;\n              }\n              return _context5.abrupt(\"return\", false);\n            case 2:\n              _context5.prev = 2;\n              _context5.next = 5;\n              return fetch('https://api.spotify.com/v1/me/player/pause', {\n                method: 'PUT',\n                headers: {\n                  'Authorization': \"Bearer \".concat(this.accessToken)\n                }\n              });\n            case 5:\n              // Update immediately\n              setTimeout(function () {\n                return _this4.getCurrentPlayback();\n              }, 500);\n              return _context5.abrupt(\"return\", true);\n            case 9:\n              _context5.prev = 9;\n              _context5.t0 = _context5[\"catch\"](2);\n              console.error('Error pausing Spotify playback:', _context5.t0);\n              return _context5.abrupt(\"return\", false);\n            case 13:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5, this, [[2, 9]]);\n      }));\n      function pause() {\n        return _pause.apply(this, arguments);\n      }\n      return pause;\n    }()\n    /**\r\n     * Skip to next track\r\n     */\n    )\n  }, {\n    key: \"nextTrack\",\n    value: (function () {\n      var _nextTrack = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n        var _this5 = this;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              if (this.isAuthorized) {\n                _context6.next = 2;\n                break;\n              }\n              return _context6.abrupt(\"return\", false);\n            case 2:\n              _context6.prev = 2;\n              _context6.next = 5;\n              return fetch('https://api.spotify.com/v1/me/player/next', {\n                method: 'POST',\n                headers: {\n                  'Authorization': \"Bearer \".concat(this.accessToken)\n                }\n              });\n            case 5:\n              // Wait a moment for Spotify to update\n              setTimeout(function () {\n                return _this5.getCurrentPlayback();\n              }, 500);\n              return _context6.abrupt(\"return\", true);\n            case 9:\n              _context6.prev = 9;\n              _context6.t0 = _context6[\"catch\"](2);\n              console.error('Error skipping to next track:', _context6.t0);\n              return _context6.abrupt(\"return\", false);\n            case 13:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6, this, [[2, 9]]);\n      }));\n      function nextTrack() {\n        return _nextTrack.apply(this, arguments);\n      }\n      return nextTrack;\n    }()\n    /**\r\n     * Skip to previous track\r\n     */\n    )\n  }, {\n    key: \"previousTrack\",\n    value: (function () {\n      var _previousTrack = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {\n        var _this6 = this;\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) switch (_context7.prev = _context7.next) {\n            case 0:\n              if (this.isAuthorized) {\n                _context7.next = 2;\n                break;\n              }\n              return _context7.abrupt(\"return\", false);\n            case 2:\n              _context7.prev = 2;\n              _context7.next = 5;\n              return fetch('https://api.spotify.com/v1/me/player/previous', {\n                method: 'POST',\n                headers: {\n                  'Authorization': \"Bearer \".concat(this.accessToken)\n                }\n              });\n            case 5:\n              // Wait a moment for Spotify to update\n              setTimeout(function () {\n                return _this6.getCurrentPlayback();\n              }, 500);\n              return _context7.abrupt(\"return\", true);\n            case 9:\n              _context7.prev = 9;\n              _context7.t0 = _context7[\"catch\"](2);\n              console.error('Error skipping to previous track:', _context7.t0);\n              return _context7.abrupt(\"return\", false);\n            case 13:\n            case \"end\":\n              return _context7.stop();\n          }\n        }, _callee7, this, [[2, 9]]);\n      }));\n      function previousTrack() {\n        return _previousTrack.apply(this, arguments);\n      }\n      return previousTrack;\n    }()\n    /**\r\n     * Search for tracks\r\n     * @param {string} query Search term\r\n     * @returns {Promise<Object>} Search results\r\n     */\n    )\n  }, {\n    key: \"searchTracks\",\n    value: (function () {\n      var _searchTracks = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee8(query) {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n          while (1) switch (_context8.prev = _context8.next) {\n            case 0:\n              if (this.isAuthorized) {\n                _context8.next = 2;\n                break;\n              }\n              return _context8.abrupt(\"return\", {\n                tracks: {\n                  items: []\n                }\n              });\n            case 2:\n              _context8.prev = 2;\n              _context8.next = 5;\n              return fetch(\"https://api.spotify.com/v1/search?q=\".concat(encodeURIComponent(query), \"&type=track&limit=10\"), {\n                headers: {\n                  'Authorization': \"Bearer \".concat(this.accessToken)\n                }\n              });\n            case 5:\n              response = _context8.sent;\n              if (response.ok) {\n                _context8.next = 8;\n                break;\n              }\n              throw new Error(\"HTTP error \".concat(response.status));\n            case 8:\n              _context8.next = 10;\n              return response.json();\n            case 10:\n              return _context8.abrupt(\"return\", _context8.sent);\n            case 13:\n              _context8.prev = 13;\n              _context8.t0 = _context8[\"catch\"](2);\n              console.error('Error searching tracks:', _context8.t0);\n              return _context8.abrupt(\"return\", {\n                tracks: {\n                  items: []\n                }\n              });\n            case 17:\n            case \"end\":\n              return _context8.stop();\n          }\n        }, _callee8, this, [[2, 13]]);\n      }));\n      function searchTracks(_x) {\n        return _searchTracks.apply(this, arguments);\n      }\n      return searchTracks;\n    }()\n    /**\r\n     * Play a specific track by URI\r\n     * @param {string} uri Track URI\r\n     */\n    )\n  }, {\n    key: \"playTrack\",\n    value: (function () {\n      var _playTrack = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee9(uri) {\n        var _this7 = this;\n        return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n          while (1) switch (_context9.prev = _context9.next) {\n            case 0:\n              if (this.isAuthorized) {\n                _context9.next = 2;\n                break;\n              }\n              return _context9.abrupt(\"return\", false);\n            case 2:\n              _context9.prev = 2;\n              _context9.next = 5;\n              return fetch('https://api.spotify.com/v1/me/player/play', {\n                method: 'PUT',\n                headers: {\n                  'Authorization': \"Bearer \".concat(this.accessToken)\n                },\n                body: JSON.stringify({\n                  uris: [uri]\n                })\n              });\n            case 5:\n              // Update immediately\n              setTimeout(function () {\n                return _this7.getCurrentPlayback();\n              }, 500);\n              return _context9.abrupt(\"return\", true);\n            case 9:\n              _context9.prev = 9;\n              _context9.t0 = _context9[\"catch\"](2);\n              console.error('Error playing track:', _context9.t0);\n              return _context9.abrupt(\"return\", false);\n            case 13:\n            case \"end\":\n              return _context9.stop();\n          }\n        }, _callee9, this, [[2, 9]]);\n      }));\n      function playTrack(_x2) {\n        return _playTrack.apply(this, arguments);\n      }\n      return playTrack;\n    }() // Helper method to parse hash parameters\n    )\n  }, {\n    key: \"getHashParams\",\n    value: function getHashParams() {\n      var hashParams = {};\n      var e,\n        r = /([^&;=]+)=?([^&;]*)/g,\n        q = window.location.hash.substring(1);\n      while (e = r.exec(q)) {\n        hashParams[e[1]] = decodeURIComponent(e[2]);\n      }\n      return hashParams;\n    }\n\n    // Generate a random string for the state parameter\n  }, {\n    key: \"generateRandomString\",\n    value: function generateRandomString(length) {\n      var text = '';\n      var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n      for (var i = 0; i < length; i++) {\n        text += possible.charAt(Math.floor(Math.random() * possible.length));\n      }\n      return text;\n    }\n\n    /**\r\n     * Clean up resources\r\n     */\n  }, {\n    key: \"cleanup\",\n    value: function cleanup() {\n      this.stopPlaybackMonitoring();\n    }\n\n    /**\r\n     * Simple hash function to convert a string to a numeric seed\r\n     * @param {string} str Input string\r\n     * @returns {number} Hash value\r\n     */\n  }, {\n    key: \"hashString\",\n    value: function hashString(str) {\n      var hash = 0;\n      for (var i = 0; i < str.length; i++) {\n        hash = (hash << 5) - hash + str.charCodeAt(i);\n        hash |= 0; // Convert to 32bit integer\n      }\n      return hash;\n    }\n  }]);\n}();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/SpotifyAPIHandler.js\n");

/***/ }),

/***/ "./src/scripts/audio/AudioProcessor.js":
/*!*********************************************!*\
  !*** ./src/scripts/audio/AudioProcessor.js ***!
  \*********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AudioProcessor: () => (/* binding */ AudioProcessor)\n/* harmony export */ });\n/* harmony import */ var _InitializedState_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./InitializedState.js */ \"./src/scripts/audio/InitializedState.js\");\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, \"catch\": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }\nfunction _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); }); }; }\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\n\nvar AudioProcessor = /*#__PURE__*/function () {\n  function AudioProcessor() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _classCallCheck(this, AudioProcessor);\n    // limit to one instance for whole scope\n    if (AudioProcessor.instance) {\n      return AudioProcessor.instance;\n    }\n    this.audioContext = new (window.AudioContext || window.webkitAudioContext)();\n    this.analyser = this.audioContext.createAnalyser();\n    this.analyser.fftSize = 2048;\n    this.analyser.smoothingTimeConstant = 0.8;\n    this.bufferLength = this.analyser.frequencyBinCount;\n    this.dataArray = new Uint8Array(this.analyser.frequencyBinCount);\n    this.state = new _InitializedState_js__WEBPACK_IMPORTED_MODULE_0__.InitializedState(this.audioContext, this.analyser);\n    this.isActive = false;\n    this.isPlaying = true;\n    this.source = null;\n    this.startTime = null;\n    this.debugMode = options.debugMode || false;\n    AudioProcessor.instance = this;\n  }\n  return _createClass(AudioProcessor, [{\n    key: \"play\",\n    value: function () {\n      var _play = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              this.isPlaying = true;\n              this.audioContext.resume();\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function play() {\n        return _play.apply(this, arguments);\n      }\n      return play;\n    }()\n  }, {\n    key: \"pause\",\n    value: function () {\n      var _pause = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              this.isPlaying = false;\n              this.audioContext.suspend();\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function pause() {\n        return _pause.apply(this, arguments);\n      }\n      return pause;\n    }()\n  }, {\n    key: \"initMicrophone\",\n    value: function () {\n      var _initMicrophone = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              if (this.isActive) {\n                _context3.next = 9;\n                break;\n              }\n              _context3.next = 3;\n              return this.state.initMicrophone();\n            case 3:\n              this.state = _context3.sent;\n              this.isActive = true;\n              this.audioContext.resume();\n              if (this.debugMode) {\n                console.log('initMicrophone');\n              }\n              _context3.next = 10;\n              break;\n            case 9:\n              if (this.debugMode) {\n                console.log('already active');\n              }\n            case 10:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this);\n      }));\n      function initMicrophone() {\n        return _initMicrophone.apply(this, arguments);\n      }\n      return initMicrophone;\n    }()\n  }, {\n    key: \"initFile\",\n    value: function () {\n      var _initFile = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(file) {\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              if (this.isActive) {\n                _context4.next = 9;\n                break;\n              }\n              _context4.next = 3;\n              return this.state.initFile(file);\n            case 3:\n              this.state = _context4.sent;\n              this.isActive = true;\n              this.audioContext.resume();\n              if (this.debugMode) {\n                console.log('initFile:', file.name);\n              }\n              _context4.next = 10;\n              break;\n            case 9:\n              if (this.debugMode) {\n                console.log('already active');\n              }\n            case 10:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, this);\n      }));\n      function initFile(_x) {\n        return _initFile.apply(this, arguments);\n      }\n      return initFile;\n    }()\n  }, {\n    key: \"initMockData\",\n    value: function initMockData() {\n      if (!this.isActive) {\n        this.state = this.state.initMockData();\n        this.isActive = true;\n        this.audioContext.resume();\n        if (this.debugMode) {\n          console.log('initMockData');\n        }\n      } else {\n        if (this.debugMode) {\n          console.log('already active');\n        }\n      }\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      if (this.isActive) {\n        this.state = this.state.stop();\n        this.isActive = false;\n        if (this.debugMode) {\n          console.log('Audio processing stopped');\n        }\n      } else {\n        if (this.debugMode) {\n          console.log('already inactive');\n        }\n      }\n    }\n\n    /**\r\n     * Set debug mode for the audio processor\r\n     * Controls logging, analyzer settings, and processing behavior\r\n     * \r\n     * @param {boolean} enabled - Whether debug mode should be enabled\r\n     */\n  }, {\n    key: \"setDebugMode\",\n    value: function setDebugMode(enabled) {\n      // Store the previous value to detect changes\n      var previousMode = this.debugMode;\n\n      // Update the flag\n      this.debugMode = enabled;\n\n      // If this is a mode change, log it\n      if (previousMode !== enabled) {\n        console.log(\"Debug mode \".concat(enabled ? 'enabled' : 'disabled'));\n\n        // Adjust analyzer settings for debug mode\n        if (enabled) {\n          // In debug mode, use more precise settings for better diagnostic data\n          this.analyser.smoothingTimeConstant = 0.5; // Less smoothing for more responsive debugging\n\n          // Log current state\n          console.log('Audio processor state:', {\n            isActive: this.isActive,\n            isPlaying: this.isPlaying,\n            fftSize: this.analyser.fftSize,\n            smoothingTimeConstant: this.analyser.smoothingTimeConstant,\n            bufferLength: this.bufferLength\n          });\n        } else {\n          // In production mode, optimize for performance\n          this.analyser.smoothingTimeConstant = 0.8; // More smoothing for better visual quality\n        }\n      }\n\n      // If we have an active connection, logging information about it\n      if (this.isActive && enabled) {\n        console.log('Active audio connection with current state:', this.state);\n      }\n    }\n\n    // TODO: Check if active for below functions\n  }, {\n    key: \"getFrequencyData\",\n    value: function getFrequencyData() {\n      this._normalizeFrequencyData(this.state.getFrequencyData(this.dataArray));\n      return this.dataArray;\n    }\n  }, {\n    key: \"getTimeDomainData\",\n    value: function getTimeDomainData() {\n      this._normalizeTimeDomainData(this.state.getTimeDomainData(this.dataArray));\n      return this.dataArray;\n    }\n  }, {\n    key: \"getFrequencyDataForAPI\",\n    value: function getFrequencyDataForAPI() {\n      this._normalizeFrequencyData(this.getFrequencyData(), this.dataArray);\n      return this.dataArray.slice();\n    }\n  }, {\n    key: \"getTimeDomainDataForAPI\",\n    value: function getTimeDomainDataForAPI() {\n      this._normalizeTimeDomainData(this.getTimeDomainData(), this.dataArray);\n      return this.dataArray.slice();\n    }\n  }, {\n    key: \"getFrequencyBinCount\",\n    value: function getFrequencyBinCount() {\n      return this.analyser.frequencyBinCount;\n    }\n\n    /**\r\n     * Helper function to normalize frequency data from dB (-100 to 0) to 0-255 range\r\n     * @param {Float32Array} sourceData - Raw frequency data (typically -100 to 0 dB)\r\n     * @param {Uint8Array} targetArray - Target array for normalized values\r\n     * @private\r\n     */\n  }, {\n    key: \"_normalizeFrequencyData\",\n    value: function _normalizeFrequencyData(sourceData, targetArray) {\n      for (var i = 0; i < sourceData.length; i++) {\n        // Frequency data is typically in -100 to 0 dB range\n        // Map to 0-255 range, where -100dB = 0 and 0dB = 255\n        var normalizedValue = (sourceData[i] + 100) / 100;\n        targetArray[i] = Math.floor(Math.max(0, Math.min(255, normalizedValue * 255)));\n      }\n    }\n\n    /**\r\n     * Helper function to normalize time domain data from -1,1 to 0-255 range\r\n     * @param {Float32Array} sourceData - Raw time domain data (-1 to 1)\r\n     * @param {Uint8Array} targetArray - Target array for normalized values\r\n     * @private\r\n     */\n  }, {\n    key: \"_normalizeTimeDomainData\",\n    value: function _normalizeTimeDomainData(sourceData, targetArray) {\n      for (var i = 0; i < sourceData.length; i++) {\n        // Time domain data is in -1 to 1 range\n        // Map -1.0 to 1.0 to 0-255 range\n        var normalizedValue = (sourceData[i] + 1) / 2;\n        targetArray[i] = Math.floor(Math.max(0, Math.min(255, normalizedValue * 255)));\n      }\n    }\n  }], [{\n    key: \"getInstance\",\n    value: function getInstance() {\n      if (!AudioProcessor.instance) {\n        AudioProcessor.instance = new AudioProcessor();\n      }\n      return AudioProcessor.instance;\n    }\n  }]);\n}();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/audio/AudioProcessor.js\n");

/***/ }),

/***/ "./src/scripts/audio/GPUAudioProcessor.js":
/*!************************************************!*\
  !*** ./src/scripts/audio/GPUAudioProcessor.js ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GPUAudioProcessor: () => (/* binding */ GPUAudioProcessor)\n/* harmony export */ });\n/* harmony import */ var _AudioProcessor_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AudioProcessor.js */ \"./src/scripts/audio/AudioProcessor.js\");\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, \"catch\": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }\nfunction _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); }); }; }\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _possibleConstructorReturn(t, e) { if (e && (\"object\" == _typeof(e) || \"function\" == typeof e)) return e; if (void 0 !== e) throw new TypeError(\"Derived constructors may only return object or undefined\"); return _assertThisInitialized(t); }\nfunction _assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); return e; }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _superPropGet(t, o, e, r) { var p = _get(_getPrototypeOf(1 & r ? t.prototype : t), o, e); return 2 & r && \"function\" == typeof p ? function (t) { return p.apply(e, t); } : p; }\nfunction _get() { return _get = \"undefined\" != typeof Reflect && Reflect.get ? Reflect.get.bind() : function (e, t, r) { var p = _superPropBase(e, t); if (p) { var n = Object.getOwnPropertyDescriptor(p, t); return n.get ? n.get.call(arguments.length < 3 ? e : r) : n.value; } }, _get.apply(null, arguments); }\nfunction _superPropBase(t, o) { for (; !{}.hasOwnProperty.call(t, o) && null !== (t = _getPrototypeOf(t));); return t; }\nfunction _getPrototypeOf(t) { return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, _getPrototypeOf(t); }\nfunction _inherits(t, e) { if (\"function\" != typeof e && null !== e) throw new TypeError(\"Super expression must either be null or a function\"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, \"prototype\", { writable: !1 }), e && _setPrototypeOf(t, e); }\nfunction _setPrototypeOf(t, e) { return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, _setPrototypeOf(t, e); }\n\n/**\r\n * GPUAudioProcessor - Audio analysis class with WebGL/THREE.js integration\r\n * Handles audio input sources and converts audio data to GPU-friendly formats\r\n */\nvar GPUAudioProcessor = /*#__PURE__*/function (_AudioProcessor) {\n  /**\r\n   * Create a new GPUAudioProcessor\r\n   * @param {Object} options - Configuration options\r\n   * @param {number} [options.fftSize=2048] - FFT size for frequency analysis\r\n   * @param {number} [options.smoothingTimeConstant=0.8] - Smoothing factor for analysis\r\n   * @param {boolean} [options.debugMode=false] - Enable console debugging output\r\n   */\n  function GPUAudioProcessor() {\n    var _this;\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _classCallCheck(this, GPUAudioProcessor);\n    _this = _callSuper(this, GPUAudioProcessor); // Call parent constructor to initialize base state\n\n    // Get the audio context and analyzer from the parent class\n    _this.audioCtx = _this.audioContext;\n    _this.analyser = _this.analyser;\n\n    // Update analyzer with provided options\n    if (options.fftSize) _this.analyser.fftSize = options.fftSize;\n    if (options.smoothingTimeConstant) _this.analyser.smoothingTimeConstant = options.smoothingTimeConstant;\n\n    // Create data buffers for GPU-specific formats (Float32 vs Uint8 in base class)\n    _this.frequencyBinCount = _this.analyser.frequencyBinCount;\n    _this.frequencyData = new Float32Array(_this.frequencyBinCount);\n    _this.timeDomainData = new Float32Array(_this.frequencyBinCount);\n\n    // For debugging\n    _this.debugMode = options.debugMode || false;\n\n    // Create data textures for WebGL\n    _this.frequencyDataTexture = _this.createDataTexture(_this.frequencyData);\n    _this.timeDomainDataTexture = _this.createDataTexture(_this.timeDomainData);\n    return _this;\n  }\n\n  /**\r\n   * Creates a THREE.js texture from audio data\r\n   * @param {Float32Array} data - Audio data to convert to texture\r\n   * @returns {THREE.DataTexture} Texture containing the audio data\r\n   */\n  _inherits(GPUAudioProcessor, _AudioProcessor);\n  return _createClass(GPUAudioProcessor, [{\n    key: \"createDataTexture\",\n    value: function createDataTexture(data) {\n      var texture = new THREE.DataTexture(data, data.length, 1, THREE.RedFormat, THREE.FloatType);\n      texture.needsUpdate = true;\n      return texture;\n    }\n\n    /**\r\n     * Updates the internal textures with fresh audio data\r\n     * Called each frame to get new audio analysis\r\n     * Side-effects: Updates frequencyData, timeDomainData, and their textures\r\n     */\n  }, {\n    key: \"updateTextureData\",\n    value: function updateTextureData() {\n      // Get fresh data\n      this.analyser.getFloatFrequencyData(this.frequencyData);\n      this.analyser.getFloatTimeDomainData(this.timeDomainData);\n      this.frequencyDataTexture.needsUpdate = true;\n      this.timeDomainDataTexture.needsUpdate = true;\n    }\n\n    /**\r\n     * Initializes microphone input\r\n     * Overrides base class method to add GPU-specific handling\r\n     * @returns {Promise<void>} Promise that resolves when mic is initialized\r\n     */\n  }, {\n    key: \"initMicrophone\",\n    value: (function () {\n      var _initMicrophone = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _superPropGet(GPUAudioProcessor, \"initMicrophone\", this, 3)([]);\n            case 2:\n              // Get fresh data for our GPU textures\n              this.updateTextureData();\n              if (this.debugMode) {\n                console.log('GPU-enhanced microphone initialized');\n              }\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function initMicrophone() {\n        return _initMicrophone.apply(this, arguments);\n      }\n      return initMicrophone;\n    }()\n    /**\r\n     * Initializes audio from a file\r\n     * Overrides base class method to add GPU-specific handling\r\n     * @param {File} file - The audio file to play\r\n     * @returns {Promise<void>} Promise that resolves when file is initialized\r\n     */\n    )\n  }, {\n    key: \"initFile\",\n    value: (function () {\n      var _initFile = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(file) {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _superPropGet(GPUAudioProcessor, \"initFile\", this, 3)([file]);\n            case 2:\n              // Get fresh data for our GPU textures\n              this.updateTextureData();\n              if (this.debugMode) {\n                console.log('GPU-enhanced file playback initialized');\n              }\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function initFile(_x) {\n        return _initFile.apply(this, arguments);\n      }\n      return initFile;\n    }()\n    /**\r\n     * Initializes audio from a URL (for demo or preset audio)\r\n     * New GPU-specific method not in base class\r\n     * @param {string} url - The URL of the audio file to play\r\n     * @returns {Promise<void>} Promise that resolves when audio starts playing\r\n     */\n    )\n  }, {\n    key: \"initFromUrl\",\n    value: (function () {\n      var _initFromUrl = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(url) {\n        var response, arrayBuffer, audioBuffer, file;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return fetch(url);\n            case 3:\n              response = _context3.sent;\n              if (response.ok) {\n                _context3.next = 6;\n                break;\n              }\n              throw new Error(\"HTTP error! Status: \".concat(response.status));\n            case 6:\n              _context3.next = 8;\n              return response.arrayBuffer();\n            case 8:\n              arrayBuffer = _context3.sent;\n              _context3.next = 11;\n              return this.audioContext.decodeAudioData(arrayBuffer);\n            case 11:\n              audioBuffer = _context3.sent;\n              // Create and set up a source using equivalent of initFile\n              // This simulates a file being loaded but from a URL\n              file = new File([arrayBuffer], \"audio-from-url.mp3\", {\n                type: \"audio/mpeg\"\n              });\n              _context3.next = 15;\n              return this.initFile(file);\n            case 15:\n              if (this.debugMode) {\n                console.log('Playing audio from URL:', url);\n              }\n              _context3.next = 21;\n              break;\n            case 18:\n              _context3.prev = 18;\n              _context3.t0 = _context3[\"catch\"](0);\n              console.error('Error loading audio from URL:', _context3.t0);\n            case 21:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this, [[0, 18]]);\n      }));\n      function initFromUrl(_x2) {\n        return _initFromUrl.apply(this, arguments);\n      }\n      return initFromUrl;\n    }()\n    /**\r\n     * Stops any currently playing audio source\r\n     * Overrides base class method to add GPU-specific cleanup\r\n     */\n    )\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      // Call the base class implementation to handle state transitions\n      _superPropGet(GPUAudioProcessor, \"stop\", this, 3)([]);\n\n      // Clear our GPU textures or reset them to default values\n      this.frequencyData.fill(0);\n      this.timeDomainData.fill(0);\n      this.frequencyDataTexture.needsUpdate = true;\n      this.timeDomainDataTexture.needsUpdate = true;\n      if (this.debugMode) {\n        console.log('GPU audio processing stopped');\n      }\n    }\n\n    /**\r\n     * Pauses the current audio source\r\n     * Overrides base class method\r\n     */\n  }, {\n    key: \"pause\",\n    value: (function () {\n      var _pause = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return _superPropGet(GPUAudioProcessor, \"pause\", this, 3)([]);\n            case 2:\n              if (this.debugMode) {\n                console.log('GPU audio processing paused');\n              }\n            case 3:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, this);\n      }));\n      function pause() {\n        return _pause.apply(this, arguments);\n      }\n      return pause;\n    }()\n    /**\r\n     * Resumes the current audio source\r\n     * Overrides base class method\r\n     */\n    )\n  }, {\n    key: \"play\",\n    value: (function () {\n      var _play = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return _superPropGet(GPUAudioProcessor, \"play\", this, 3)([]);\n            case 2:\n              if (this.debugMode) {\n                console.log('GPU audio processing resumed');\n              }\n            case 3:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5, this);\n      }));\n      function play() {\n        return _play.apply(this, arguments);\n      }\n      return play;\n    }()\n    /**\r\n     * @deprecated Use stop() instead\r\n     */\n    )\n  }, {\n    key: \"stopCurrentSource\",\n    value: function stopCurrentSource() {\n      console.warn('stopCurrentSource() is deprecated, use stop() instead');\n      this.stop();\n    }\n\n    /**\r\n     * @deprecated Use pause() instead\r\n     */\n  }, {\n    key: \"pauseCurrentSource\",\n    value: function pauseCurrentSource() {\n      console.warn('pauseCurrentSource() is deprecated, use pause() instead');\n      this.pause();\n    }\n\n    /**\r\n     * @deprecated Use play() instead\r\n     */\n  }, {\n    key: \"resumeCurrentSource\",\n    value: function resumeCurrentSource() {\n      console.warn('resumeCurrentSource() is deprecated, use play() instead');\n      this.play();\n    }\n\n    /**\r\n     * Returns raw frequency domain data\r\n     * @returns {Float32Array} Frequency data in decibels (typically -100 to 0 dB)\r\n     */\n  }, {\n    key: \"getFrequencyData\",\n    value: function getFrequencyData() {\n      return this.frequencyData;\n    }\n\n    /**\r\n     * Returns raw time domain data\r\n     * @returns {Float32Array} Time domain data (values between -1 and 1)\r\n     */\n  }, {\n    key: \"getTimeDomainData\",\n    value: function getTimeDomainData() {\n      // Make sure we have the latest data\n      this.analyser.getFloatTimeDomainData(this.timeDomainData);\n      return this.timeDomainData;\n    }\n\n    /**\r\n     * Returns the frequency data texture for use in shaders\r\n     * @returns {THREE.DataTexture} Texture containing frequency data\r\n     */\n  }, {\n    key: \"getFrequencyDataTexture\",\n    value: function getFrequencyDataTexture() {\n      return this.frequencyDataTexture;\n    }\n\n    /**\r\n     * Returns the time domain data texture for use in shaders\r\n     * @returns {THREE.DataTexture} Texture containing time domain data\r\n     */\n  }, {\n    key: \"getTimeDomainDataTexture\",\n    value: function getTimeDomainDataTexture() {\n      return this.timeDomainDataTexture;\n    }\n\n    /**\r\n     * Cleans up all resources used by this processor\r\n     * Should be called when the processor is no longer needed\r\n     */\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      // First stop any active audio\n      this.stop();\n\n      // Clean up WebGL resources\n      if (this.frequencyDataTexture) {\n        this.frequencyDataTexture.dispose();\n        this.frequencyDataTexture = null;\n      }\n      if (this.timeDomainDataTexture) {\n        this.timeDomainDataTexture.dispose();\n        this.timeDomainDataTexture = null;\n      }\n\n      // The base class manages the AudioContext cleanup\n      // so we don't need to close it manually\n\n      if (this.debugMode) {\n        console.log('GPU audio processor resources disposed');\n      }\n    }\n\n    /**\r\n     * Connects an external analyzer node instead of the internal one\r\n     * @param {AnalyserNode} analyser - Web Audio analyzer node to use\r\n     */\n  }, {\n    key: \"connectExternalAnalyser\",\n    value: function connectExternalAnalyser(analyser) {\n      this.analyser = analyser;\n      console.log('Connected external analyzer');\n    }\n\n    /**\r\n     * Sets the volume of the audio output\r\n     * @param {number} volume - Volume level between 0 and 1\r\n     */\n  }, {\n    key: \"setVolume\",\n    value: function setVolume(volume) {\n      // Get the current state\n      var currentState = this.state;\n\n      // Use a more moderate scaling curve - square root for more audible range at low volumes\n      // This makes lower volume settings more usable while still providing good control\n      var scaledVolume = Math.sqrt(volume);\n\n      // Store the current volume value for reference\n      this.volume = volume;\n\n      // Call the state's setVolume method if available\n      if (currentState && typeof currentState.setVolume === 'function') {\n        // The state will handle all volume implementation\n        // Pass the original volume, not the scaled volume, to avoid double-scaling\n        currentState.setVolume(volume);\n\n        // Log for debugging\n        console.log('Volume set via state method:', volume, 'Scaled volume (not used):', scaledVolume);\n\n        // We've delegated volume control to the state, so no need to also do it here\n        // This prevents double-application of volume changes\n        return;\n      }\n\n      // Fallback: If state doesn't have a setVolume method, handle it here\n      if (currentState && currentState.gainNode) {\n        // If the state has a gain node, use it\n        currentState.gainNode.gain.value = volume === 0 ? 0 : Math.max(0.0001, scaledVolume);\n        console.log('Volume set directly on state gain node:', volume, 'Applied gain:', currentState.gainNode.gain.value);\n      } else if (this.gainNode) {\n        // Use our local gain node as fallback\n        this.gainNode.gain.value = volume === 0 ? 0 : Math.max(0.0001, scaledVolume);\n        console.log('Volume set on processor gain node:', volume, 'Applied gain:', this.gainNode.gain.value);\n      } else {\n        // Create a gain node if none exists\n        this.gainNode = this.audioContext.createGain();\n        this.gainNode.gain.value = volume === 0 ? 0 : Math.max(0.0001, scaledVolume);\n\n        // Connect through the state system if possible\n        if (this.analyser) {\n          try {\n            this.analyser.disconnect();\n            this.analyser.connect(this.gainNode);\n            this.gainNode.connect(this.audioContext.destination);\n            console.log('Created new gain node and set up connections');\n          } catch (e) {\n            console.error('Error setting up gain node:', e);\n          }\n        }\n        console.log('Created new gain node with volume:', volume, 'Applied gain:', this.gainNode.gain.value);\n      }\n      if (this.debugMode) {\n        console.log('Volume set to:', volume, 'Scaled volume:', scaledVolume);\n      }\n    }\n\n    /**\r\n     * Updates the internal analyzer settings and recreates data buffers\r\n     * Should be called after changing FFT size or other analyzer settings\r\n     */\n  }, {\n    key: \"updateAnalyzerSettings\",\n    value: function updateAnalyzerSettings() {\n      // Get the current fft size and smoothing\n      var fftSize = this.analyser.fftSize;\n      var smoothingTimeConstant = this.analyser.smoothingTimeConstant;\n\n      // Store current values to restore after setup\n      this.fftSize = fftSize;\n      this.smoothingTimeConstant = smoothingTimeConstant;\n\n      // Update our data buffers after analyzer settings change\n      this.frequencyBinCount = this.analyser.frequencyBinCount;\n      this.frequencyData = new Float32Array(this.frequencyBinCount);\n      this.timeDomainData = new Float32Array(this.frequencyBinCount);\n\n      // Recreate textures with new size\n      if (this.frequencyDataTexture) {\n        this.frequencyDataTexture.dispose();\n      }\n      if (this.timeDomainDataTexture) {\n        this.timeDomainDataTexture.dispose();\n      }\n      this.frequencyDataTexture = this.createDataTexture(this.frequencyData);\n      this.timeDomainDataTexture = this.createDataTexture(this.timeDomainData);\n      if (this.debugMode) {\n        console.log(\"Analyzer settings updated: fftSize=\".concat(fftSize, \", smoothing=\").concat(smoothingTimeConstant));\n      }\n    }\n\n    /**\r\n     * Set the FFT size for frequency analysis\r\n     * @param {number} size - Must be a power of 2 between 32 and 32768\r\n     */\n  }, {\n    key: \"setFFTSize\",\n    value: function setFFTSize(size) {\n      // Ensure size is a valid FFT size (power of 2)\n      var validSizes = [32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768];\n      if (!validSizes.includes(size)) {\n        console.error('FFT size must be a power of 2 between 32 and 32768');\n        return;\n      }\n\n      // Set the size on the analyzer\n      this.analyser.fftSize = size;\n\n      // Update our buffers and textures\n      this.updateAnalyzerSettings();\n    }\n\n    /**\r\n     * @deprecated Use getFrequencyDataTexture() and getTimeDomainDataTexture() instead\r\n     */\n  }, {\n    key: \"reconnectAnalyzer\",\n    value: function reconnectAnalyzer() {\n      var connectToOutput = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      console.warn('reconnectAnalyzer() is deprecated as it may interfere with state management');\n      // Legacy implementation maintained for backward compatibility\n      try {\n        this.analyser.disconnect();\n        if (connectToOutput) {\n          if (this.gainNode) {\n            this.analyser.connect(this.gainNode);\n            this.gainNode.connect(this.audioContext.destination);\n          } else {\n            this.analyser.connect(this.audioContext.destination);\n          }\n        }\n      } catch (e) {\n        console.error('Error in reconnectAnalyzer:', e);\n      }\n    }\n\n    /**\r\n     * @deprecated Use the state pattern methods instead\r\n     */\n  }, {\n    key: \"setupAnalyser\",\n    value: function setupAnalyser() {\n      console.warn('setupAnalyser() is deprecated as it may interfere with state management');\n      this.updateAnalyzerSettings();\n    }\n\n    /**\r\n     * @deprecated Use updateAnalyzerSettings() instead\r\n     */\n  }, {\n    key: \"ensureAudioContext\",\n    value: function ensureAudioContext() {\n      console.warn('ensureAudioContext() is deprecated. Use updateAnalyzerSettings() instead');\n      // Forward to play() which handles resuming the AudioContext\n      this.play();\n    }\n\n    /**\r\n     * Override the base class getFrequencyDataForAPI method to use our Float32 data\r\n     * @returns {Uint8Array} Normalized frequency data in 0-255 range\r\n     */\n  }, {\n    key: \"getFrequencyDataForAPI\",\n    value: function getFrequencyDataForAPI() {\n      // Update our Float32 data first\n      this.analyser.getFloatFrequencyData(this.frequencyData);\n\n      // Then convert to Uint8Array format for API compatibility\n      var uint8Array = new Uint8Array(this.frequencyBinCount);\n      this._normalizeFrequencyData(this.frequencyData, uint8Array);\n      if (this.debugMode && uint8Array.length > 0) {\n        console.log(\"Converted frequency data sample:\", Array.from(uint8Array.slice(0, 5)));\n      }\n      return uint8Array;\n    }\n\n    /**\r\n     * Override the base class getTimeDomainDataForAPI method to use our Float32 data\r\n     * @returns {Uint8Array} Normalized time domain data in 0-255 range\r\n     */\n  }, {\n    key: \"getTimeDomainDataForAPI\",\n    value: function getTimeDomainDataForAPI() {\n      // Update our Float32 data first\n      this.analyser.getFloatTimeDomainData(this.timeDomainData);\n\n      // Then convert to Uint8Array format for API compatibility\n      var uint8Array = new Uint8Array(this.frequencyBinCount);\n      this._normalizeTimeDomainData(this.timeDomainData, uint8Array);\n      return uint8Array;\n    }\n\n    /**\r\n     * Helper function to normalize frequency data from dB (-100 to 0) to 0-255 range\r\n     * @param {Float32Array} sourceData - Raw frequency data (typically -100 to 0 dB)\r\n     * @param {Uint8Array} targetArray - Target array for normalized values\r\n     * @private\r\n     */\n  }, {\n    key: \"_normalizeFrequencyData\",\n    value: function _normalizeFrequencyData(sourceData, targetArray) {\n      for (var i = 0; i < this.frequencyBinCount; i++) {\n        // Frequency data is typically in -100 to 0 dB range\n        // Map to 0-255 range, where -100dB = 0 and 0dB = 255\n        var normalizedValue = (sourceData[i] + 100) / 100;\n        targetArray[i] = Math.floor(Math.max(0, Math.min(255, normalizedValue * 255)));\n      }\n    }\n\n    /**\r\n     * Helper function to normalize time domain data from -1,1 to 0-255 range\r\n     * @param {Float32Array} sourceData - Raw time domain data (-1 to 1)\r\n     * @param {Uint8Array} targetArray - Target array for normalized values\r\n     * @private\r\n     */\n  }, {\n    key: \"_normalizeTimeDomainData\",\n    value: function _normalizeTimeDomainData(sourceData, targetArray) {\n      for (var i = 0; i < this.frequencyBinCount; i++) {\n        // Time domain data is in -1 to 1 range\n        // Map -1.0 to 1.0 to 0-255 range\n        var normalizedValue = (sourceData[i] + 1) / 2;\n        targetArray[i] = Math.floor(Math.max(0, Math.min(255, normalizedValue * 255)));\n      }\n    }\n\n    /**\r\n     * Initializes mock data for testing\r\n     * Overrides base class method\r\n     */\n  }, {\n    key: \"initMockData\",\n    value: function initMockData() {\n      // Call the base class implementation\n      _superPropGet(GPUAudioProcessor, \"initMockData\", this, 3)([]);\n\n      // Update our GPU textures\n      this.updateTextureData();\n      if (this.debugMode) {\n        console.log('GPU-enhanced mock data initialized');\n      }\n    }\n  }]);\n}(_AudioProcessor_js__WEBPACK_IMPORTED_MODULE_0__.AudioProcessor);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/audio/GPUAudioProcessor.js\n");

/***/ }),

/***/ "./src/scripts/audio/InitializedState.js":
/*!***********************************************!*\
  !*** ./src/scripts/audio/InitializedState.js ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   InitializedState: () => (/* binding */ InitializedState)\n/* harmony export */ });\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, \"catch\": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }\nfunction _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); }); }; }\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\n// Remove the circular imports at the top\n// import { FileState } from \"./FileState.js\";\n// import { MicrophoneState } from \"./MicrophoneState.js\";\n// import { NetworkStreamState } from \"./NetworkStreamState.js\";\n\n/**\r\n * Base audio state that handles common functionality and state transitions.\r\n * All specific audio state implementations should extend this class.\r\n */\nvar InitializedState = /*#__PURE__*/function () {\n  function InitializedState(audioContext, analyser) {\n    _classCallCheck(this, InitializedState);\n    this.audioContext = audioContext;\n    this.analyser = analyser;\n    this.source = null;\n\n    // Create a gain node by default for all audio states\n    this.gainNode = this.audioContext.createGain();\n    // Default to full volume\n    this.gainNode.gain.value = 1.0;\n\n    // Connect analyzer to gain node by default\n    // Child classes should use this.gainNode in their setup\n    try {\n      this.analyser.connect(this.gainNode);\n      this.gainNode.connect(this.audioContext.destination);\n    } catch (e) {\n      console.error('Error setting up default gain node:', e);\n    }\n  }\n\n  /**\r\n   * Sets the volume for this audio state\r\n   * @param {number} volume - Volume level between 0 and 1\r\n   */\n  return _createClass(InitializedState, [{\n    key: \"setVolume\",\n    value: function setVolume(volume) {\n      if (!this.gainNode) {\n        this.gainNode = this.audioContext.createGain();\n        try {\n          // Reconnect if needed\n          this.analyser.connect(this.gainNode);\n          this.gainNode.connect(this.audioContext.destination);\n        } catch (e) {\n          console.error('Error setting up gain node in setVolume:', e);\n        }\n      }\n\n      // Use square root scaling for more natural volume control\n      // This gives more audible range at low volume settings, while still allowing for fine control\n      var scaledVolume = Math.sqrt(volume);\n\n      // Set the gain value - ensure 0 is actually 0, otherwise use scaled value\n      this.gainNode.gain.value = volume === 0 ? 0 : scaledVolume;\n      console.log('Base state volume set to:', volume, 'Scaled volume:', scaledVolume);\n    }\n\n    /**\r\n     * Initializes microphone input\r\n     * @returns {Promise<MicrophoneState>} Promise that resolves to new state\r\n     */\n  }, {\n    key: \"initMicrophone\",\n    value: (function () {\n      var _initMicrophone = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var stream, source, _yield$import, MicrophoneState;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return navigator.mediaDevices.getUserMedia({\n                audio: true\n              });\n            case 3:\n              stream = _context.sent;\n              source = this.audioContext.createMediaStreamSource(stream);\n              source.connect(this.analyser);\n\n              // Use dynamic import to avoid circular dependency\n              _context.next = 8;\n              return __webpack_require__.e(/*! import() */ \"src_scripts_audio_MicrophoneState_js\").then(__webpack_require__.bind(__webpack_require__, /*! ./MicrophoneState.js */ \"./src/scripts/audio/MicrophoneState.js\"));\n            case 8:\n              _yield$import = _context.sent;\n              MicrophoneState = _yield$import.MicrophoneState;\n              return _context.abrupt(\"return\", new MicrophoneState(this.audioContext, this.analyser, source, stream));\n            case 13:\n              _context.prev = 13;\n              _context.t0 = _context[\"catch\"](0);\n              console.error(\"Error accessing microphone:\", _context.t0);\n              return _context.abrupt(\"return\", this);\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this, [[0, 13]]);\n      }));\n      function initMicrophone() {\n        return _initMicrophone.apply(this, arguments);\n      }\n      return initMicrophone;\n    }()\n    /**\r\n     * Initializes audio from a file\r\n     * @param {File} file - The audio file to play\r\n     * @returns {Promise<FileState>} Promise that resolves to new state\r\n     */\n    )\n  }, {\n    key: \"initFile\",\n    value: (function () {\n      var _initFile = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(file) {\n        var arrayBuffer, audioBuffer, _yield$import2, FileState;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return file.arrayBuffer();\n            case 3:\n              arrayBuffer = _context2.sent;\n              _context2.next = 6;\n              return this.audioContext.decodeAudioData(arrayBuffer);\n            case 6:\n              audioBuffer = _context2.sent;\n              _context2.next = 9;\n              return __webpack_require__.e(/*! import() */ \"src_scripts_audio_FileState_js\").then(__webpack_require__.bind(__webpack_require__, /*! ./FileState.js */ \"./src/scripts/audio/FileState.js\"));\n            case 9:\n              _yield$import2 = _context2.sent;\n              FileState = _yield$import2.FileState;\n              return _context2.abrupt(\"return\", new FileState(this.audioContext, this.analyser, audioBuffer));\n            case 14:\n              _context2.prev = 14;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.error(\"Error loading audio file:\", _context2.t0);\n              return _context2.abrupt(\"return\", this);\n            case 18:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this, [[0, 14]]);\n      }));\n      function initFile(_x) {\n        return _initFile.apply(this, arguments);\n      }\n      return initFile;\n    }()\n    /**\r\n     * Initializes audio from a network stream\r\n     * @param {string} streamUrl - URL of the stream to play\r\n     * @returns {Promise<NetworkStreamState>} Promise that resolves to new state\r\n     */\n    )\n  }, {\n    key: \"initNetworkStream\",\n    value: (function () {\n      var _initNetworkStream = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(streamUrl) {\n        var _yield$import3, NetworkStreamState;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return __webpack_require__.e(/*! import() */ \"src_scripts_audio_NetworkStreamState_js\").then(__webpack_require__.bind(__webpack_require__, /*! ./NetworkStreamState.js */ \"./src/scripts/audio/NetworkStreamState.js\"));\n            case 3:\n              _yield$import3 = _context3.sent;\n              NetworkStreamState = _yield$import3.NetworkStreamState;\n              return _context3.abrupt(\"return\", new NetworkStreamState(this.audioContext, this.analyser, streamUrl));\n            case 8:\n              _context3.prev = 8;\n              _context3.t0 = _context3[\"catch\"](0);\n              console.error(\"Error initializing network stream:\", _context3.t0);\n              return _context3.abrupt(\"return\", this);\n            case 12:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this, [[0, 8]]);\n      }));\n      function initNetworkStream(_x2) {\n        return _initNetworkStream.apply(this, arguments);\n      }\n      return initNetworkStream;\n    }()\n    /**\r\n     * Creates mock audio data for testing\r\n     * @returns {InitializedState} This state with mock data\r\n     */\n    )\n  }, {\n    key: \"initMockData\",\n    value: function initMockData() {\n      // Clean up current source if it exists\n      this.stop();\n      this.source = this.audioContext.createBufferSource();\n      var buffer = this.audioContext.createBuffer(1, this.audioContext.sampleRate * 3, this.audioContext.sampleRate);\n      var data = buffer.getChannelData(0);\n\n      // Generate mock data (e.g., sine wave or random data)\n      for (var i = 0; i < data.length; i++) {\n        data[i] = Math.random() * 2 - 1; // Random data between -1 and 1\n      }\n      this.source.buffer = buffer;\n      this.source.loop = true;\n      this.source.connect(this.analyser);\n      this.source.start();\n      console.log(\"Mock data initialized\");\n      return this;\n    }\n\n    /**\r\n     * Stops and cleans up the current audio source\r\n     */\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      if (this.source) {\n        this.source.disconnect();\n        if (this.source.stop) {\n          this.source.stop(0);\n        }\n        this.source = null;\n        console.log(\"Audio source stopped\");\n      }\n    }\n\n    /**\r\n     * Gets frequency data from the analyzer\r\n     * @param {Uint8Array} dataArray - Array to store frequency data\r\n     */\n  }, {\n    key: \"getFrequencyData\",\n    value: function getFrequencyData(dataArray) {\n      this.analyser.getByteFrequencyData(dataArray);\n    }\n\n    /**\r\n     * Gets time domain data from the analyzer\r\n     * @param {Uint8Array} dataArray - Array to store time domain data\r\n     */\n  }, {\n    key: \"getTimeDomainData\",\n    value: function getTimeDomainData(dataArray) {\n      this.analyser.getByteTimeDomainData(dataArray);\n    }\n  }]);\n}();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/audio/InitializedState.js\n");

/***/ }),

/***/ "./src/scripts/audio/SpotifyProcessor.js":
/*!***********************************************!*\
  !*** ./src/scripts/audio/SpotifyProcessor.js ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SpotifyProcessor: () => (/* binding */ SpotifyProcessor)\n/* harmony export */ });\n/* harmony import */ var _AudioProcessor_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AudioProcessor.js */ \"./src/scripts/audio/AudioProcessor.js\");\n/* harmony import */ var _SpotifyAPIHandler_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../SpotifyAPIHandler.js */ \"./src/scripts/SpotifyAPIHandler.js\");\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, \"catch\": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }\nfunction _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); }); }; }\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _possibleConstructorReturn(t, e) { if (e && (\"object\" == _typeof(e) || \"function\" == typeof e)) return e; if (void 0 !== e) throw new TypeError(\"Derived constructors may only return object or undefined\"); return _assertThisInitialized(t); }\nfunction _assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); return e; }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _superPropGet(t, o, e, r) { var p = _get(_getPrototypeOf(1 & r ? t.prototype : t), o, e); return 2 & r && \"function\" == typeof p ? function (t) { return p.apply(e, t); } : p; }\nfunction _get() { return _get = \"undefined\" != typeof Reflect && Reflect.get ? Reflect.get.bind() : function (e, t, r) { var p = _superPropBase(e, t); if (p) { var n = Object.getOwnPropertyDescriptor(p, t); return n.get ? n.get.call(arguments.length < 3 ? e : r) : n.value; } }, _get.apply(null, arguments); }\nfunction _superPropBase(t, o) { for (; !{}.hasOwnProperty.call(t, o) && null !== (t = _getPrototypeOf(t));); return t; }\nfunction _getPrototypeOf(t) { return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, _getPrototypeOf(t); }\nfunction _inherits(t, e) { if (\"function\" != typeof e && null !== e) throw new TypeError(\"Super expression must either be null or a function\"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, \"prototype\", { writable: !1 }), e && _setPrototypeOf(t, e); }\nfunction _setPrototypeOf(t, e) { return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, _setPrototypeOf(t, e); }\n\n\n\n/**\r\n * Audio processor with Spotify integration\r\n * Handles audio processing aspects while delegating API interactions to SpotifyAPIHandler\r\n */\nvar SpotifyProcessor = /*#__PURE__*/function (_AudioProcessor) {\n  function SpotifyProcessor() {\n    var _this;\n    _classCallCheck(this, SpotifyProcessor);\n    // If AudioProcessor singleton already exists, return it\n    if (_AudioProcessor_js__WEBPACK_IMPORTED_MODULE_0__.AudioProcessor.instance) {\n      // Add spotify properties to existing instance\n      var instance = _AudioProcessor_js__WEBPACK_IMPORTED_MODULE_0__.AudioProcessor.instance;\n      _this.enhanceWithSpotify(instance);\n      return _possibleConstructorReturn(_this, instance);\n    }\n\n    // Otherwise create new instance with Spotify capabilities\n    _this = _callSuper(this, SpotifyProcessor); // Initialize AudioProcessor\n    _this.enhanceWithSpotify(_this);\n\n    // Store the Spotify-enhanced singleton\n    SpotifyProcessor.instance = _this;\n    return _this;\n  }\n\n  /**\r\n   * Add Spotify capabilities to an AudioProcessor instance\r\n   * @param {AudioProcessor} instance Instance to enhance\r\n   */\n  _inherits(SpotifyProcessor, _AudioProcessor);\n  return _createClass(SpotifyProcessor, [{\n    key: \"enhanceWithSpotify\",\n    value: function enhanceWithSpotify(instance) {\n      // Create the Spotify API handler\n      instance.spotifyAPI = new _SpotifyAPIHandler_js__WEBPACK_IMPORTED_MODULE_1__.SpotifyAPIHandler();\n\n      // Set up event listener for playback updates\n      instance.spotifyAPI.onPlaybackUpdate(function (track, status) {\n        instance.updateNowPlaying(track, status);\n      });\n\n      // Flag to track Spotify integration\n      instance.hasSpotifyCapabilities = true;\n    }\n\n    /**\r\n     * Get the singleton instance\r\n     * @returns {SpotifyProcessor} The singleton instance\r\n     */\n  }, {\n    key: \"authorize\",\n    value:\n    /**\r\n     * Start the Spotify authorization flow\r\n     */\n    function authorize() {\n      this.spotifyAPI.authorize();\n    }\n\n    /**\r\n     * Check if we have a valid token\r\n     * @returns {boolean} Whether we're authorized\r\n     */\n  }, {\n    key: \"checkAuth\",\n    value: function checkAuth() {\n      return this.spotifyAPI.isAuthorized;\n    }\n\n    /**\r\n     * Connect to current Spotify playback\r\n     */\n  }, {\n    key: \"connectToSpotify\",\n    value: (function () {\n      var _connectToSpotify = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var hasDevice;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              if (this.spotifyAPI.isAuthorized) {\n                _context.next = 3;\n                break;\n              }\n              console.error('Not authorized with Spotify');\n              return _context.abrupt(\"return\");\n            case 3:\n              _context.prev = 3;\n              _context.next = 6;\n              return this.spotifyAPI.hasActiveDevice();\n            case 6:\n              hasDevice = _context.sent;\n              if (hasDevice) {\n                _context.next = 10;\n                break;\n              }\n              alert('No active Spotify device found. Start playing in your Spotify app first.');\n              return _context.abrupt(\"return\");\n            case 10:\n              // Set our state to active\n              if (!this.isActive) {\n                this.isActive = true;\n                this.audioContext.resume();\n\n                // Start polling for current track info\n                this.spotifyAPI.startPlaybackMonitoring();\n                console.log('Connected to Spotify playback');\n              }\n              _context.next = 16;\n              break;\n            case 13:\n              _context.prev = 13;\n              _context.t0 = _context[\"catch\"](3);\n              console.error('Error connecting to Spotify:', _context.t0);\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this, [[3, 13]]);\n      }));\n      function connectToSpotify() {\n        return _connectToSpotify.apply(this, arguments);\n      }\n      return connectToSpotify;\n    }()\n    /**\r\n     * Override stop to handle Spotify cleanup\r\n     */\n    )\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      // Call the parent class stop method\n      _superPropGet(SpotifyProcessor, \"stop\", this, 3)([]);\n\n      // Add Spotify-specific cleanup\n      if (this.spotifyAPI) {\n        this.spotifyAPI.stopPlaybackMonitoring();\n      }\n      console.log('Spotify processor stopped');\n    }\n\n    /**\r\n     * Update the UI with current playback info\r\n     * @param {Object|null} track Track information\r\n     * @param {string} status Status message\r\n     */\n  }, {\n    key: \"updateNowPlaying\",\n    value: function updateNowPlaying(track, status) {\n      var trackNameElement = document.getElementById('spotify-track-name');\n      var trackArtistElement = document.getElementById('spotify-track-artist');\n      var trackAlbumArtElement = document.getElementById('spotify-album-art');\n      var trackStatusElement = document.getElementById('spotify-status');\n      var nowPlayingElement = document.getElementById('now-playing');\n      if (trackNameElement) {\n        trackNameElement.textContent = track ? track.name : 'No track';\n      }\n      if (trackArtistElement) {\n        trackArtistElement.textContent = track ? track.artist : '';\n      }\n      if (trackAlbumArtElement) {\n        if (track && track.albumArt) {\n          trackAlbumArtElement.src = track.albumArt;\n          trackAlbumArtElement.style.display = 'block';\n        } else {\n          trackAlbumArtElement.style.display = 'none';\n        }\n      }\n      if (trackStatusElement) {\n        trackStatusElement.textContent = status;\n      }\n\n      // Also update the main \"Now Playing\" display if system audio is not active\n      var systemAudioOption = document.getElementById('system-audio-option');\n      if (nowPlayingElement && track && (!systemAudioOption || !systemAudioOption.checked)) {\n        nowPlayingElement.textContent = \"Spotify: \".concat(track.name, \" - \").concat(track.artist);\n      }\n    }\n\n    /**\r\n     * Overrides the play method from AudioProcessor\r\n     */\n  }, {\n    key: \"play\",\n    value: (function () {\n      var _play = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _superPropGet(SpotifyProcessor, \"play\", this, 3)([]);\n            case 2:\n              if (!(this.spotifyAPI && this.spotifyAPI.isAuthorized && this.spotifyAPI.currentTrack && !this.spotifyAPI.currentTrack.isPlaying)) {\n                _context2.next = 5;\n                break;\n              }\n              _context2.next = 5;\n              return this.spotifyAPI.play();\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function play() {\n        return _play.apply(this, arguments);\n      }\n      return play;\n    }()\n    /**\r\n     * Overrides the pause method from AudioProcessor\r\n     */\n    )\n  }, {\n    key: \"pause\",\n    value: (function () {\n      var _pause = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _superPropGet(SpotifyProcessor, \"pause\", this, 3)([]);\n            case 2:\n              if (!(this.spotifyAPI && this.spotifyAPI.isAuthorized && this.spotifyAPI.currentTrack && this.spotifyAPI.currentTrack.isPlaying)) {\n                _context3.next = 5;\n                break;\n              }\n              _context3.next = 5;\n              return this.spotifyAPI.pause();\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this);\n      }));\n      function pause() {\n        return _pause.apply(this, arguments);\n      }\n      return pause;\n    }()\n    /**\r\n     * Play/Pause the current track (Toggle)\r\n     */\n    )\n  }, {\n    key: \"togglePlayback\",\n    value: (function () {\n      var _togglePlayback = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var newIsPlaying;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              if (!(!this.spotifyAPI || !this.spotifyAPI.isAuthorized)) {\n                _context4.next = 2;\n                break;\n              }\n              return _context4.abrupt(\"return\");\n            case 2:\n              _context4.next = 4;\n              return this.spotifyAPI.togglePlayback();\n            case 4:\n              newIsPlaying = _context4.sent;\n              if (!newIsPlaying) {\n                _context4.next = 10;\n                break;\n              }\n              _context4.next = 8;\n              return this.play();\n            case 8:\n              _context4.next = 12;\n              break;\n            case 10:\n              _context4.next = 12;\n              return this.pause();\n            case 12:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, this);\n      }));\n      function togglePlayback() {\n        return _togglePlayback.apply(this, arguments);\n      }\n      return togglePlayback;\n    }()\n    /**\r\n     * Skip to next track\r\n     */\n    )\n  }, {\n    key: \"nextTrack\",\n    value: (function () {\n      var _nextTrack = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              if (!this.spotifyAPI) {\n                _context5.next = 3;\n                break;\n              }\n              _context5.next = 3;\n              return this.spotifyAPI.nextTrack();\n            case 3:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5, this);\n      }));\n      function nextTrack() {\n        return _nextTrack.apply(this, arguments);\n      }\n      return nextTrack;\n    }()\n    /**\r\n     * Skip to previous track\r\n     */\n    )\n  }, {\n    key: \"previousTrack\",\n    value: (function () {\n      var _previousTrack = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              if (!this.spotifyAPI) {\n                _context6.next = 3;\n                break;\n              }\n              _context6.next = 3;\n              return this.spotifyAPI.previousTrack();\n            case 3:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6, this);\n      }));\n      function previousTrack() {\n        return _previousTrack.apply(this, arguments);\n      }\n      return previousTrack;\n    }()\n    /**\r\n     * Search for tracks\r\n     * @param {string} query Search term\r\n     * @returns {Promise<Object>} Search results\r\n     */\n    )\n  }, {\n    key: \"searchTracks\",\n    value: (function () {\n      var _searchTracks = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee7(query) {\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) switch (_context7.prev = _context7.next) {\n            case 0:\n              if (!this.spotifyAPI) {\n                _context7.next = 4;\n                break;\n              }\n              _context7.next = 3;\n              return this.spotifyAPI.searchTracks(query);\n            case 3:\n              return _context7.abrupt(\"return\", _context7.sent);\n            case 4:\n              return _context7.abrupt(\"return\", {\n                tracks: {\n                  items: []\n                }\n              });\n            case 5:\n            case \"end\":\n              return _context7.stop();\n          }\n        }, _callee7, this);\n      }));\n      function searchTracks(_x) {\n        return _searchTracks.apply(this, arguments);\n      }\n      return searchTracks;\n    }()\n    /**\r\n     * Play a specific track by URI\r\n     * @param {string} uri Track URI\r\n     */\n    )\n  }, {\n    key: \"playTrack\",\n    value: (function () {\n      var _playTrack = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee8(uri) {\n        return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n          while (1) switch (_context8.prev = _context8.next) {\n            case 0:\n              if (!this.spotifyAPI) {\n                _context8.next = 3;\n                break;\n              }\n              _context8.next = 3;\n              return this.spotifyAPI.playTrack(uri);\n            case 3:\n            case \"end\":\n              return _context8.stop();\n          }\n        }, _callee8, this);\n      }));\n      function playTrack(_x2) {\n        return _playTrack.apply(this, arguments);\n      }\n      return playTrack;\n    }()\n    /**\r\n     * Clean up when done\r\n     */\n    )\n  }, {\n    key: \"cleanup\",\n    value: function cleanup() {\n      if (this.spotifyAPI) {\n        this.spotifyAPI.cleanup();\n      }\n      this.stop();\n    }\n\n    /**\r\n     * Get frequency data for API\r\n     * @returns {Uint8Array} Frequency data array\r\n     */\n  }, {\n    key: \"getFrequencyDataForAPI\",\n    value: function getFrequencyDataForAPI() {\n      // If we're connected to Spotify and have a current track\n      if (this.spotifyAPI && this.spotifyAPI.isAuthorized && this.spotifyAPI.currentTrack && this.spotifyAPI.currentTrack.isPlaying) {\n        // Generate placeholder data based on the track info\n        this.generateMockAudioData();\n      }\n\n      // Call the base class method to get the data\n      return _superPropGet(SpotifyProcessor, \"getFrequencyDataForAPI\", this, 3)([]);\n    }\n\n    /**\r\n     * Method to create interesting visualization data\r\n     */\n  }, {\n    key: \"generateMockAudioData\",\n    value: function generateMockAudioData() {\n      // Create a pseudo-random but consistent pattern for the currently playing track\n      if (!this.spotifyAPI || !this.spotifyAPI.currentTrack) return;\n      var trackId = this.spotifyAPI.currentTrack.name + this.spotifyAPI.currentTrack.artist;\n      var seed = this.spotifyAPI.hashString(trackId);\n\n      // Generate frequency data that looks somewhat musical\n      for (var i = 0; i < this.dataArray.length; i++) {\n        // Create a value based on index, seed, and some oscillations\n        var time = Date.now() / 1000;\n        var value = Math.abs(Math.sin(i * 0.01 + seed * 0.1) * 0.5 + Math.sin(i * 0.05 + time) * 0.3 + Math.sin(time * 2 + i * 0.01) * 0.2);\n\n        // Scale to 0-255 range\n        this.dataArray[i] = Math.floor(value * 255);\n      }\n    }\n  }], [{\n    key: \"getInstance\",\n    value: function getInstance() {\n      if (!SpotifyProcessor.instance) {\n        SpotifyProcessor.instance = new SpotifyProcessor();\n      }\n      return SpotifyProcessor.instance;\n    }\n  }]);\n}(_AudioProcessor_js__WEBPACK_IMPORTED_MODULE_0__.AudioProcessor);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/audio/SpotifyProcessor.js\n");

/***/ }),

/***/ "./src/scripts/external/spotify-sdk-loader.js":
/*!****************************************************!*\
  !*** ./src/scripts/external/spotify-sdk-loader.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createSpotifyPlayer: () => (/* binding */ createSpotifyPlayer),\n/* harmony export */   loadSpotifySDK: () => (/* binding */ loadSpotifySDK)\n/* harmony export */ });\n/**\r\n * Spotify SDK Loader\r\n * This module ensures the Spotify Web Playback SDK is properly loaded\r\n * and the callback function is correctly exposed in a webpack environment\r\n */\n\n/**\r\n * Load the Spotify Web Playback SDK\r\n * @returns {Promise} Promise that resolves when the SDK is ready\r\n */\nfunction loadSpotifySDK() {\n  return new Promise(function (resolve, reject) {\n    // Check if SDK is already loaded\n    if (window.Spotify) {\n      console.log('Spotify SDK already loaded');\n      resolve(window.Spotify);\n      return;\n    }\n\n    // Define the callback function that Spotify SDK will call when ready\n    // Explicitly attach to window to ensure it's globally accessible in webpack\n    window.onSpotifyWebPlaybackSDKReady = function () {\n      console.log('Spotify Web Playback SDK is ready');\n      if (window.Spotify) {\n        resolve(window.Spotify);\n      } else {\n        reject(new Error('Spotify SDK loaded but Spotify object not found'));\n      }\n    };\n\n    // Load the SDK script\n    var script = document.createElement('script');\n    script.src = 'https://sdk.scdn.co/spotify-player.js';\n    script.async = true;\n\n    // Handle load errors\n    script.onerror = function () {\n      reject(new Error('Failed to load Spotify SDK'));\n    };\n\n    // Append the script to the document\n    document.body.appendChild(script);\n  });\n}\n\n/**\r\n * Initialize a Spotify Player instance\r\n * @param {string} token - Spotify access token\r\n * @returns {Object} Spotify Player instance\r\n */\nfunction createSpotifyPlayer(token) {\n  if (!window.Spotify) {\n    throw new Error('Spotify SDK not loaded');\n  }\n  return new window.Spotify.Player({\n    name: 'Reverb XR Audio Visualizer',\n    getOAuthToken: function getOAuthToken(cb) {\n      return cb(token);\n    }\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9leHRlcm5hbC9zcG90aWZ5LXNkay1sb2FkZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sU0FBU0EsY0FBY0EsQ0FBQSxFQUFHO0VBQy9CLE9BQU8sSUFBSUMsT0FBTyxDQUFDLFVBQUNDLE9BQU8sRUFBRUMsTUFBTSxFQUFLO0lBQ3RDO0lBQ0EsSUFBSUMsTUFBTSxDQUFDQyxPQUFPLEVBQUU7TUFDbEJDLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLDRCQUE0QixDQUFDO01BQ3pDTCxPQUFPLENBQUNFLE1BQU0sQ0FBQ0MsT0FBTyxDQUFDO01BQ3ZCO0lBQ0Y7O0lBRUE7SUFDQTtJQUNBRCxNQUFNLENBQUNJLDRCQUE0QixHQUFHLFlBQU07TUFDMUNGLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLG1DQUFtQyxDQUFDO01BQ2hELElBQUlILE1BQU0sQ0FBQ0MsT0FBTyxFQUFFO1FBQ2xCSCxPQUFPLENBQUNFLE1BQU0sQ0FBQ0MsT0FBTyxDQUFDO01BQ3pCLENBQUMsTUFBTTtRQUNMRixNQUFNLENBQUMsSUFBSU0sS0FBSyxDQUFDLGlEQUFpRCxDQUFDLENBQUM7TUFDdEU7SUFDRixDQUFDOztJQUVEO0lBQ0EsSUFBTUMsTUFBTSxHQUFHQyxRQUFRLENBQUNDLGFBQWEsQ0FBQyxRQUFRLENBQUM7SUFDL0NGLE1BQU0sQ0FBQ0csR0FBRyxHQUFHLHVDQUF1QztJQUNwREgsTUFBTSxDQUFDSSxLQUFLLEdBQUcsSUFBSTs7SUFFbkI7SUFDQUosTUFBTSxDQUFDSyxPQUFPLEdBQUcsWUFBTTtNQUNyQlosTUFBTSxDQUFDLElBQUlNLEtBQUssQ0FBQyw0QkFBNEIsQ0FBQyxDQUFDO0lBQ2pELENBQUM7O0lBRUQ7SUFDQUUsUUFBUSxDQUFDSyxJQUFJLENBQUNDLFdBQVcsQ0FBQ1AsTUFBTSxDQUFDO0VBQ25DLENBQUMsQ0FBQztBQUNKOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyxTQUFTUSxtQkFBbUJBLENBQUNDLEtBQUssRUFBRTtFQUN6QyxJQUFJLENBQUNmLE1BQU0sQ0FBQ0MsT0FBTyxFQUFFO0lBQ25CLE1BQU0sSUFBSUksS0FBSyxDQUFDLHdCQUF3QixDQUFDO0VBQzNDO0VBRUEsT0FBTyxJQUFJTCxNQUFNLENBQUNDLE9BQU8sQ0FBQ2UsTUFBTSxDQUFDO0lBQy9CQyxJQUFJLEVBQUUsNEJBQTRCO0lBQ2xDQyxhQUFhLEVBQUUsU0FBZkEsYUFBYUEsQ0FBRUMsRUFBRTtNQUFBLE9BQUlBLEVBQUUsQ0FBQ0osS0FBSyxDQUFDO0lBQUE7RUFDaEMsQ0FBQyxDQUFDO0FBQ0oiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZXZlcmIteHIvLi9zcmMvc2NyaXB0cy9leHRlcm5hbC9zcG90aWZ5LXNkay1sb2FkZXIuanM/OTIyMCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogU3BvdGlmeSBTREsgTG9hZGVyXHJcbiAqIFRoaXMgbW9kdWxlIGVuc3VyZXMgdGhlIFNwb3RpZnkgV2ViIFBsYXliYWNrIFNESyBpcyBwcm9wZXJseSBsb2FkZWRcclxuICogYW5kIHRoZSBjYWxsYmFjayBmdW5jdGlvbiBpcyBjb3JyZWN0bHkgZXhwb3NlZCBpbiBhIHdlYnBhY2sgZW52aXJvbm1lbnRcclxuICovXHJcblxyXG4vKipcclxuICogTG9hZCB0aGUgU3BvdGlmeSBXZWIgUGxheWJhY2sgU0RLXHJcbiAqIEByZXR1cm5zIHtQcm9taXNlfSBQcm9taXNlIHRoYXQgcmVzb2x2ZXMgd2hlbiB0aGUgU0RLIGlzIHJlYWR5XHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gbG9hZFNwb3RpZnlTREsoKSB7XHJcbiAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcclxuICAgIC8vIENoZWNrIGlmIFNESyBpcyBhbHJlYWR5IGxvYWRlZFxyXG4gICAgaWYgKHdpbmRvdy5TcG90aWZ5KSB7XHJcbiAgICAgIGNvbnNvbGUubG9nKCdTcG90aWZ5IFNESyBhbHJlYWR5IGxvYWRlZCcpO1xyXG4gICAgICByZXNvbHZlKHdpbmRvdy5TcG90aWZ5KTtcclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIERlZmluZSB0aGUgY2FsbGJhY2sgZnVuY3Rpb24gdGhhdCBTcG90aWZ5IFNESyB3aWxsIGNhbGwgd2hlbiByZWFkeVxyXG4gICAgLy8gRXhwbGljaXRseSBhdHRhY2ggdG8gd2luZG93IHRvIGVuc3VyZSBpdCdzIGdsb2JhbGx5IGFjY2Vzc2libGUgaW4gd2VicGFja1xyXG4gICAgd2luZG93Lm9uU3BvdGlmeVdlYlBsYXliYWNrU0RLUmVhZHkgPSAoKSA9PiB7XHJcbiAgICAgIGNvbnNvbGUubG9nKCdTcG90aWZ5IFdlYiBQbGF5YmFjayBTREsgaXMgcmVhZHknKTtcclxuICAgICAgaWYgKHdpbmRvdy5TcG90aWZ5KSB7XHJcbiAgICAgICAgcmVzb2x2ZSh3aW5kb3cuU3BvdGlmeSk7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgcmVqZWN0KG5ldyBFcnJvcignU3BvdGlmeSBTREsgbG9hZGVkIGJ1dCBTcG90aWZ5IG9iamVjdCBub3QgZm91bmQnKSk7XHJcbiAgICAgIH1cclxuICAgIH07XHJcblxyXG4gICAgLy8gTG9hZCB0aGUgU0RLIHNjcmlwdFxyXG4gICAgY29uc3Qgc2NyaXB0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc2NyaXB0Jyk7XHJcbiAgICBzY3JpcHQuc3JjID0gJ2h0dHBzOi8vc2RrLnNjZG4uY28vc3BvdGlmeS1wbGF5ZXIuanMnO1xyXG4gICAgc2NyaXB0LmFzeW5jID0gdHJ1ZTtcclxuICAgIFxyXG4gICAgLy8gSGFuZGxlIGxvYWQgZXJyb3JzXHJcbiAgICBzY3JpcHQub25lcnJvciA9ICgpID0+IHtcclxuICAgICAgcmVqZWN0KG5ldyBFcnJvcignRmFpbGVkIHRvIGxvYWQgU3BvdGlmeSBTREsnKSk7XHJcbiAgICB9O1xyXG5cclxuICAgIC8vIEFwcGVuZCB0aGUgc2NyaXB0IHRvIHRoZSBkb2N1bWVudFxyXG4gICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChzY3JpcHQpO1xyXG4gIH0pO1xyXG59XHJcblxyXG4vKipcclxuICogSW5pdGlhbGl6ZSBhIFNwb3RpZnkgUGxheWVyIGluc3RhbmNlXHJcbiAqIEBwYXJhbSB7c3RyaW5nfSB0b2tlbiAtIFNwb3RpZnkgYWNjZXNzIHRva2VuXHJcbiAqIEByZXR1cm5zIHtPYmplY3R9IFNwb3RpZnkgUGxheWVyIGluc3RhbmNlXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlU3BvdGlmeVBsYXllcih0b2tlbikge1xyXG4gIGlmICghd2luZG93LlNwb3RpZnkpIHtcclxuICAgIHRocm93IG5ldyBFcnJvcignU3BvdGlmeSBTREsgbm90IGxvYWRlZCcpO1xyXG4gIH1cclxuICBcclxuICByZXR1cm4gbmV3IHdpbmRvdy5TcG90aWZ5LlBsYXllcih7XHJcbiAgICBuYW1lOiAnUmV2ZXJiIFhSIEF1ZGlvIFZpc3VhbGl6ZXInLFxyXG4gICAgZ2V0T0F1dGhUb2tlbjogY2IgPT4gY2IodG9rZW4pXHJcbiAgfSk7XHJcbn0gIl0sIm5hbWVzIjpbImxvYWRTcG90aWZ5U0RLIiwiUHJvbWlzZSIsInJlc29sdmUiLCJyZWplY3QiLCJ3aW5kb3ciLCJTcG90aWZ5IiwiY29uc29sZSIsImxvZyIsIm9uU3BvdGlmeVdlYlBsYXliYWNrU0RLUmVhZHkiLCJFcnJvciIsInNjcmlwdCIsImRvY3VtZW50IiwiY3JlYXRlRWxlbWVudCIsInNyYyIsImFzeW5jIiwib25lcnJvciIsImJvZHkiLCJhcHBlbmRDaGlsZCIsImNyZWF0ZVNwb3RpZnlQbGF5ZXIiLCJ0b2tlbiIsIlBsYXllciIsIm5hbWUiLCJnZXRPQXV0aFRva2VuIiwiY2IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/scripts/external/spotify-sdk-loader.js\n");

/***/ }),

/***/ "./src/scripts/utils/pathResolver.js":
/*!*******************************************!*\
  !*** ./src/scripts/utils/pathResolver.js ***!
  \*******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   isDevelopment: () => (/* binding */ isDevelopment),\n/* harmony export */   resolveAssetPath: () => (/* binding */ resolveAssetPath),\n/* harmony export */   resolvePath: () => (/* binding */ resolvePath)\n/* harmony export */ });\n/**\r\n * Path resolver utility for managing URLs in development and production\r\n * Helps with resolving correct paths for assets and pages\r\n */\n\n/**\r\n * Resolves a relative path to handle both development and production environments\r\n * In development, might need to handle paths differently than in production\r\n * \r\n * @param {string} path - The relative path to resolve\r\n * @returns {string} - The resolved path\r\n */\nfunction resolvePath(path) {\n  // Remove leading slash if it exists\n  if (path.startsWith('/')) {\n    path = path.substring(1);\n  }\n\n  // In production, paths will be relative to the root\n  // In development with webpack-dev-server, paths are also relative to root\n  // This function could be expanded to handle CDN paths or other scenarios\n\n  return path;\n}\n\n/**\r\n * Resolves an asset path (images, sounds, etc)\r\n * \r\n * @param {string} path - The relative path to the asset\r\n * @returns {string} - The resolved asset path\r\n */\nfunction resolveAssetPath(path) {\n  // For assets, we may want different handling\n  return 'assets/' + path.replace(/^assets\\//, '');\n}\n\n/**\r\n * Detects if the app is running in development or production mode\r\n * \r\n * @returns {boolean} - True if running in development\r\n */\nfunction isDevelopment() {\n  // Check if webpack's development flag is set\n  // For webpack 5, we need to check if the process object exists first\n  try {\n    // This will be replaced by webpack's DefinePlugin\n    return typeof process !== 'undefined' && {\"WEBPACK_BUNDLE\":true,\"WEBPACK_BUILD\":true,\"NODE_ENV\":\"development\"} && \"development\" !== 'production';\n  } catch (e) {\n    // If process is not defined (or some other error), assume development\n    return true;\n  }\n}\n\n// Export a default object with all utilities\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  resolvePath: resolvePath,\n  resolveAssetPath: resolveAssetPath,\n  isDevelopment: isDevelopment\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy91dGlscy9wYXRoUmVzb2x2ZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sU0FBU0EsV0FBV0EsQ0FBQ0MsSUFBSSxFQUFFO0VBQ2hDO0VBQ0EsSUFBSUEsSUFBSSxDQUFDQyxVQUFVLENBQUMsR0FBRyxDQUFDLEVBQUU7SUFDeEJELElBQUksR0FBR0EsSUFBSSxDQUFDRSxTQUFTLENBQUMsQ0FBQyxDQUFDO0VBQzFCOztFQUVBO0VBQ0E7RUFDQTs7RUFFQSxPQUFPRixJQUFJO0FBQ2I7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sU0FBU0csZ0JBQWdCQSxDQUFDSCxJQUFJLEVBQUU7RUFDckM7RUFDQSxPQUFPLFNBQVMsR0FBR0EsSUFBSSxDQUFDSSxPQUFPLENBQUMsV0FBVyxFQUFFLEVBQUUsQ0FBQztBQUNsRDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sU0FBU0MsYUFBYUEsQ0FBQSxFQUFHO0VBQzlCO0VBQ0E7RUFDQSxJQUFJO0lBQ0Y7SUFDQSxPQUFPLE9BQU9DLE9BQU8sS0FBSyxXQUFXLElBQUlBLHFFQUFXLElBQUlBLGFBQW9CLEtBQUssWUFBWTtFQUMvRixDQUFDLENBQUMsT0FBT0csQ0FBQyxFQUFFO0lBQ1Y7SUFDQSxPQUFPLElBQUk7RUFDYjtBQUNGOztBQUVBO0FBQ0EsaUVBQWU7RUFDYlYsV0FBVyxFQUFYQSxXQUFXO0VBQ1hJLGdCQUFnQixFQUFoQkEsZ0JBQWdCO0VBQ2hCRSxhQUFhLEVBQWJBO0FBQ0YsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL3JldmVyYi14ci8uL3NyYy9zY3JpcHRzL3V0aWxzL3BhdGhSZXNvbHZlci5qcz9kNGNlIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBQYXRoIHJlc29sdmVyIHV0aWxpdHkgZm9yIG1hbmFnaW5nIFVSTHMgaW4gZGV2ZWxvcG1lbnQgYW5kIHByb2R1Y3Rpb25cclxuICogSGVscHMgd2l0aCByZXNvbHZpbmcgY29ycmVjdCBwYXRocyBmb3IgYXNzZXRzIGFuZCBwYWdlc1xyXG4gKi9cclxuXHJcbi8qKlxyXG4gKiBSZXNvbHZlcyBhIHJlbGF0aXZlIHBhdGggdG8gaGFuZGxlIGJvdGggZGV2ZWxvcG1lbnQgYW5kIHByb2R1Y3Rpb24gZW52aXJvbm1lbnRzXHJcbiAqIEluIGRldmVsb3BtZW50LCBtaWdodCBuZWVkIHRvIGhhbmRsZSBwYXRocyBkaWZmZXJlbnRseSB0aGFuIGluIHByb2R1Y3Rpb25cclxuICogXHJcbiAqIEBwYXJhbSB7c3RyaW5nfSBwYXRoIC0gVGhlIHJlbGF0aXZlIHBhdGggdG8gcmVzb2x2ZVxyXG4gKiBAcmV0dXJucyB7c3RyaW5nfSAtIFRoZSByZXNvbHZlZCBwYXRoXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gcmVzb2x2ZVBhdGgocGF0aCkge1xyXG4gIC8vIFJlbW92ZSBsZWFkaW5nIHNsYXNoIGlmIGl0IGV4aXN0c1xyXG4gIGlmIChwYXRoLnN0YXJ0c1dpdGgoJy8nKSkge1xyXG4gICAgcGF0aCA9IHBhdGguc3Vic3RyaW5nKDEpO1xyXG4gIH1cclxuXHJcbiAgLy8gSW4gcHJvZHVjdGlvbiwgcGF0aHMgd2lsbCBiZSByZWxhdGl2ZSB0byB0aGUgcm9vdFxyXG4gIC8vIEluIGRldmVsb3BtZW50IHdpdGggd2VicGFjay1kZXYtc2VydmVyLCBwYXRocyBhcmUgYWxzbyByZWxhdGl2ZSB0byByb290XHJcbiAgLy8gVGhpcyBmdW5jdGlvbiBjb3VsZCBiZSBleHBhbmRlZCB0byBoYW5kbGUgQ0ROIHBhdGhzIG9yIG90aGVyIHNjZW5hcmlvc1xyXG4gIFxyXG4gIHJldHVybiBwYXRoO1xyXG59XHJcblxyXG4vKipcclxuICogUmVzb2x2ZXMgYW4gYXNzZXQgcGF0aCAoaW1hZ2VzLCBzb3VuZHMsIGV0YylcclxuICogXHJcbiAqIEBwYXJhbSB7c3RyaW5nfSBwYXRoIC0gVGhlIHJlbGF0aXZlIHBhdGggdG8gdGhlIGFzc2V0XHJcbiAqIEByZXR1cm5zIHtzdHJpbmd9IC0gVGhlIHJlc29sdmVkIGFzc2V0IHBhdGhcclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiByZXNvbHZlQXNzZXRQYXRoKHBhdGgpIHtcclxuICAvLyBGb3IgYXNzZXRzLCB3ZSBtYXkgd2FudCBkaWZmZXJlbnQgaGFuZGxpbmdcclxuICByZXR1cm4gJ2Fzc2V0cy8nICsgcGF0aC5yZXBsYWNlKC9eYXNzZXRzXFwvLywgJycpO1xyXG59XHJcblxyXG4vKipcclxuICogRGV0ZWN0cyBpZiB0aGUgYXBwIGlzIHJ1bm5pbmcgaW4gZGV2ZWxvcG1lbnQgb3IgcHJvZHVjdGlvbiBtb2RlXHJcbiAqIFxyXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gLSBUcnVlIGlmIHJ1bm5pbmcgaW4gZGV2ZWxvcG1lbnRcclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiBpc0RldmVsb3BtZW50KCkge1xyXG4gIC8vIENoZWNrIGlmIHdlYnBhY2sncyBkZXZlbG9wbWVudCBmbGFnIGlzIHNldFxyXG4gIC8vIEZvciB3ZWJwYWNrIDUsIHdlIG5lZWQgdG8gY2hlY2sgaWYgdGhlIHByb2Nlc3Mgb2JqZWN0IGV4aXN0cyBmaXJzdFxyXG4gIHRyeSB7XHJcbiAgICAvLyBUaGlzIHdpbGwgYmUgcmVwbGFjZWQgYnkgd2VicGFjaydzIERlZmluZVBsdWdpblxyXG4gICAgcmV0dXJuIHR5cGVvZiBwcm9jZXNzICE9PSAndW5kZWZpbmVkJyAmJiBwcm9jZXNzLmVudiAmJiBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nO1xyXG4gIH0gY2F0Y2ggKGUpIHtcclxuICAgIC8vIElmIHByb2Nlc3MgaXMgbm90IGRlZmluZWQgKG9yIHNvbWUgb3RoZXIgZXJyb3IpLCBhc3N1bWUgZGV2ZWxvcG1lbnRcclxuICAgIHJldHVybiB0cnVlO1xyXG4gIH1cclxufVxyXG5cclxuLy8gRXhwb3J0IGEgZGVmYXVsdCBvYmplY3Qgd2l0aCBhbGwgdXRpbGl0aWVzXHJcbmV4cG9ydCBkZWZhdWx0IHtcclxuICByZXNvbHZlUGF0aCxcclxuICByZXNvbHZlQXNzZXRQYXRoLFxyXG4gIGlzRGV2ZWxvcG1lbnRcclxufTsgIl0sIm5hbWVzIjpbInJlc29sdmVQYXRoIiwicGF0aCIsInN0YXJ0c1dpdGgiLCJzdWJzdHJpbmciLCJyZXNvbHZlQXNzZXRQYXRoIiwicmVwbGFjZSIsImlzRGV2ZWxvcG1lbnQiLCJwcm9jZXNzIiwiZW52IiwiTk9ERV9FTlYiLCJlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/scripts/utils/pathResolver.js\n");

/***/ }),

/***/ "./src/styles/main.css":
/*!*****************************!*\
  !*** ./src/styles/main.css ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !../../node_modules/style-loader/dist/runtime/styleDomAPI.js */ \"./node_modules/style-loader/dist/runtime/styleDomAPI.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../../node_modules/style-loader/dist/runtime/insertBySelector.js */ \"./node_modules/style-loader/dist/runtime/insertBySelector.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js */ \"./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! !../../node_modules/style-loader/dist/runtime/insertStyleElement.js */ \"./node_modules/style-loader/dist/runtime/insertStyleElement.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! !../../node_modules/style-loader/dist/runtime/styleTagTransform.js */ \"./node_modules/style-loader/dist/runtime/styleTagTransform.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _node_modules_css_loader_dist_cjs_js_main_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! !!../../node_modules/css-loader/dist/cjs.js!./main.css */ \"./node_modules/css-loader/dist/cjs.js!./src/styles/main.css\");\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = (_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default());\noptions.setAttributes = (_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default());\n\n      options.insert = _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null, \"head\");\n    \noptions.domAPI = (_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default());\noptions.insertStyleElement = (_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default());\n\nvar update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_main_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"], options);\n\n\n\n\n       /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_css_loader_dist_cjs_js_main_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"] && _node_modules_css_loader_dist_cjs_js_main_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals ? _node_modules_css_loader_dist_cjs_js_main_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals : undefined);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc3R5bGVzL21haW4uY3NzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUNBLE1BQWtHO0FBQ2xHLE1BQXdGO0FBQ3hGLE1BQStGO0FBQy9GLE1BQWtIO0FBQ2xILE1BQTJHO0FBQzNHLE1BQTJHO0FBQzNHLE1BQXFHO0FBQ3JHO0FBQ0E7O0FBRUE7O0FBRUEsNEJBQTRCLHFHQUFtQjtBQUMvQyx3QkFBd0Isa0hBQWE7O0FBRXJDLHVCQUF1Qix1R0FBYTtBQUNwQztBQUNBLGlCQUFpQiwrRkFBTTtBQUN2Qiw2QkFBNkIsc0dBQWtCOztBQUUvQyxhQUFhLDBHQUFHLENBQUMscUZBQU87Ozs7QUFJK0M7QUFDdkUsT0FBTyxpRUFBZSxxRkFBTyxJQUFJLHFGQUFPLFVBQVUscUZBQU8sbUJBQW1CLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZXZlcmIteHIvLi9zcmMvc3R5bGVzL21haW4uY3NzP2U4MGEiXSwic291cmNlc0NvbnRlbnQiOlsiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL21haW4uY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9tYWluLmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/styles/main.css\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = __webpack_modules__;
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/ensure chunk */
/******/ 	(() => {
/******/ 		__webpack_require__.f = {};
/******/ 		// This file contains only the entry chunk.
/******/ 		// The chunk loading function for additional chunks
/******/ 		__webpack_require__.e = (chunkId) => {
/******/ 			return Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {
/******/ 				__webpack_require__.f[key](chunkId, promises);
/******/ 				return promises;
/******/ 			}, []));
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/get javascript chunk filename */
/******/ 	(() => {
/******/ 		// This function allow to reference async chunks
/******/ 		__webpack_require__.u = (chunkId) => {
/******/ 			// return url for filenames based on template
/******/ 			return "" + chunkId + ".bundle.js";
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/load script */
/******/ 	(() => {
/******/ 		var inProgress = {};
/******/ 		var dataWebpackPrefix = "reverb-xr:";
/******/ 		// loadScript function to load a script via script tag
/******/ 		__webpack_require__.l = (url, done, key, chunkId) => {
/******/ 			if(inProgress[url]) { inProgress[url].push(done); return; }
/******/ 			var script, needAttach;
/******/ 			if(key !== undefined) {
/******/ 				var scripts = document.getElementsByTagName("script");
/******/ 				for(var i = 0; i < scripts.length; i++) {
/******/ 					var s = scripts[i];
/******/ 					if(s.getAttribute("src") == url || s.getAttribute("data-webpack") == dataWebpackPrefix + key) { script = s; break; }
/******/ 				}
/******/ 			}
/******/ 			if(!script) {
/******/ 				needAttach = true;
/******/ 				script = document.createElement('script');
/******/ 		
/******/ 				script.charset = 'utf-8';
/******/ 				script.timeout = 120;
/******/ 				if (__webpack_require__.nc) {
/******/ 					script.setAttribute("nonce", __webpack_require__.nc);
/******/ 				}
/******/ 				script.setAttribute("data-webpack", dataWebpackPrefix + key);
/******/ 		
/******/ 				script.src = url;
/******/ 			}
/******/ 			inProgress[url] = [done];
/******/ 			var onScriptComplete = (prev, event) => {
/******/ 				// avoid mem leaks in IE.
/******/ 				script.onerror = script.onload = null;
/******/ 				clearTimeout(timeout);
/******/ 				var doneFns = inProgress[url];
/******/ 				delete inProgress[url];
/******/ 				script.parentNode && script.parentNode.removeChild(script);
/******/ 				doneFns && doneFns.forEach((fn) => (fn(event)));
/******/ 				if(prev) return prev(event);
/******/ 			}
/******/ 			var timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);
/******/ 			script.onerror = onScriptComplete.bind(null, script.onerror);
/******/ 			script.onload = onScriptComplete.bind(null, script.onload);
/******/ 			needAttach && document.head.appendChild(script);
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/publicPath */
/******/ 	(() => {
/******/ 		__webpack_require__.p = "/";
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/jsonp chunk loading */
/******/ 	(() => {
/******/ 		// no baseURI
/******/ 		
/******/ 		// object to store loaded and loading chunks
/******/ 		// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 		// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded
/******/ 		var installedChunks = {
/******/ 			"main": 0
/******/ 		};
/******/ 		
/******/ 		__webpack_require__.f.j = (chunkId, promises) => {
/******/ 				// JSONP chunk loading for javascript
/******/ 				var installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;
/******/ 				if(installedChunkData !== 0) { // 0 means "already installed".
/******/ 		
/******/ 					// a Promise means "currently loading".
/******/ 					if(installedChunkData) {
/******/ 						promises.push(installedChunkData[2]);
/******/ 					} else {
/******/ 						if(true) { // all chunks have JS
/******/ 							// setup Promise in chunk cache
/******/ 							var promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));
/******/ 							promises.push(installedChunkData[2] = promise);
/******/ 		
/******/ 							// start chunk loading
/******/ 							var url = __webpack_require__.p + __webpack_require__.u(chunkId);
/******/ 							// create error before stack unwound to get useful stacktrace later
/******/ 							var error = new Error();
/******/ 							var loadingEnded = (event) => {
/******/ 								if(__webpack_require__.o(installedChunks, chunkId)) {
/******/ 									installedChunkData = installedChunks[chunkId];
/******/ 									if(installedChunkData !== 0) installedChunks[chunkId] = undefined;
/******/ 									if(installedChunkData) {
/******/ 										var errorType = event && (event.type === 'load' ? 'missing' : event.type);
/******/ 										var realSrc = event && event.target && event.target.src;
/******/ 										error.message = 'Loading chunk ' + chunkId + ' failed.\n(' + errorType + ': ' + realSrc + ')';
/******/ 										error.name = 'ChunkLoadError';
/******/ 										error.type = errorType;
/******/ 										error.request = realSrc;
/******/ 										installedChunkData[1](error);
/******/ 									}
/******/ 								}
/******/ 							};
/******/ 							__webpack_require__.l(url, loadingEnded, "chunk-" + chunkId, chunkId);
/******/ 						}
/******/ 					}
/******/ 				}
/******/ 		};
/******/ 		
/******/ 		// no prefetching
/******/ 		
/******/ 		// no preloaded
/******/ 		
/******/ 		// no HMR
/******/ 		
/******/ 		// no HMR manifest
/******/ 		
/******/ 		// no on chunks loaded
/******/ 		
/******/ 		// install a JSONP callback for chunk loading
/******/ 		var webpackJsonpCallback = (parentChunkLoadingFunction, data) => {
/******/ 			var [chunkIds, moreModules, runtime] = data;
/******/ 			// add "moreModules" to the modules object,
/******/ 			// then flag all "chunkIds" as loaded and fire callback
/******/ 			var moduleId, chunkId, i = 0;
/******/ 			if(chunkIds.some((id) => (installedChunks[id] !== 0))) {
/******/ 				for(moduleId in moreModules) {
/******/ 					if(__webpack_require__.o(moreModules, moduleId)) {
/******/ 						__webpack_require__.m[moduleId] = moreModules[moduleId];
/******/ 					}
/******/ 				}
/******/ 				if(runtime) var result = runtime(__webpack_require__);
/******/ 			}
/******/ 			if(parentChunkLoadingFunction) parentChunkLoadingFunction(data);
/******/ 			for(;i < chunkIds.length; i++) {
/******/ 				chunkId = chunkIds[i];
/******/ 				if(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 					installedChunks[chunkId][0]();
/******/ 				}
/******/ 				installedChunks[chunkId] = 0;
/******/ 			}
/******/ 		
/******/ 		}
/******/ 		
/******/ 		var chunkLoadingGlobal = self["webpackChunkreverb_xr"] = self["webpackChunkreverb_xr"] || [];
/******/ 		chunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));
/******/ 		chunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/nonce */
/******/ 	(() => {
/******/ 		__webpack_require__.nc = undefined;
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/main.js");
/******/ 	
/******/ })()
;