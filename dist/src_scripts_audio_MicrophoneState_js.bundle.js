"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkreverb_xr"] = self["webpackChunkreverb_xr"] || []).push([["src_scripts_audio_MicrophoneState_js"],{

/***/ "./src/scripts/audio/MicrophoneState.js":
/*!**********************************************!*\
  !*** ./src/scripts/audio/MicrophoneState.js ***!
  \**********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MicrophoneState: () => (/* binding */ MicrophoneState)\n/* harmony export */ });\n/* harmony import */ var _InitializedState_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./InitializedState.js */ \"./src/scripts/audio/InitializedState.js\");\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _possibleConstructorReturn(t, e) { if (e && (\"object\" == _typeof(e) || \"function\" == typeof e)) return e; if (void 0 !== e) throw new TypeError(\"Derived constructors may only return object or undefined\"); return _assertThisInitialized(t); }\nfunction _assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); return e; }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _getPrototypeOf(t) { return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, _getPrototypeOf(t); }\nfunction _inherits(t, e) { if (\"function\" != typeof e && null !== e) throw new TypeError(\"Super expression must either be null or a function\"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, \"prototype\", { writable: !1 }), e && _setPrototypeOf(t, e); }\nfunction _setPrototypeOf(t, e) { return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, _setPrototypeOf(t, e); }\n\n\n/**\r\n * State for handling microphone input\r\n * Extends the base InitializedState to inherit common functionality\r\n */\nvar MicrophoneState = /*#__PURE__*/function (_InitializedState) {\n  /**\r\n   * @param {AudioContext} audioContext - The audio context\r\n   * @param {AnalyserNode} analyser - The analyzer node\r\n   * @param {MediaStreamAudioSourceNode} source - The audio source node\r\n   * @param {MediaStream} stream - The microphone media stream\r\n   */\n  function MicrophoneState(audioContext, analyser, source, stream) {\n    var _this;\n    _classCallCheck(this, MicrophoneState);\n    _this = _callSuper(this, MicrophoneState, [audioContext, analyser]);\n    _this.stream = stream;\n    _this.source = source;\n\n    // For microphone input, we need to break the output connection\n    // to prevent feedback loops (the mic picking up its own output)\n\n    // First disconnect any existing connections from analyzer to prevent feedback\n    try {\n      _this.analyser.disconnect();\n    } catch (e) {\n      // Ignore disconnect errors\n    }\n\n    // For visualization only: reconnect analyzer to gain node, but keep gain at 0\n    // This ensures we can visualize the audio without creating feedback\n    if (_this.gainNode) {\n      _this.analyser.connect(_this.gainNode);\n      // Set gain to 0 to prevent any sound output and feedback\n      _this.gainNode.gain.value = 0;\n    }\n    return _this;\n  }\n\n  /**\r\n   * Override setVolume to prevent accidental unmuting of microphone\r\n   * For microphone input, we always keep the gain at 0 to prevent feedback\r\n   * @param {number} volume - Volume level (ignored for mic input)\r\n   */\n  _inherits(MicrophoneState, _InitializedState);\n  return _createClass(MicrophoneState, [{\n    key: \"setVolume\",\n    value: function setVolume(volume) {\n      // Always keep mic input volume at 0 to prevent feedback\n      if (this.gainNode) {\n        this.gainNode.gain.value = 0;\n      }\n      console.log('Microphone input volume is always muted to prevent feedback');\n    }\n\n    /**\r\n     * Stops microphone input and returns to initialized state\r\n     * @returns {InitializedState} Base initialized state\r\n     */\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      if (this.source) {\n        this.source.disconnect();\n      }\n\n      // Stop all tracks in the stream\n      if (this.stream && this.stream.getTracks) {\n        this.stream.getTracks().forEach(function (track) {\n          return track.stop();\n        });\n      }\n\n      // No need to create a new InitializedState since we already extend it\n      this.source = null;\n      return this;\n    }\n  }]);\n}(_InitializedState_js__WEBPACK_IMPORTED_MODULE_0__.InitializedState);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9hdWRpby9NaWNyb3Bob25lU3RhdGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQXlEOztBQUV6RDtBQUNBO0FBQ0E7QUFDQTtBQUNPLElBQU1DLGVBQWUsMEJBQUFDLGlCQUFBO0VBQzFCO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtFQUNFLFNBQUFELGdCQUFZRSxZQUFZLEVBQUVDLFFBQVEsRUFBRUMsTUFBTSxFQUFFQyxNQUFNLEVBQUU7SUFBQSxJQUFBQyxLQUFBO0lBQUFDLGVBQUEsT0FBQVAsZUFBQTtJQUNsRE0sS0FBQSxHQUFBRSxVQUFBLE9BQUFSLGVBQUEsR0FBTUUsWUFBWSxFQUFFQyxRQUFRO0lBQzVCRyxLQUFBLENBQUtELE1BQU0sR0FBR0EsTUFBTTtJQUNwQkMsS0FBQSxDQUFLRixNQUFNLEdBQUdBLE1BQU07O0lBRXBCO0lBQ0E7O0lBRUE7SUFDQSxJQUFJO01BQ0ZFLEtBQUEsQ0FBS0gsUUFBUSxDQUFDTSxVQUFVLENBQUMsQ0FBQztJQUM1QixDQUFDLENBQUMsT0FBT0MsQ0FBQyxFQUFFO01BQ1Y7SUFBQTs7SUFHRjtJQUNBO0lBQ0EsSUFBSUosS0FBQSxDQUFLSyxRQUFRLEVBQUU7TUFDakJMLEtBQUEsQ0FBS0gsUUFBUSxDQUFDUyxPQUFPLENBQUNOLEtBQUEsQ0FBS0ssUUFBUSxDQUFDO01BQ3BDO01BQ0FMLEtBQUEsQ0FBS0ssUUFBUSxDQUFDRSxJQUFJLENBQUNDLEtBQUssR0FBRyxDQUFDO0lBQzlCO0lBQUMsT0FBQVIsS0FBQTtFQUNIOztFQUVBO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7RUFKRVMsU0FBQSxDQUFBZixlQUFBLEVBQUFDLGlCQUFBO0VBQUEsT0FBQWUsWUFBQSxDQUFBaEIsZUFBQTtJQUFBaUIsR0FBQTtJQUFBSCxLQUFBLEVBS0EsU0FBQUksU0FBU0EsQ0FBQ0MsTUFBTSxFQUFFO01BQ2hCO01BQ0EsSUFBSSxJQUFJLENBQUNSLFFBQVEsRUFBRTtRQUNqQixJQUFJLENBQUNBLFFBQVEsQ0FBQ0UsSUFBSSxDQUFDQyxLQUFLLEdBQUcsQ0FBQztNQUM5QjtNQUNBTSxPQUFPLENBQUNDLEdBQUcsQ0FBQyw2REFBNkQsQ0FBQztJQUM1RTs7SUFFQTtBQUNGO0FBQ0E7QUFDQTtFQUhFO0lBQUFKLEdBQUE7SUFBQUgsS0FBQSxFQUlBLFNBQUFRLElBQUlBLENBQUEsRUFBRztNQUNMLElBQUksSUFBSSxDQUFDbEIsTUFBTSxFQUFFO1FBQ2YsSUFBSSxDQUFDQSxNQUFNLENBQUNLLFVBQVUsQ0FBQyxDQUFDO01BQzFCOztNQUVBO01BQ0EsSUFBSSxJQUFJLENBQUNKLE1BQU0sSUFBSSxJQUFJLENBQUNBLE1BQU0sQ0FBQ2tCLFNBQVMsRUFBRTtRQUN4QyxJQUFJLENBQUNsQixNQUFNLENBQUNrQixTQUFTLENBQUMsQ0FBQyxDQUFDQyxPQUFPLENBQUMsVUFBQUMsS0FBSztVQUFBLE9BQUlBLEtBQUssQ0FBQ0gsSUFBSSxDQUFDLENBQUM7UUFBQSxFQUFDO01BQ3hEOztNQUVBO01BQ0EsSUFBSSxDQUFDbEIsTUFBTSxHQUFHLElBQUk7TUFDbEIsT0FBTyxJQUFJO0lBQ2I7RUFBQztBQUFBLEVBN0RrQ0wsa0VBQWdCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmV2ZXJiLXhyLy4vc3JjL3NjcmlwdHMvYXVkaW8vTWljcm9waG9uZVN0YXRlLmpzPzVmZTEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5pdGlhbGl6ZWRTdGF0ZSB9IGZyb20gXCIuL0luaXRpYWxpemVkU3RhdGUuanNcIjtcclxuXHJcbi8qKlxyXG4gKiBTdGF0ZSBmb3IgaGFuZGxpbmcgbWljcm9waG9uZSBpbnB1dFxyXG4gKiBFeHRlbmRzIHRoZSBiYXNlIEluaXRpYWxpemVkU3RhdGUgdG8gaW5oZXJpdCBjb21tb24gZnVuY3Rpb25hbGl0eVxyXG4gKi9cclxuZXhwb3J0IGNsYXNzIE1pY3JvcGhvbmVTdGF0ZSBleHRlbmRzIEluaXRpYWxpemVkU3RhdGUge1xyXG4gIC8qKlxyXG4gICAqIEBwYXJhbSB7QXVkaW9Db250ZXh0fSBhdWRpb0NvbnRleHQgLSBUaGUgYXVkaW8gY29udGV4dFxyXG4gICAqIEBwYXJhbSB7QW5hbHlzZXJOb2RlfSBhbmFseXNlciAtIFRoZSBhbmFseXplciBub2RlXHJcbiAgICogQHBhcmFtIHtNZWRpYVN0cmVhbUF1ZGlvU291cmNlTm9kZX0gc291cmNlIC0gVGhlIGF1ZGlvIHNvdXJjZSBub2RlXHJcbiAgICogQHBhcmFtIHtNZWRpYVN0cmVhbX0gc3RyZWFtIC0gVGhlIG1pY3JvcGhvbmUgbWVkaWEgc3RyZWFtXHJcbiAgICovXHJcbiAgY29uc3RydWN0b3IoYXVkaW9Db250ZXh0LCBhbmFseXNlciwgc291cmNlLCBzdHJlYW0pIHtcclxuICAgIHN1cGVyKGF1ZGlvQ29udGV4dCwgYW5hbHlzZXIpO1xyXG4gICAgdGhpcy5zdHJlYW0gPSBzdHJlYW07XHJcbiAgICB0aGlzLnNvdXJjZSA9IHNvdXJjZTtcclxuICAgIFxyXG4gICAgLy8gRm9yIG1pY3JvcGhvbmUgaW5wdXQsIHdlIG5lZWQgdG8gYnJlYWsgdGhlIG91dHB1dCBjb25uZWN0aW9uXHJcbiAgICAvLyB0byBwcmV2ZW50IGZlZWRiYWNrIGxvb3BzICh0aGUgbWljIHBpY2tpbmcgdXAgaXRzIG93biBvdXRwdXQpXHJcbiAgICBcclxuICAgIC8vIEZpcnN0IGRpc2Nvbm5lY3QgYW55IGV4aXN0aW5nIGNvbm5lY3Rpb25zIGZyb20gYW5hbHl6ZXIgdG8gcHJldmVudCBmZWVkYmFja1xyXG4gICAgdHJ5IHtcclxuICAgICAgdGhpcy5hbmFseXNlci5kaXNjb25uZWN0KCk7XHJcbiAgICB9IGNhdGNoIChlKSB7XHJcbiAgICAgIC8vIElnbm9yZSBkaXNjb25uZWN0IGVycm9yc1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAvLyBGb3IgdmlzdWFsaXphdGlvbiBvbmx5OiByZWNvbm5lY3QgYW5hbHl6ZXIgdG8gZ2FpbiBub2RlLCBidXQga2VlcCBnYWluIGF0IDBcclxuICAgIC8vIFRoaXMgZW5zdXJlcyB3ZSBjYW4gdmlzdWFsaXplIHRoZSBhdWRpbyB3aXRob3V0IGNyZWF0aW5nIGZlZWRiYWNrXHJcbiAgICBpZiAodGhpcy5nYWluTm9kZSkge1xyXG4gICAgICB0aGlzLmFuYWx5c2VyLmNvbm5lY3QodGhpcy5nYWluTm9kZSk7XHJcbiAgICAgIC8vIFNldCBnYWluIHRvIDAgdG8gcHJldmVudCBhbnkgc291bmQgb3V0cHV0IGFuZCBmZWVkYmFja1xyXG4gICAgICB0aGlzLmdhaW5Ob2RlLmdhaW4udmFsdWUgPSAwO1xyXG4gICAgfVxyXG4gIH1cclxuICBcclxuICAvKipcclxuICAgKiBPdmVycmlkZSBzZXRWb2x1bWUgdG8gcHJldmVudCBhY2NpZGVudGFsIHVubXV0aW5nIG9mIG1pY3JvcGhvbmVcclxuICAgKiBGb3IgbWljcm9waG9uZSBpbnB1dCwgd2UgYWx3YXlzIGtlZXAgdGhlIGdhaW4gYXQgMCB0byBwcmV2ZW50IGZlZWRiYWNrXHJcbiAgICogQHBhcmFtIHtudW1iZXJ9IHZvbHVtZSAtIFZvbHVtZSBsZXZlbCAoaWdub3JlZCBmb3IgbWljIGlucHV0KVxyXG4gICAqL1xyXG4gIHNldFZvbHVtZSh2b2x1bWUpIHtcclxuICAgIC8vIEFsd2F5cyBrZWVwIG1pYyBpbnB1dCB2b2x1bWUgYXQgMCB0byBwcmV2ZW50IGZlZWRiYWNrXHJcbiAgICBpZiAodGhpcy5nYWluTm9kZSkge1xyXG4gICAgICB0aGlzLmdhaW5Ob2RlLmdhaW4udmFsdWUgPSAwO1xyXG4gICAgfVxyXG4gICAgY29uc29sZS5sb2coJ01pY3JvcGhvbmUgaW5wdXQgdm9sdW1lIGlzIGFsd2F5cyBtdXRlZCB0byBwcmV2ZW50IGZlZWRiYWNrJyk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBTdG9wcyBtaWNyb3Bob25lIGlucHV0IGFuZCByZXR1cm5zIHRvIGluaXRpYWxpemVkIHN0YXRlXHJcbiAgICogQHJldHVybnMge0luaXRpYWxpemVkU3RhdGV9IEJhc2UgaW5pdGlhbGl6ZWQgc3RhdGVcclxuICAgKi9cclxuICBzdG9wKCkge1xyXG4gICAgaWYgKHRoaXMuc291cmNlKSB7XHJcbiAgICAgIHRoaXMuc291cmNlLmRpc2Nvbm5lY3QoKTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgLy8gU3RvcCBhbGwgdHJhY2tzIGluIHRoZSBzdHJlYW1cclxuICAgIGlmICh0aGlzLnN0cmVhbSAmJiB0aGlzLnN0cmVhbS5nZXRUcmFja3MpIHtcclxuICAgICAgdGhpcy5zdHJlYW0uZ2V0VHJhY2tzKCkuZm9yRWFjaCh0cmFjayA9PiB0cmFjay5zdG9wKCkpO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAvLyBObyBuZWVkIHRvIGNyZWF0ZSBhIG5ldyBJbml0aWFsaXplZFN0YXRlIHNpbmNlIHdlIGFscmVhZHkgZXh0ZW5kIGl0XHJcbiAgICB0aGlzLnNvdXJjZSA9IG51bGw7XHJcbiAgICByZXR1cm4gdGhpcztcclxuICB9XHJcbn1cclxuIl0sIm5hbWVzIjpbIkluaXRpYWxpemVkU3RhdGUiLCJNaWNyb3Bob25lU3RhdGUiLCJfSW5pdGlhbGl6ZWRTdGF0ZSIsImF1ZGlvQ29udGV4dCIsImFuYWx5c2VyIiwic291cmNlIiwic3RyZWFtIiwiX3RoaXMiLCJfY2xhc3NDYWxsQ2hlY2siLCJfY2FsbFN1cGVyIiwiZGlzY29ubmVjdCIsImUiLCJnYWluTm9kZSIsImNvbm5lY3QiLCJnYWluIiwidmFsdWUiLCJfaW5oZXJpdHMiLCJfY3JlYXRlQ2xhc3MiLCJrZXkiLCJzZXRWb2x1bWUiLCJ2b2x1bWUiLCJjb25zb2xlIiwibG9nIiwic3RvcCIsImdldFRyYWNrcyIsImZvckVhY2giLCJ0cmFjayJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/scripts/audio/MicrophoneState.js\n");

/***/ })

}]);